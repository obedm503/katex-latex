{"version":3,"file":"showdown-katex.js","sources":["../node_modules/katex/dist/katex.js","../node_modules/katex/dist/katex.mjs","../node_modules/katex/dist/contrib/auto-render.mjs","../src/asciimath-to-tex.js","../src/showdown-katex.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"katex\"] = factory();\n\telse\n\t\troot[\"katex\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/katex.less\nvar katex = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/SourceLocation.js\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation =\n/*#__PURE__*/\nfunction () {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  function SourceLocation(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  SourceLocation.range = function range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  };\n\n  return SourceLocation;\n}();\n\n\n// CONCATENATED MODULE: ./src/Token.js\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nvar Token_Token =\n/*#__PURE__*/\nfunction () {\n  function Token(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.range = function range(endToken, // last token of the range, inclusive\n  text) // the text of the newly constructed token\n  {\n    return new Token(text, SourceLocation.range(this, endToken));\n  };\n\n  return Token;\n}();\n// CONCATENATED MODULE: ./src/ParseError.js\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError = // Error position based on passed-in Token or ParseNode.\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n  this.position = void 0;\n  var error = \"KaTeX parse error: \" + message;\n  var start;\n  var loc = token && token.loc;\n\n  if (loc && loc.start <= loc.end) {\n    // If we have the input and a position, make the error a bit fancier\n    // Get the input\n    var input = loc.lexer.input; // Prepend some information\n\n    start = loc.start;\n    var end = loc.end;\n\n    if (start === input.length) {\n      error += \" at end of input: \";\n    } else {\n      error += \" at position \" + (start + 1) + \": \";\n    } // Underline token in question using combining underscores\n\n\n    var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n    var left;\n\n    if (start > 15) {\n      left = \"…\" + input.slice(start - 15, start);\n    } else {\n      left = input.slice(0, start);\n    }\n\n    var right;\n\n    if (end + 15 < input.length) {\n      right = input.slice(end, end + 15) + \"…\";\n    } else {\n      right = input.slice(end);\n    }\n\n    error += left + underlined + right;\n  } // Some hackery to make ParseError a prototype of Error\n  // See http://stackoverflow.com/a/8460753\n\n\n  var self = new Error(error);\n  self.name = \"ParseError\"; // $FlowFixMe\n\n  self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n  self.position = start;\n  return self;\n}; // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n/* harmony default export */ var src_ParseError = (ParseError);\n// CONCATENATED MODULE: ./src/utils.js\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction utils_escape(text) {\n  return String(text).replace(ESCAPE_REGEX, function (match) {\n    return ESCAPE_LOOKUP[match];\n  });\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar utils_isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/* harmony default export */ var utils = ({\n  contains: contains,\n  deflt: deflt,\n  escape: utils_escape,\n  hyphenate: hyphenate,\n  getBaseElem: getBaseElem,\n  isCharacterBox: utils_isCharacterBox\n});\n// CONCATENATED MODULE: ./src/Settings.js\n/* eslint no-console:0 */\n\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings_Settings =\n/*#__PURE__*/\nfunction () {\n  function Settings(options) {\n    this.displayMode = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.allowedProtocols = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.allowedProtocols = utils.deflt(options.allowedProtocols, [\"http\", \"https\", \"mailto\", \"_relative\"]);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  var _proto = Settings.prototype;\n\n  _proto.reportNonstrict = function reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new src_ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n  ;\n\n  _proto.useStrictBehavior = function useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  };\n\n  return Settings;\n}();\n\n/* harmony default export */ var src_Settings = (Settings_Settings);\n// CONCATENATED MODULE: ./src/Style.js\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style =\n/*#__PURE__*/\nfunction () {\n  function Style(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  var _proto = Style.prototype;\n\n  _proto.sup = function sup() {\n    return Style_styles[_sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n  ;\n\n  _proto.sub = function sub() {\n    return Style_styles[_sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracNum = function fracNum() {\n    return Style_styles[_fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracDen = function fracDen() {\n    return Style_styles[_fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n  ;\n\n  _proto.cramp = function cramp() {\n    return Style_styles[_cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n  ;\n\n  _proto.text = function text() {\n    return Style_styles[_text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n  ;\n\n  _proto.isTight = function isTight() {\n    return this.size >= 2;\n  };\n\n  return Style;\n}(); // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar Style_styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\n/* harmony default export */ var src_Style = ({\n  DISPLAY: Style_styles[D],\n  TEXT: Style_styles[T],\n  SCRIPT: Style_styles[S],\n  SCRIPTSCRIPT: Style_styles[SS]\n});\n// CONCATENATED MODULE: ./src/unicodeScripts.js\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f]]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60]]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(function (s) {\n  return s.blocks.forEach(function (b) {\n    return allBlocks.push.apply(allBlocks, b);\n  });\n});\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n// CONCATENATED MODULE: ./src/svgGeometry.js\n/**\n * This file provides support to domTree.js\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt viniculum.\n\nvar svgGeometry_path = {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  // All surds have 80 units padding above the viniculumn.\n  sqrtMain: \"M95,\" + (622 + hLinePad) + \"c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\\ns-65,47,-65,47z M834 \" + hLinePad + \"H400000v40H845z\",\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  sqrtSize1: \"M263,\" + (601 + hLinePad) + \"c0.7,0,18,39.7,52,119c34,79.3,68.167,\\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\\ns76,-59,76,-59s76,-60,76,-60z M1001 \" + hLinePad + \"H40000v40H1012z\",\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  // The 80 units padding is most obvious here. Note start node at M1001 80.\n  sqrtSize2: \"M1001,\" + hLinePad + \"H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\\nM1001 \" + hLinePad + \"H400000v40H1013z\",\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  sqrtSize3: \"M424,\" + (2398 + hLinePad) + \"c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M1001 \" + hLinePad + \"H400000v40H1014z\",\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  sqrtSize4: \"M473,\" + (2713 + hLinePad) + \"c339.3,-1799.3,509.3,-2700,510,-2702\\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\\nM1001 \" + hLinePad + \"H400000v40H1017z\",\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n/* harmony default export */ var svgGeometry = ({\n  path: svgGeometry_path\n});\n// CONCATENATED MODULE: ./src/tree.js\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nvar tree_DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  function DocumentFragment(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  var _proto = DocumentFragment.prototype;\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n  ;\n\n  _proto.toNode = function toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = function toText(child) {\n      return child.toText();\n    };\n\n    return this.children.map(toText).join(\"\");\n  };\n\n  return DocumentFragment;\n}();\n// CONCATENATED MODULE: ./src/domTree.js\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(function (cls) {\n    return cls;\n  }).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar _toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nvar _toMarkup = function toMarkup(tagName) {\n  var markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  var styles = \"\"; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nvar domTree_Span =\n/*#__PURE__*/\nfunction () {\n  function Span(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  var _proto = Span.prototype;\n\n  _proto.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto.toNode = function toNode() {\n    return _toNode.call(this, \"span\");\n  };\n\n  _proto.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, \"span\");\n  };\n\n  return Span;\n}();\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nvar domTree_Anchor =\n/*#__PURE__*/\nfunction () {\n  function Anchor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  var _proto2 = Anchor.prototype;\n\n  _proto2.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto2.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto2.toNode = function toNode() {\n    return _toNode.call(this, \"a\");\n  };\n\n  _proto2.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, \"a\");\n  };\n\n  return Anchor;\n}();\n/**\n * This node represents an image embed (<img>) element.\n */\n\nvar domTree_Img =\n/*#__PURE__*/\nfunction () {\n  function Img(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  var _proto3 = Img.prototype;\n\n  _proto3.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto3.toNode = function toNode() {\n    var node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  };\n\n  _proto3.toMarkup = function toMarkup() {\n    var markup = \"<img  src='\" + this.src + \" 'alt='\" + this.alt + \"' \"; // Add the styles, after hyphenation\n\n    var styles = \"\";\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    markup += \"'/>\";\n    return markup;\n  };\n\n  return Img;\n}();\nvar iCombinations = {\n  'î': \"\\u0131\\u0302\",\n  'ï': \"\\u0131\\u0308\",\n  'í': \"\\u0131\\u0301\",\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': \"\\u0131\\u0300\"\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nvar domTree_SymbolNode =\n/*#__PURE__*/\nfunction () {\n  function SymbolNode(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  var _proto4 = SymbolNode.prototype;\n\n  _proto4.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n  ;\n\n  _proto4.toNode = function toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n  ;\n\n  _proto4.toMarkup = function toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  };\n\n  return SymbolNode;\n}();\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nvar SvgNode =\n/*#__PURE__*/\nfunction () {\n  function SvgNode(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  var _proto5 = SvgNode.prototype;\n\n  _proto5.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  };\n\n  _proto5.toMarkup = function toMarkup() {\n    var markup = \"<svg\"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  };\n\n  return SvgNode;\n}();\nvar domTree_PathNode =\n/*#__PURE__*/\nfunction () {\n  function PathNode(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for tall \\sqrt\n  }\n\n  var _proto6 = PathNode.prototype;\n\n  _proto6.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", svgGeometry.path[this.pathName]);\n    }\n\n    return node;\n  };\n\n  _proto6.toMarkup = function toMarkup() {\n    if (this.alternate) {\n      return \"<path d='\" + this.alternate + \"'/>\";\n    } else {\n      return \"<path d='\" + svgGeometry.path[this.pathName] + \"'/>\";\n    }\n  };\n\n  return PathNode;\n}();\nvar LineNode =\n/*#__PURE__*/\nfunction () {\n  function LineNode(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  var _proto7 = LineNode.prototype;\n\n  _proto7.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  };\n\n  _proto7.toMarkup = function toMarkup() {\n    var markup = \"<line\";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  };\n\n  return LineNode;\n}();\nfunction assertSymbolDomNode(group) {\n  if (group instanceof domTree_SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof domTree_Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n// CONCATENATED MODULE: ./submodules/katex-fonts/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n  \"AMS-Regular\": {\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n  },\n  \"Fraktur-Regular\": {\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333]\n  },\n  \"Math-Italic\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"Math-Regular\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"SansSerif-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n  },\n  \"Size1-Regular\": {\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n});\n// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2]\n}; // This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ç': 'C',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ç': 'c',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  var ch = character.charCodeAt(0);\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = fontMetricsData[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n// CONCATENATED MODULE: ./src/symbols.js\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nvar NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nvar symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font: font,\n    group: group,\n    replace: replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar symbols_math = \"math\";\nvar symbols_text = \"text\"; // fonts:\n\nvar main = \"main\";\nvar ams = \"ams\"; // groups:\n\nvar symbols_accent = \"accent-token\";\nvar bin = \"bin\";\nvar symbols_close = \"close\";\nvar symbols_inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar symbols_open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar symbols_spacing = \"spacing\";\nvar symbols_textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(symbols_math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227A\", \"\\\\prec\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227B\", \"\\\\succ\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u223C\", \"\\\\sim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A5\", \"\\\\perp\");\ndefineSymbol(symbols_math, main, rel, \"\\u2AAF\", \"\\\\preceq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2AB0\", \"\\\\succeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226A\", \"\\\\ll\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226B\", \"\\\\gg\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u224D\", \"\\\\asymp\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\bowtie\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\ni\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u221D\", \"\\\\propto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A2\", \"\\\\vdash\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A3\", \"\\\\dashv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(symbols_math, main, punct, \".\", \"\\\\ldotp\");\ndefineSymbol(symbols_math, main, punct, \"\\u22C5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(symbols_math, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_text, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_math, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_text, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u210F\", \"\\\\hbar\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266D\", \"\\\\flat\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266E\", \"\\\\natural\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266F\", \"\\\\sharp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u211C\", \"\\\\Re\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xA7\", \"\\\\S\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB6\", \"\\\\P\", true); // Math and Text\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(symbols_math, main, symbols_close, \"\\u23B1\", \"\\\\rmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u23B0\", \"\\\\lmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27EF\", \"\\\\rgroup\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27EE\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(symbols_math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u228E\", \"\\\\uplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(symbols_math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25EF\", \"\\\\bigcirc\");\ndefineSymbol(symbols_math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(symbols_math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2A3F\", \"\\\\amalg\");\ndefineSymbol(symbols_math, main, bin, \"&\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(symbols_math, main, rel, \"\\u27F5\", \"\\\\longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D0\", \"\\\\Leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F6\", \"\\\\longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D2\", \"\\\\Rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FA\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A6\", \"\\\\mapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FC\", \"\\\\longmapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21AA\", \"\\\\hookrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BC\", \"\\\\leftharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BD\", \"\\\\leftharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21CC\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, \"\\u226E\", \"\\\\nless\", true); // Symbol names preceeded by \"@\" each have a corresponding macro.\n\ndefineSymbol(symbols_math, ams, rel, \"\\uE010\", \"\\\\@nleqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE011\", \"\\\\@nleqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A87\", \"\\\\lneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00C\", \"\\\\@lvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E6\", \"\\\\lnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A89\", \"\\\\lnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u22E0\", \"\\\\npreceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E8\", \"\\\\precnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB9\", \"\\\\precnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE006\", \"\\\\@nshortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AC\", \"\\\\nvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AD\", \"\\\\nvDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EA\", \"\\\\ntriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22EC\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228A\", \"\\\\subsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01A\", \"\\\\@varsubsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACB\", \"\\\\subsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226F\", \"\\\\ngtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00F\", \"\\\\@ngeqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE00E\", \"\\\\@ngeqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A88\", \"\\\\gneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00D\", \"\\\\@gvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E7\", \"\\\\gnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8A\", \"\\\\gnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u22E1\", \"\\\\nsucceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E9\", \"\\\\succnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2ABA\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE007\", \"\\\\@nshortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AF\", \"\\\\nVDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EB\", \"\\\\ntriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22ED\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE018\", \"\\\\@nsupseteqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u228B\", \"\\\\supsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01B\", \"\\\\@varsupsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACC\", \"\\\\supsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22AE\", \"\\\\nVdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB5\", \"\\\\precneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB6\", \"\\\\succneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE016\", \"\\\\@nsubseteqq\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B4\", \"\\\\unlhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(symbols_math, ams, rel, \"\\u219A\", \"\\\\nleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219B\", \"\\\\nrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CD\", \"\\\\nLeftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CF\", \"\\\\nRightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AE\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CE\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(symbols_math, ams, rel, \"\\u25B3\", \"\\\\vartriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u210F\", \"\\\\hslash\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BD\", \"\\\\triangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\lozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u24C8\", \"\\\\circledS\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25B2\", \"\\\\blacktriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BC\", \"\\\\blacktriangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A0\", \"\\\\blacksquare\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u29EB\", \"\\\\blacklozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xF0\", \"\\\\eth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\square\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\Box\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03DD\", \"\\\\digamma\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03F0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u250C\", \"\\\\ulcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2518\", \"\\\\lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7D\", \"\\\\leqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A95\", \"\\\\eqslantless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A85\", \"\\\\lessapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224A\", \"\\\\approxeq\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D6\", \"\\\\lessdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\lll\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DA\", \"\\\\lesseqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8B\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223D\", \"\\\\backsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22CD\", \"\\\\backsimeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC5\", \"\\\\subseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D0\", \"\\\\Subset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228F\", \"\\\\sqsubset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227C\", \"\\\\preccurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DE\", \"\\\\curlyeqprec\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227E\", \"\\\\precsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB7\", \"\\\\precapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B2\", \"\\\\vartriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B4\", \"\\\\trianglelefteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A8\", \"\\\\vDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AA\", \"\\\\Vvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(symbols_math, ams, rel, \"\\u224F\", \"\\\\bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224E\", \"\\\\Bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7E\", \"\\\\geqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A86\", \"\\\\gtrapprox\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D7\", \"\\\\gtrdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\ggg\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DB\", \"\\\\gtreqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8C\", \"\\\\gtreqqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u225C\", \"\\\\triangleq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223C\", \"\\\\thicksim\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC6\", \"\\\\supseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D1\", \"\\\\Supset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227D\", \"\\\\succcurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DF\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227F\", \"\\\\succsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB8\", \"\\\\succapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B3\", \"\\\\vartriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B5\", \"\\\\trianglerighteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A9\", \"\\\\Vdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226C\", \"\\\\between\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D4\", \"\\\\pitchfork\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u221D\", \"\\\\varpropto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25C0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u220D\", \"\\\\backepsilon\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25B6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\llless\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\gggtr\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B2\", \"\\\\lhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B3\", \"\\\\rhd\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\Join\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(symbols_math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\Cap\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\Cup\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2A5E\", \"\\\\doublebarwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229F\", \"\\\\boxminus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229E\", \"\\\\boxplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C7\", \"\\\\divideontimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C9\", \"\\\\ltimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CA\", \"\\\\rtimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CB\", \"\\\\leftthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CC\", \"\\\\rightthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CF\", \"\\\\curlywedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CE\", \"\\\\curlyvee\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229D\", \"\\\\circleddash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229B\", \"\\\\circledast\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C5\", \"\\\\centerdot\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BA\", \"\\\\intercal\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\doublecap\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\doublecup\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22A0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21E2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21E0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DA\", \"\\\\Lleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219E\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AB\", \"\\\\looparrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CB\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21BA\", \"\\\\circlearrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B0\", \"\\\\Lsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C8\", \"\\\\upuparrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BF\", \"\\\\upharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B8\", \"\\\\multimap\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AD\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AC\", \"\\\\looparrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21BB\", \"\\\\circlearrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B1\", \"\\\\Rsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CA\", \"\\\\downdownarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\upharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C2\", \"\\\\downharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\leadsto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u21DB\", \"\\\\Rrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\restriction\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_math, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(symbols_math, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_text, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_math, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221E\", \"\\\\infty\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u25B3\", \"\\\\triangle\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039B\", \"\\\\Lambda\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039E\", \"\\\\Xi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A0\", \"\\\\Pi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A3\", \"\\\\Sigma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A5\", \"\\\\Upsilon\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A6\", \"\\\\Phi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A8\", \"\\\\Psi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A9\", \"\\\\Omega\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"A\", \"\\u0391\");\ndefineSymbol(symbols_math, main, symbols_textord, \"B\", \"\\u0392\");\ndefineSymbol(symbols_math, main, symbols_textord, \"E\", \"\\u0395\");\ndefineSymbol(symbols_math, main, symbols_textord, \"Z\", \"\\u0396\");\ndefineSymbol(symbols_math, main, symbols_textord, \"H\", \"\\u0397\");\ndefineSymbol(symbols_math, main, symbols_textord, \"I\", \"\\u0399\");\ndefineSymbol(symbols_math, main, symbols_textord, \"K\", \"\\u039A\");\ndefineSymbol(symbols_math, main, symbols_textord, \"M\", \"\\u039C\");\ndefineSymbol(symbols_math, main, symbols_textord, \"N\", \"\\u039D\");\ndefineSymbol(symbols_math, main, symbols_textord, \"O\", \"\\u039F\");\ndefineSymbol(symbols_math, main, symbols_textord, \"P\", \"\\u03A1\");\ndefineSymbol(symbols_math, main, symbols_textord, \"T\", \"\\u03A4\");\ndefineSymbol(symbols_math, main, symbols_textord, \"X\", \"\\u03A7\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\neg\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\lnot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A4\", \"\\\\top\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A5\", \"\\\\bot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(symbols_math, main, mathord, \"\\u03B1\", \"\\\\alpha\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B2\", \"\\\\beta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B3\", \"\\\\gamma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B4\", \"\\\\delta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F5\", \"\\\\epsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B6\", \"\\\\zeta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B7\", \"\\\\eta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B8\", \"\\\\theta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B9\", \"\\\\iota\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BA\", \"\\\\kappa\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BB\", \"\\\\lambda\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BC\", \"\\\\mu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BD\", \"\\\\nu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BE\", \"\\\\xi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BF\", \"\\\\omicron\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C0\", \"\\\\pi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C1\", \"\\\\rho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C3\", \"\\\\sigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C4\", \"\\\\tau\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C5\", \"\\\\upsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D5\", \"\\\\phi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C7\", \"\\\\chi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C8\", \"\\\\psi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C9\", \"\\\\omega\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B5\", \"\\\\varepsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D1\", \"\\\\vartheta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D6\", \"\\\\varpi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F1\", \"\\\\varrho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C2\", \"\\\\varsigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C6\", \"\\\\varphi\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(symbols_math, main, bin, \"+\", \"+\");\ndefineSymbol(symbols_math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C5\", \"\\\\cdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(symbols_math, main, bin, \"\\xF7\", \"\\\\div\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xB1\", \"\\\\pm\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xD7\", \"\\\\times\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u222A\", \"\\\\cup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221A\", \"\\\\surd\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"(\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"[\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27E8\", \"\\\\langle\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \")\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"]\");\ndefineSymbol(symbols_math, main, symbols_close, \"?\", \"?\");\ndefineSymbol(symbols_math, main, symbols_close, \"!\", \"!\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27E9\", \"\\\\rangle\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(symbols_math, main, rel, \"=\", \"=\");\ndefineSymbol(symbols_math, main, rel, \"<\", \"<\");\ndefineSymbol(symbols_math, main, rel, \">\", \">\");\ndefineSymbol(symbols_math, main, rel, \":\", \":\");\ndefineSymbol(symbols_math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(symbols_math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(symbols_math, main, rel, \"\\uE020\", \"\\\\@not\");\ndefineSymbol(symbols_math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A8\", \"\\\\models\");\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(symbols_math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(symbols_math, main, symbols_spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_math, main, symbols_spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_math, main, symbols_spacing, \"\\xA0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(symbols_math, main, symbols_spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"\\\\space\");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_math, main, symbols_spacing, null, \"\\\\nobreak\");\ndefineSymbol(symbols_math, main, symbols_spacing, null, \"\\\\allowbreak\");\ndefineSymbol(symbols_math, main, punct, \",\", \",\");\ndefineSymbol(symbols_math, main, punct, \";\", \";\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BC\", \"\\\\barwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22BB\", \"\\\\veebar\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229A\", \"\\\\circledcirc\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22A1\", \"\\\\boxdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25B3\", \"\\\\bigtriangleup\");\ndefineSymbol(symbols_math, main, bin, \"\\u25BD\", \"\\\\bigtriangledown\");\ndefineSymbol(symbols_math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C4\", \"\\\\diamond\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C6\", \"\\\\star\");\ndefineSymbol(symbols_math, main, bin, \"\\u25C3\", \"\\\\triangleleft\");\ndefineSymbol(symbols_math, main, bin, \"\\u25B9\", \"\\\\triangleright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\lbrace\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\rbrace\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"\\\\lparen\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \"\\\\rparen\");\ndefineSymbol(symbols_text, main, symbols_textord, \"<\", \"\\\\textless\"); // in T1 fontenc\n\ndefineSymbol(symbols_text, main, symbols_textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_open, \"\\u230A\", \"\\\\lfloor\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u230B\", \"\\\\rfloor\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(symbols_text, main, symbols_textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(symbols_math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D1\", \"\\\\Uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D3\", \"\\\\Downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D5\", \"\\\\Updownarrow\", true);\ndefineSymbol(symbols_math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(symbols_math, main, op, \"\\u22C1\", \"\\\\bigvee\");\ndefineSymbol(symbols_math, main, op, \"\\u22C0\", \"\\\\bigwedge\");\ndefineSymbol(symbols_math, main, op, \"\\u2A04\", \"\\\\biguplus\");\ndefineSymbol(symbols_math, main, op, \"\\u22C2\", \"\\\\bigcap\");\ndefineSymbol(symbols_math, main, op, \"\\u22C3\", \"\\\\bigcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\int\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\intop\");\ndefineSymbol(symbols_math, main, op, \"\\u222C\", \"\\\\iint\");\ndefineSymbol(symbols_math, main, op, \"\\u222D\", \"\\\\iiint\");\ndefineSymbol(symbols_math, main, op, \"\\u220F\", \"\\\\prod\");\ndefineSymbol(symbols_math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(symbols_math, main, op, \"\\u2A02\", \"\\\\bigotimes\");\ndefineSymbol(symbols_math, main, op, \"\\u2A01\", \"\\\\bigoplus\");\ndefineSymbol(symbols_math, main, op, \"\\u2A00\", \"\\\\bigodot\");\ndefineSymbol(symbols_math, main, op, \"\\u222E\", \"\\\\oint\");\ndefineSymbol(symbols_math, main, op, \"\\u222F\", \"\\\\oiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2A06\", \"\\\\bigsqcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\smallint\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22EF\", \"\\\\@cdots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22F1\", \"\\\\ddots\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22EE\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CA\", \"\\\\acute\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CB\", \"\\\\grave\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\xA8\", \"\\\\ddot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"~\", \"\\\\tilde\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C9\", \"\\\\bar\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D8\", \"\\\\breve\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C7\", \"\\\\check\");\ndefineSymbol(symbols_math, main, symbols_accent, \"^\", \"\\\\hat\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u20D7\", \"\\\\vec\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D9\", \"\\\\dot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02DA\", \"\\\\mathring\");\ndefineSymbol(symbols_math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xDF\", \"\\\\ss\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xF8\", \"\\\\o\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xC6\", \"\\\\AE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xD8\", \"\\\\O\", true);\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CA\", \"\\\\'\"); // acute\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CB\", \"\\\\`\"); // grave\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DC\", \"\\\\~\"); // tilde\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C9\", \"\\\\=\"); // macron\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D8\", \"\\\\u\"); // breve\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D9\", \"\\\\.\"); // dot above\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DA\", \"\\\\r\"); // ring above\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C7\", \"\\\\v\"); // caron\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\xA8\", '\\\\\"'); // diaresis\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DD\", \"\\\\H\"); // double acute\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u25EF\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nvar ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"--\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"---\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"'\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"``\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"\\\\textquotedblleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"''\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xB0\", \"\\\\degree\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\n\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\mathsterling\", true);\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\textsterling\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \" \");\ndefineSymbol(symbols_text, main, symbols_spacing, \"\\xA0\", \"~\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (var symbols_i = 0; symbols_i < mathTextSymbols.length; symbols_i++) {\n  var symbols_ch = mathTextSymbols.charAt(symbols_i);\n  defineSymbol(symbols_math, main, symbols_textord, symbols_ch, symbols_ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\n\nfor (var src_symbols_i = 0; src_symbols_i < textSymbols.length; src_symbols_i++) {\n  var _ch = textSymbols.charAt(src_symbols_i);\n\n  defineSymbol(symbols_text, main, symbols_textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (var symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {\n  var _ch2 = letters.charAt(symbols_i2);\n\n  defineSymbol(symbols_math, main, mathord, _ch2, _ch2);\n  defineSymbol(symbols_text, main, symbols_textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(symbols_text, ams, symbols_textord, \"C\", \"\\u2102\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"H\", \"\\u210D\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"H\", \"\\u210D\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"N\", \"\\u2115\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"N\", \"\\u2115\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"P\", \"\\u2119\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"P\", \"\\u2119\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"Q\", \"\\u211A\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"Q\", \"\\u211A\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"R\", \"\\u211D\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"R\", \"\\u211D\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"Z\", \"\\u2124\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"Z\", \"\\u2124\");\ndefineSymbol(symbols_math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(symbols_text, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar symbols_wideChar = \"\";\n\nfor (var symbols_i3 = 0; symbols_i3 < letters.length; symbols_i3++) {\n  var _ch3 = letters.charAt(symbols_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC00 + symbols_i3); // A-Z a-z bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC34 + symbols_i3); // A-Z a-z italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC68 + symbols_i3); // A-Z a-z bold italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDD04 + symbols_i3); // A-Z a-z Fractur\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDA0 + symbols_i3); // A-Z a-z sans-serif\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDD4 + symbols_i3); // A-Z a-z sans bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE08 + symbols_i3); // A-Z a-z sans italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE70 + symbols_i3); // A-Z a-z monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n  if (symbols_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDD38 + symbols_i3); // A-Z double struck\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC9C + symbols_i3); // A-Z script\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nsymbols_wideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(symbols_math, main, mathord, \"k\", symbols_wideChar);\ndefineSymbol(symbols_text, main, symbols_textord, \"k\", symbols_wideChar); // Next, some wide character numerals\n\nfor (var symbols_i4 = 0; symbols_i4 < 10; symbols_i4++) {\n  var _ch4 = symbols_i4.toString();\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFCE + symbols_i4); // 0-9 bold\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFE2 + symbols_i4); // 0-9 sans serif\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFEC + symbols_i4); // 0-9 bold sans\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFF6 + symbols_i4); // 0-9 monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = \"ÇÐÞçþ\";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(symbols_math, main, mathord, _ch5, _ch5);\n  defineSymbol(symbols_text, main, symbols_textord, _ch5, _ch5);\n}\n\ndefineSymbol(symbols_text, main, symbols_textord, \"ð\", \"ð\"); // Unicode versions of existing characters\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"–\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"—\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"‘\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"’\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"“\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"”\");\n// CONCATENATED MODULE: ./src/wide-character.js\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nvar wide_character_wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new src_ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n// CONCATENATED MODULE: ./src/Options.js\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options_Options =\n/*#__PURE__*/\nfunction () {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  function Options(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  var _proto = Options.prototype;\n\n  _proto.extend = function extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n  ;\n\n  _proto.havingStyle = function havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n  ;\n\n  _proto.havingCrampedStyle = function havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n  ;\n\n  _proto.havingSize = function havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n  ;\n\n  _proto.havingBaseStyle = function havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n  ;\n\n  _proto.havingBaseSizing = function havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n  ;\n\n  _proto.withColor = function withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n  ;\n\n  _proto.withPhantom = function withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n  ;\n\n  _proto.withFont = function withFont(font) {\n    return this.extend({\n      font: font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n  ;\n\n  _proto.withTextFontFamily = function withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily: fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontWeight = function withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight: fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontShape = function withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape: fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n  ;\n\n  _proto.sizingClasses = function sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n  ;\n\n  _proto.baseSizingClasses = function baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n  ;\n\n  _proto.fontMetrics = function fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n  ;\n\n  _proto.getColor = function getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  };\n\n  return Options;\n}();\n\nOptions_Options.BASESIZE = 6;\n/* harmony default export */ var src_Options = (Options_Options);\n// CONCATENATED MODULE: ./src/units.js\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n // This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar units_calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new src_ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n// CONCATENATED MODULE: ./src/buildCommon.js\n/* eslint no-console:0 */\n\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n// The following have to be loaded from Main-Italic font, using class mathit\nvar mathitLetters = [\"\\\\imath\", \"ı\", // dotless i\n\"\\\\jmath\", \"ȷ\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"£\"];\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\n\nvar buildCommon_lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n    value = src_symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = buildCommon_lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontName + \"'\");\n    symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options && options.font && options.font === \"boldsymbol\" && buildCommon_lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return buildCommon_makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || src_symbols[mode][value].font === \"main\") {\n    return buildCommon_makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return buildCommon_makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (maindefault or mathit) to use for default math font,\n * depending on the symbol.\n */\n\n\nvar buildCommon_mathdefault = function mathdefault(value, mode, options, classes) {\n  if (/[0-9]/.test(value.charAt(0)) || // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n  // need to use Main-Italic instead\n  utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the font names (Main-Italic, Math-Italic, and Caligraphic)\n * and corresponding style tags (mathit, mathdefault, or mathcal) to use for font\n * \"mathnormal\", depending on the symbol.  Use this function instead of fontMap for\n * font \"mathnormal\".\n */\n\n\nvar buildCommon_mathnormal = function mathnormal(value, mode, options, classes) {\n  if (utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else if (/[0-9]/.test(value.charAt(0))) {\n    return {\n      fontName: \"Caligraphic-Regular\",\n      fontClass: \"mathcal\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes) {\n  if (buildCommon_lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar buildCommon_makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === \"math\" || mode === \"text\" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    var _wideCharacterFont = wide_character_wideCharacterFont(text, mode),\n        wideFontName = _wideCharacterFont[0],\n        wideFontClass = _wideCharacterFont[1];\n\n    return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\" || fontOrFamily === \"mathnormal\") {\n      var fontData = fontOrFamily === \"boldsymbol\" ? boldsymbol(text, mode, options, classes) : buildCommon_mathnormal(text, mode, options, classes);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (utils.contains(mathitLetters, text)) {\n      fontName = \"Main-Italic\";\n      fontClasses = [\"mathit\"];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (buildCommon_lookupSymbol(text, fontName, mode).metrics) {\n      return buildCommon_makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(buildCommon_makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return buildCommon_makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    var fontLookup = buildCommon_mathdefault(text, mode, options, classes);\n    return buildCommon_makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n  } else if (type === \"textord\") {\n    var font = src_symbols[mode][text] && src_symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return buildCommon_makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar buildCommon_canCombine = function canCombine(prev, next) {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consequetive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar buildCommon_tryCombineChars = function tryCombineChars(chars) {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof domTree_SymbolNode && next instanceof domTree_SymbolNode && buildCommon_canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar buildCommon_makeSpan = function makeSpan(classes, children, options, style) {\n  var span = new domTree_Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar buildCommon_makeSvgSpan = function makeSvgSpan(classes, children, options, style) {\n  return new domTree_Span(classes, children, options, style);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = buildCommon_makeSpan([className], [], options);\n  line.height = thickness || options.fontMetrics().defaultRuleThickness;\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar buildCommon_makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new domTree_Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar buildCommon_makeFragment = function makeFragment(children) {\n  var fragment = new tree_DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar buildCommon_wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof tree_DocumentFragment) {\n    return buildCommon_makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size: size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children: children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth: depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar buildCommon_makeVList = function makeVList(params, options) {\n  var _getVListChildrenAndD = getVListChildrenAndDepth(params),\n      children = _getVListChildrenAndD.children,\n      depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === \"elem\") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = buildCommon_makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === \"kern\") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = buildCommon_makeSpan(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - _elem.depth + \"em\";\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = buildCommon_makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = buildCommon_makeSpan([], []);\n    var depthStrut = buildCommon_makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = buildCommon_makeSpan([\"vlist-s\"], [new domTree_SymbolNode(\"\\u200B\")]);\n    rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist, topStrut]), buildCommon_makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  var vtable = buildCommon_makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nvar buildCommon_makeGlue = function makeGlue(measurement, options) {\n  // Make an empty span for the space\n  var rule = buildCommon_makeSpan([\"mspace\"], [], options);\n  var size = units_calculateSize(measurement, options);\n  rule.style.marginRight = size + \"em\";\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  // Default math font, \"mathnormal\" and \"boldsymbol\" are missing because they\n  // require the use of several fonts: Main-Italic and Math-Italic for default\n  // math font, Main-Italic, Math-Italic, Caligraphic for \"mathnormal\", and\n  // Math-BoldItalic and Main-Bold for \"boldsymbol\".  This is handled by a\n  // special case in makeOrd which ends up calling mathdefault, mathnormal,\n  // and boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar buildCommon_staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var _svgData$value = svgData[value],\n      pathName = _svgData$value[0],\n      width = _svgData$value[1],\n      height = _svgData$value[2];\n  var path = new domTree_PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = buildCommon_makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n  fontMap: fontMap,\n  makeSymbol: buildCommon_makeSymbol,\n  mathsym: buildCommon_mathsym,\n  makeSpan: buildCommon_makeSpan,\n  makeSvgSpan: buildCommon_makeSvgSpan,\n  makeLineSpan: makeLineSpan,\n  makeAnchor: buildCommon_makeAnchor,\n  makeFragment: buildCommon_makeFragment,\n  wrapFragment: buildCommon_wrapFragment,\n  makeVList: buildCommon_makeVList,\n  makeOrd: buildCommon_makeOrd,\n  makeGlue: buildCommon_makeGlue,\n  staticSvg: buildCommon_staticSvg,\n  svgData: svgData,\n  tryCombineChars: buildCommon_tryCombineChars\n});\n// CONCATENATED MODULE: ./src/parseNode.js\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  var typedNode = checkNodeType(node, type);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe: Unsure why.\n\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkNodeType(node, type) {\n  if (node && node.type === type) {\n    // The definition of ParseNode<TYPE> doesn't communicate to flow that\n    // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n    // happens to be true for all our value types.\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\n\nfunction assertAtomFamily(node, family) {\n  var typedNode = checkAtomFamily(node, family);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of type \\\"atom\\\" and family \\\"\" + family + \"\\\", but got \" + (node ? node.type === \"atom\" ? \"atom of family \" + node.family : \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkAtomFamily(node, family) {\n  return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n// CONCATENATED MODULE: ./src/spacingData.js\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nvar mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nvar thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n// CONCATENATED MODULE: ./src/defineFunction.js\n\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var type = _ref.type,\n      nodeType = _ref.nodeType,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of functions\n  var data = {\n    type: type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    greediness: props.greediness === undefined ? 1 : props.greediness,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    consumeMode: props.consumeMode,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _functions should be a type union of all\n    // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n    // which is an existential type.\n    // $FlowFixMe\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var type = _ref2.type,\n      htmlBuilder = _ref2.htmlBuilder,\n      mathmlBuilder = _ref2.mathmlBuilder;\n  defineFunction({\n    type: type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n    handler: function handler() {\n      throw new Error('Should never be called.');\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n  });\n} // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar defineFunction_ordargument = function ordargument(arg) {\n  var node = checkNodeType(arg, \"ordgroup\");\n  return node ? node.body : [arg];\n};\n// CONCATENATED MODULE: ./src/buildHTML.js\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\nvar buildHTML_makeSpan = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nvar binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nvar buildHTML_styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildHTML_buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildHTML_buildGroup(expression[i], options);\n\n    if (output instanceof tree_DocumentFragment) {\n      var children = output.children;\n      groups.push.apply(groups, children);\n    } else {\n      groups.push(output);\n    }\n  } // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n\n    if (!node) {// No match.\n    } else if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(buildHTML_styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  var dummyPrev = buildHTML_makeSpan([surrounding[0] || \"leftmost\"], [], options);\n  var dummyNext = buildHTML_makeSpan([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = buildHTML_checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      traverseNonSpaceNodes(partialGroup.children, callback, prev);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    if (node.classes[0] === \"mspace\") {\n      continue;\n    }\n\n    var result = callback(node, prev.node);\n\n    if (result) {\n      if (prev.insertAfter) {\n        prev.insertAfter(result);\n      } else {\n        // insert at front\n        nodes.unshift(result);\n        i++;\n      }\n    }\n\n    prev.node = node;\n\n    prev.insertAfter = function (index) {\n      return function (n) {\n        nodes.splice(index + 1, 0, n);\n        i++;\n      };\n    }(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar buildHTML_checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof tree_DocumentFragment || node instanceof domTree_Anchor) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = buildHTML_checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildHTML_buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return buildHTML_makeSpan();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = buildHTML_makeSpan([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n  // We used to have separate top and bottom struts, where the bottom strut\n  // would like to use `vertical-align: top`, but in IE 9 this lowers the\n  // baseline of the box to the bottom of this strut (instead of staying in\n  // the normal place) so we use an absolute value for vertical-align instead.\n\n  var strut = buildHTML_makeSpan([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildHTML_buildExpression(tree, options, true);\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  }\n\n  var htmlNode = buildHTML_makeSpan([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n// CONCATENATED MODULE: ./src/mathMLTree.js\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\nfunction newDocumentFragment(children) {\n  return new tree_DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nvar mathMLTree_MathNode =\n/*#__PURE__*/\nfunction () {\n  function MathNode(type, children) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  var _proto = MathNode.prototype;\n\n  _proto.setAttribute = function setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n  ;\n\n  _proto.toNode = function toNode() {\n    var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = \"<\" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    return this.children.map(function (child) {\n      return child.toText();\n    }).join(\"\");\n  };\n\n  return MathNode;\n}();\n/**\n * This node represents a piece of text.\n */\n\nvar mathMLTree_TextNode =\n/*#__PURE__*/\nfunction () {\n  function TextNode(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  var _proto2 = TextNode.prototype;\n\n  _proto2.toNode = function toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n  ;\n\n  _proto2.toMarkup = function toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n  ;\n\n  _proto2.toText = function toText() {\n    return this.text;\n  };\n\n  return TextNode;\n}();\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nvar SpaceNode =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  function SpaceNode(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200A\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200A\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200A\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205F\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  var _proto3 = SpaceNode.prototype;\n\n  _proto3.toNode = function toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto3.toMarkup = function toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n  ;\n\n  _proto3.toText = function toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  };\n\n  return SpaceNode;\n}();\n\n/* harmony default export */ var mathMLTree = ({\n  MathNode: mathMLTree_MathNode,\n  TextNode: mathMLTree_TextNode,\n  SpaceNode: SpaceNode,\n  newDocumentFragment: newDocumentFragment\n});\n// CONCATENATED MODULE: ./src/buildMathML.js\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar buildMathML_makeText = function makeText(text, mode, options) {\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar buildMathML_makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar buildMathML_getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  var font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return \"bold-italic\";\n  }\n\n  var text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nvar buildMathML_buildExpression = function buildExpression(expression, options) {\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var group = buildMathML_buildGroup(expression[i], options);\n\n    if (group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        var _lastGroup$children;\n\n        (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, group.children);\n\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n        var _lastGroup$children2;\n\n        (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, group.children);\n\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n        var child = group.children[0];\n\n        if (child instanceof mathMLTree_TextNode && child.text === '.') {\n          var _lastGroup$children3;\n\n          (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, group.children);\n\n          continue;\n        }\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        var lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof mathMLTree_TextNode && lastChild.text === \"\\u0338\" && (group.type === 'mo' || group.type === 'mi' || group.type === 'mn')) {\n          var _child = group.children[0];\n\n          if (_child instanceof mathMLTree_TextNode && _child.text.length > 0) {\n            // Overlay with combining character long solidus\n            _child.text = _child.text.slice(0, 1) + \"\\u0338\" + _child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options) {\n  return buildMathML_makeRow(buildMathML_buildExpression(expression, options));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildMathML_buildGroup = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var result = _mathmlGroupBuilders[group.type](group, options);\n    return result;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options) {\n  var expression = buildMathML_buildExpression(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof mathMLTree_MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode(\"math\", [semantics]); // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n  // $FlowFixMe\n\n  return buildCommon.makeSpan([\"katex-mathml\"], [math]);\n}\n// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nvar buildTree_optionsFromSettings = function optionsFromSettings(settings) {\n  return new src_Options({\n    style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n    maxSize: settings.maxSize\n  });\n};\n\nvar buildTree_displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree_buildTree = function buildTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var mathMLNode = buildMathML(tree, expression, options);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\nvar buildTree_buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\n/* harmony default export */ var src_buildTree = (buildTree_buildTree);\n// CONCATENATED MODULE: ./src/stretchy.js\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\nvar stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23DF\",\n  overbrace: \"\\u23DE\",\n  overgroup: \"\\u23E0\",\n  undergroup: \"\\u23E1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21D2\",\n  xRightarrow: \"\\u21D2\",\n  overleftharpoon: \"\\u21BC\",\n  xleftharpoonup: \"\\u21BC\",\n  overrightharpoon: \"\\u21C0\",\n  xrightharpoonup: \"\\u21C0\",\n  xLeftarrow: \"\\u21D0\",\n  xLeftrightarrow: \"\\u21D4\",\n  xhookleftarrow: \"\\u21A9\",\n  xhookrightarrow: \"\\u21AA\",\n  xmapsto: \"\\u21A6\",\n  xrightharpoondown: \"\\u21C1\",\n  xleftharpoondown: \"\\u21BD\",\n  xrightleftharpoons: \"\\u21CC\",\n  xleftrightharpoons: \"\\u21CB\",\n  xtwoheadleftarrow: \"\\u219E\",\n  xtwoheadrightarrow: \"\\u21A0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21C4\",\n  xrightleftarrows: \"\\u21C4\",\n  xrightequilibrium: \"\\u21CC\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21CB\" // None better available.\n\n};\n\nvar stretchy_mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar stretchy_svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      var path = new domTree_PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": _height + \"em\",\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var paths = data[0],\n          _minWidth = data[1],\n          _viewBoxHeight = data[2];\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new domTree_PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          \"width\": \"400em\",\n          \"height\": _height2 + \"em\",\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = _height2 + \"em\";\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var _buildSvgSpan_ = buildSvgSpan_(),\n      span = _buildSvgSpan_.span,\n      minWidth = _buildSvgSpan_.minWidth,\n      height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nvar stretchy_encloseSpan = function encloseSpan(inner, label, pad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n  var img;\n  var totalHeight = inner.height + inner.depth + 2 * pad;\n\n  if (/fbox|color/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\n/* harmony default export */ var stretchy = ({\n  encloseSpan: stretchy_encloseSpan,\n  mathMLnode: stretchy_mathMLnode,\n  svgSpan: stretchy_svgSpan\n});\n// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\nvar accent_htmlBuilder = function htmlBuilder(grp, options) {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n  var supSubGroup;\n\n  if (supSub) {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(supSub.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    supSub.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildHTML_buildGroup(supSub, options)); // reset original base\n\n    supSub.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildHTML_buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeSymbol(group.label, \"Main-Regular\", group.mode, options); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + 2 * skew + \"em)\",\n          marginLeft: 2 * skew + \"em\"\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar accent_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(function (accent) {\n  return \"\\\\\" + accent;\n}).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/accentunder.js\n// Horizontal overlap functions\n\n\n\n\n\n\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Treat under accents much like underlines.\n    var innerGroup = buildHTML_buildGroup(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: accentBody.height + kern,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n\n// Helper function\nvar arrow_paddedNode = function paddedNode(group) {\n  var node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder: function htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, newOptions, options), options);\n    upperGroup.classes.push(\"x-arrow-pad\");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(\"x-arrow-pad\");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    var node;\n\n    if (group.body) {\n      var upperNode = arrow_paddedNode(buildMathML_buildGroup(group.body, options));\n\n      if (group.below) {\n        var lowerNode = arrow_paddedNode(buildMathML_buildGroup(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      var _lowerNode = arrow_paddedNode(buildMathML_buildGroup(group.below, options));\n\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, _lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = arrow_paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/char.js\n\n\n // \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var arg = assertNodeType(args[0], \"ordgroup\");\n    var group = arg.body;\n    var number = \"\";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new src_ParseError(\"\\\\@char has non-numeric argument \" + number);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\nvar color_htmlBuilder = function htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar color_mathmlBuilder = function mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options.withColor(group.color));\n  var node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color: color,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\"]\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser,\n        breakOnTokenText = _ref2.breakOnTokenText;\n    var color = assertNodeType(args[0], \"color-token\").color; // If we see a styling function, parse out the implicit body\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color: color,\n      body: body\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/cr.js\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n\n // \\\\ is a macro mapping to either \\cr or \\newline.  Because they have the\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\cr\", \"\\\\newline\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = optArgs[0];\n    var newRow = funcName === \"\\\\cr\";\n    var newLine = false;\n\n    if (!newRow) {\n      if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n        newLine = false;\n      } else {\n        newLine = true;\n      }\n    }\n\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine: newLine,\n      newRow: newRow,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.newRow) {\n      throw new src_ParseError(\"\\\\cr valid only within a tabular/array environment\");\n    }\n\n    var span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = units_calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", units_calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/delimiter.js\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar delimiter_getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar delimiter_styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar delimiter_makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  var span = delimiter_styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar delimiter_mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar delimiter_makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = delimiter_mathrmSize(delim, size, mode, options);\n  var span = delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), src_Style.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, src_Style.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\n\n\nvar delimiter_makeInner = function makeInner(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  var inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: inner\n  };\n};\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\n\nvar delimiter_makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23D0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23D0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23D0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23A1\";\n    repeat = \"\\u23A2\";\n    bottom = \"\\u23A3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23A4\";\n    repeat = \"\\u23A5\";\n    bottom = \"\\u23A6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230A\") {\n    repeat = top = \"\\u23A2\";\n    bottom = \"\\u23A3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23A1\";\n    repeat = bottom = \"\\u23A2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230B\") {\n    repeat = top = \"\\u23A5\";\n    bottom = \"\\u23A6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23A4\";\n    repeat = bottom = \"\\u23A5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239B\";\n    repeat = \"\\u239C\";\n    bottom = \"\\u239D\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239E\";\n    repeat = \"\\u239F\";\n    bottom = \"\\u23A0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23A7\";\n    middle = \"\\u23A8\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23AB\";\n    middle = \"\\u23AC\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27EE\") {\n    top = \"\\u23A7\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27EF\") {\n    top = \"\\u23AB\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23B0\") {\n    top = \"\\u23A7\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23B1\") {\n    top = \"\\u23AB\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = delimiter_getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = delimiter_getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = delimiter_getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = delimiter_getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  var inners = []; // Add the bottom symbol\n\n  inners.push(delimiter_makeInner(bottom, font, mode));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (var i = 0; i < repeatCount; i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (var _i = 0; _i < repeatCount; _i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n\n    inners.push(delimiter_makeInner(middle, font, mode));\n\n    for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } // Add the top symbol\n\n\n  inners.push(delimiter_makeInner(top, font, mode)); // Finally, build the vlist\n\n  var newOptions = options.havingBaseStyle(src_Style.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: inners\n  }, newOptions);\n  return delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), src_Style.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar delimiter_sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n  var alternate;\n\n  if (sqrtName === \"sqrtTall\") {\n    // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n    // One path edge has a variable length. It runs from the viniculumn\n    // to a point near (14 units) the bottom of the surd. The viniculum\n    // is 40 units thick. So the length of the line in question is:\n    var vertSegment = viewBoxHeight - 54 - vbPad;\n    alternate = \"M702 \" + vbPad + \"H400000v40H742v\" + vertSegment + \"l-4 4-4 4c-.667.7\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 \" + vbPad + \"H400000v40H742z\";\n  }\n\n  var pathNode = new domTree_PathNode(sqrtName, alternate);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + emPad) / sizeMultiplier;\n    texHeight = 1.00 / sizeMultiplier;\n    span = delimiter_sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n    span = delimiter_sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + emPad;\n    texHeight = height;\n    viewBoxHeight = Math.floor(1000 * height) + vbPad;\n    span = delimiter_sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span: span,\n    advanceWidth: advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar delimiter_makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return delimiter_makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new src_ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar delimiter_makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return delimiter_makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return delimiter_makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return delimiter_makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n  sqrtImage: makeSqrtImage,\n  sizedDelim: delimiter_makeSizedDelim,\n  customSizedDelim: delimiter_makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n});\n// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nvar delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27E8\", \"\\\\rangle\", \"\\u27E9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else {\n    throw new src_ParseError(\"Invalid delimiter: '\" + (symDelim ? symDelim.text : JSON.stringify(delim)) + \"' after '\" + context.funcName + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: function mathmlBuilder(group) {\n    var children = [];\n\n    if (group.delim !== \".\") {\n      children.push(buildMathML_makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    var right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body: body,\n      left: delim.text,\n      right: right.delim\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildHTML_buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    assertParsed(group);\n    var inner = buildMathML_buildExpression(group.body, options);\n\n    if (group.left !== \".\") {\n      var leftNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      var rightNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n      inner.push(rightNode);\n    }\n\n    return buildMathML_makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new src_ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options: options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // A Firefox \\middle will strech a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    var textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? buildMathML_makeText(\"|\", \"text\") : buildMathML_makeText(group.delim, group.mode);\n    var middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\nvar enclose_htmlBuilder = function htmlBuilder(group, options) {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, options), options);\n  var label = group.label.substr(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    var vertPad = 0; // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n    // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n    } else {\n      vertPad = isSingleChar ? 0.2 : 0;\n    }\n\n    img = stretchy.encloseSpan(inner, label, vertPad, options);\n    imgShift = inner.depth + vertPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nvar enclose_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildMathML_buildGroup(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      node.setAttribute(\"width\", \"+6pt\");\n      node.setAttribute(\"height\", \"+6pt\");\n      node.setAttribute(\"lspace\", \"3pt\"); // LaTeX source2e: \\fboxsep = 3pt\n\n      node.setAttribute(\"voffset\", \"3pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        var thk = options.fontMetrics().defaultRuleThickness;\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"text\"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n  handler: function handler(_ref2, args, optArgs) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    var borderColor = assertNodeType(args[0], \"color-token\").color;\n    var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    var body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref4, args, optArgs) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    var body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of environments.\n  var data = {\n    type: type,\n    numArgs: props.numArgs || 0,\n    greediness: 1,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    // $FlowFixMe\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.nextToken.text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.nextToken.text;\n  }\n\n  return hlineInfo;\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n      addJot = _ref.addJot,\n      cols = _ref.cols,\n      arraystretch = _ref.arraystretch,\n      colSeparationType = _ref.colSeparationType;\n  // Parse body of array with \\\\ temporarily mapped to \\cr\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\"); // Get current arraystretch if it's not set by the environment\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new src_ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  }\n\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    var cell = parser.parseExpression(false, \"\\\\cr\");\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style: style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.nextToken.text;\n\n    if (next === \"&\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\cr\") {\n      var cr = assertNodeType(parser.parseFunction(), \"cr\");\n      rowGaps.push(cr.size); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new src_ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot: addJot,\n    arraystretch: arraystretch,\n    body: body,\n    cols: cols,\n    rowGaps: rowGaps,\n    hskipBeforeAndAfter: hskipBeforeAndAfter,\n    hLinesBeforeRow: hLinesBeforeRow,\n    colSeparationType: colSeparationType\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nvar array_htmlBuilder = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = []; // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n  // Vertical spacing\n\n  var baselineskip = 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildHTML_buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = units_calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\") {\n        var separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else if (colDescr.separator === \":\") {\n        var _separator = buildCommon.makeSpan([\"vertical-separator\", \"vs-dashed\"], [], options);\n\n        _separator.style.height = totalHeight + \"em\";\n        _separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(_separator);\n      } else {\n        throw new src_ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan(\"hline\", options, 0.05);\n    var dashes = buildCommon.makeLineSpan(\"hdashline\", options, 0.05);\n    var vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nvar alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nvar array_mathmlBuilder = function mathmlBuilder(group, options) {\n  var table = new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n    return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n      return new mathMLTree.MathNode(\"mtd\", [buildMathML_buildGroup(cell, options)]);\n    }));\n  })); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found emprically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hines.\n\n  var gap = 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", gap + \"em\"); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  var menclose = \"\";\n  var align = \"\";\n\n  if (group.cols) {\n    // Find column alignment, column spacing, and  vertical lines.\n    var cols = group.cols;\n    var columnLines = \"\";\n    var prevTypeWasAlign = false;\n    var iStart = 0;\n    var iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (var i = iStart; i < iEnd; i++) {\n      if (cols[i].type === \"align\") {\n        align += alignMap[cols[i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    var _cols = group.cols || [];\n\n    var spacing = \"\";\n\n    for (var _i = 1; _i < _cols.length; _i++) {\n      spacing += _i % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  var rowLines = \"\";\n  var hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (var _i2 = 1; _i2 < hlines.length - 1; _i2++) {\n    rowLines += hlines[_i2].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[_i2][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose === \"\") {\n    return table;\n  } else {\n    var wrapper = new mathMLTree.MathNode(\"menclose\", [table]);\n    wrapper.setAttribute(\"notation\", menclose.trim());\n    return wrapper;\n  }\n}; // Convenience function for aligned and alignedat environments.\n\n\nvar array_alignedHandler = function alignedHandler(context, args) {\n  var cols = [];\n  var res = parseArray(context.parser, {\n    cols: cols,\n    addJot: true\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n  var ordgroup = checkNodeType(args[0], \"ordgroup\");\n\n  if (ordgroup) {\n    var arg0 = \"\";\n\n    for (var i = 0; i < ordgroup.body.length; i++) {\n      var textord = assertNodeType(ordgroup.body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i3 = 1; _i3 < row.length; _i3 += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i3], \"styling\");\n\n      var _ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n\n      _ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new src_ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i4 = 0; _i4 < numCols; ++_i4) {\n    var align = \"r\";\n    var pregap = 0;\n\n    if (_i4 % 2 === 1) {\n      align = \"l\";\n    } else if (_i4 > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i4] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    var res = {\n      cols: cols,\n      hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName]; // \\hskip -\\arraycolsep in amsmath\n\n    var payload = {\n      hskipBeforeAndAfter: false\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1]\n    } : res;\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: \"\\\\{\",\n      right: \".\"\n    };\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"aligned\"],\n  props: {\n    numArgs: 0\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignedat\"],\n  // One for numbered and for unnumbered;\n  // but, KaTeX doesn't supports math numbering yet,\n  // they make no difference for now.\n  props: {\n    numArgs: 1\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError(context.funcName + \" valid only within array environment\");\n  }\n});\n// CONCATENATED MODULE: ./src/environments.js\n\nvar environments = _environments;\n/* harmony default export */ var src_environments = (environments); // All environment definitions should be imported below\n\n\n// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n // Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\n// $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new src_ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    var envName = \"\";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!src_environments.hasOwnProperty(envName)) {\n        throw new src_ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = src_environments[envName];\n\n      var _parser$parseArgument = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n          _args = _parser$parseArgument.args,\n          optArgs = _parser$parseArgument.optArgs;\n\n      var context = {\n        mode: parser.mode,\n        envName: envName,\n        parser: parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new src_ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      }\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup: nameGroup\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\nvar mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options, true);\n  return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options);\n  return mathMLTree.newDocumentFragment(inner);\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\nvar binrelClass = function binrelClass(arg) {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: [args[1]]\n    };\n  }\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: defineFunction_ordargument(baseArg)\n    };\n    var supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: mclass,\n      body: [supsub]\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/font.js\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\nvar font_htmlBuilder = function htmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildHTML_buildGroup(group.body, newOptions);\n};\n\nvar font_mathmlBuilder = function mathmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildMathML_buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body: body\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0]; // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body: body\n      }]\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    var mode = parser.mode;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body: body\n      }\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\nvar genfrac_adjustStyle = function adjustStyle(size, originalStyle) {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= src_Style.SCRIPT.id ? style.text() : src_Style.DISPLAY;\n  } else if (size === \"text\" && style.size === src_Style.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = src_Style.TEXT;\n  } else if (size === \"script\") {\n    style = src_Style.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = src_Style.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nvar genfrac_htmlBuilder = function htmlBuilder(group, options) {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  var style = genfrac_adjustStyle(group.size, options.style);\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildHTML_buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildHTML_buildGroup(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = units_calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === src_Style.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar genfrac_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode(\"mfrac\", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    var ruleWidth = units_calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  var style = genfrac_adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    var isDisplay = style.size === src_Style.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return buildMathML_makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n  props: {\n    numArgs: 2,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: funcName === \"\\\\cfrac\",\n      numer: numer,\n      denom: denom,\n      hasBarLine: hasBarLine,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size,\n      barSize: null\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n  handler: function handler(_ref2) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName,\n        token = _ref2.token;\n    var replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: replaceWith,\n      token: token\n    };\n  }\n});\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    greediness: 6,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = checkNodeType(args[0], \"atom\");\n\n    if (leftNode) {\n      leftNode = assertAtomFamily(args[0], \"open\");\n    }\n\n    var leftDelim = leftNode ? delimFromValue(leftNode.text) : null;\n    var rightNode = checkNodeType(args[1], \"atom\");\n\n    if (rightNode) {\n      rightNode = assertAtomFamily(args[1], \"close\");\n    }\n\n    var rightDelim = rightNode ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], \"size\");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = \"auto\";\n    var styl = checkNodeType(args[3], \"ordgroup\");\n\n    if (styl) {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(args[3], \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n  handler: function handler(_ref4, args) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName,\n        token = _ref4.token;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token: token\n    };\n  }\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: function handler(_ref5, args) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], \"infix\").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\nvar horizBrace_htmlBuilder = function htmlBuilder(grp, options) {\n  var style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  var supSubGroup;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(supSub.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar horizBrace_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n  htmlBuilder: horizBrace_htmlBuilder,\n  mathmlBuilder: horizBrace_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[1];\n    var href = assertNodeType(args[0], \"url\").url;\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof mathMLTree_MathNode)) {\n      math = new mathMLTree_MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var href = assertNodeType(args[0], \"url\").url;\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    var body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: defineFunction_ordargument(args[0]),\n      mathml: defineFunction_ordargument(args[1])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/kern.js\n// Horizontal spacing commands\n\n\n\n\n // TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var dimension = units_calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/lap.js\n// Horizontal overlap functions\n\n\n\n\n\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n\n    var strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // Get the horizontal spacing correct relative to adjacent items.\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/math.js\n\n // Switching from text mode back to math mode\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false,\n    consumeMode: \"math\"\n  },\n  handler: function handler(_ref, args) {\n    var funcName = _ref.funcName,\n        parser = _ref.parser;\n    var outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    var body = parser.parseExpression(false, close); // We can't expand the next symbol after the closing $ until after\n    // switching modes back.  So don't consume within expect.\n\n    parser.expect(close, false);\n    parser.switchMode(outerMode);\n    parser.consume();\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body: body\n    };\n  }\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError(\"Mismatched \" + context.funcName);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\nvar mathchoice_chooseMathStyle = function chooseMathStyle(group, options) {\n  switch (options.style.size) {\n    case src_Style.DISPLAY.size:\n      return group.display;\n\n    case src_Style.TEXT.size:\n      return group.text;\n\n    case src_Style.SCRIPT.size:\n      return group.script;\n\n    case src_Style.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: defineFunction_ordargument(args[0]),\n      text: defineFunction_ordargument(args[1]),\n      script: defineFunction_ordargument(args[2]),\n      scriptscript: defineFunction_ordargument(args[3])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    var elements = buildHTML_buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/op.js\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n// Most operators have a large successor symbol, but these don't.\nvar noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nvar op_htmlBuilder = function htmlBuilder(grp, options) {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  var style = options.style;\n  var large = false;\n\n  if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    var stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1); // $FlowFixMe\n\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options); // $FlowFixMe\n\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildHTML_buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof domTree_SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], buildCommon.tryCombineChars(inner), options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof domTree_SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n    // in a new span so it is an inline, and works.\n    base = buildCommon.makeSpan([], [base]);\n    var sub;\n    var sup; // We manually have to handle the superscripts and subscripts. This,\n    // aside from the kern calculations, is copied from supsub.\n\n    if (supGroup) {\n      var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);\n      sup = {\n        elem: elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n      };\n    }\n\n    if (subGroup) {\n      var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n      sub = {\n        elem: _elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n      };\n    } // Build the final group as a vlist of the possible subscript, base,\n    // and possible superscript.\n\n\n    var finalGroup;\n\n    if (sup && sub) {\n      var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: bottom,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else if (sub) {\n      var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n      // that we are supposed to shift the limits by 1/2 of the slant,\n      // but since we are centering the limits adding a full slant of\n      // margin will shift by 1/2 that.\n\n      finalGroup = buildCommon.makeVList({\n        positionType: \"top\",\n        positionData: top,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }]\n      }, options);\n    } else if (sup) {\n      var _bottom = base.depth + baseShift;\n\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: _bottom,\n        children: [{\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else {\n      // This case probably shouldn't occur (this would mean the\n      // supsub was sending us a group with no superscript or\n      // subscript) but be safe.\n      return base;\n    }\n\n    return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nvar op_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new mathMLTree_MathNode(\"mo\", buildMathML_buildExpression(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup.\n    node = new mathMLTree_MathNode(\"mi\", [new mathMLTree_TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new mathMLTree_MathNode(\"mo\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22C0\": \"\\\\bigwedge\",\n  \"\\u22C1\": \"\\\\bigvee\",\n  \"\\u22C2\": \"\\\\bigcap\",\n  \"\\u22C3\": \"\\\\bigcup\",\n  \"\\u2A00\": \"\\\\bigodot\",\n  \"\\u2A01\": \"\\\\bigoplus\",\n  \"\\u2A02\": \"\\\\bigotimes\",\n  \"\\u2A04\": \"\\\\biguplus\",\n  \"\\u2A06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22C0\", \"\\u22C1\", \"\\u22C2\", \"\\u22C3\", \"\\u2A00\", \"\\u2A01\", \"\\u2A02\", \"\\u2A04\", \"\\u2A06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  \"\\u222B\": \"\\\\int\",\n  \"\\u222C\": \"\\\\iint\",\n  \"\\u222D\": \"\\\\iiint\",\n  \"\\u222E\": \"\\\\oint\",\n  \"\\u222F\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref3) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref4) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222B\", \"\\u222C\", \"\\u222D\", \"\\u222E\", \"\\u222F\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref5) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.body.length > 0) {\n      var body = group.body.map(function (child) {\n        // $FlowFixMe: Check if the node has a string `text` property.\n        var childText = child.text;\n\n        if (typeof childText === \"string\") {\n          return {\n            type: \"textord\",\n            mode: child.mode,\n            text: childText\n          };\n        } else {\n          return child;\n        }\n      }); // Consolidate function names into symbol characters.\n\n      var expression = buildHTML_buildExpression(body, options.withFont(\"mathrm\"), true);\n\n      for (var i = 0; i < expression.length; i++) {\n        var child = expression[i];\n\n        if (child instanceof domTree_SymbolNode) {\n          // Per amsopn package,\n          // change minus to hyphen and \\ast to asterisk\n          child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n        }\n      }\n\n      return buildCommon.makeSpan([\"mop\"], expression, options);\n    } else {\n      return buildCommon.makeSpan([\"mop\"], [], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // The steps taken here are similar to the html version.\n    var expression = buildMathML_buildExpression(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n    var isAllString = true; // default\n\n    for (var i = 0; i < expression.length; i++) {\n      var node = expression[i];\n\n      if (node instanceof mathMLTree.SpaceNode) {// Do nothing\n      } else if (node instanceof mathMLTree.MathNode) {\n        switch (node.type) {\n          case \"mi\":\n          case \"mn\":\n          case \"ms\":\n          case \"mspace\":\n          case \"mtext\":\n            break;\n          // Do nothing yet.\n\n          case \"mo\":\n            {\n              var child = node.children[0];\n\n              if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n              } else {\n                isAllString = false;\n              }\n\n              break;\n            }\n\n          default:\n            isAllString = false;\n        }\n      } else {\n        isAllString = false;\n      }\n    }\n\n    if (isAllString) {\n      // Write a single TextNode instead of multiple nested tags.\n      var word = expression.map(function (node) {\n        return node.toText();\n      }).join(\"\");\n      expression = [new mathMLTree.TextNode(word)];\n    }\n\n    var identifier = new mathMLTree.MathNode(\"mi\", expression);\n    identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n    // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n    var operator = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildHTML_buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildHTML_buildExpression(group.body, options, true), options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: line.height\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildHTML_buildExpression(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nvar sizing_htmlBuilder = function htmlBuilder(group, options) {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body: body\n    };\n  },\n  htmlBuilder: sizing_htmlBuilder,\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n // Box manipulation\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"text\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var amount = assertNodeType(args[0], \"size\").value;\n    var body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = {\n      type: \"text\",\n      mode: group.mode,\n      body: defineFunction_ordargument(group.body),\n      font: \"mathrm\" // simulate \\textrm\n\n    };\n    var sizedText = {\n      type: \"sizing\",\n      mode: group.mode,\n      body: [text],\n      size: 6 // simulate \\normalsize\n\n    };\n    var body = sizing_htmlBuilder(sizedText, options);\n    var dy = units_calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], \"size\");\n    var height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var width = units_calculateSize(group.width, options);\n    var height = units_calculateSize(group.height, options);\n    var shift = group.shift ? units_calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var width = units_calculateSize(group.width, options);\n    var height = units_calculateSize(group.height, options);\n    var shift = group.shift ? units_calculateSize(group.shift, options) : 0;\n    var color = options.color && options.getColor() || \"black\";\n    var rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", width + \"em\");\n    rule.setAttribute(\"height\", height + \"em\");\n    var wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift + \"em\");\n    } else {\n      wrapper.setAttribute(\"height\", shift + \"em\");\n      wrapper.setAttribute(\"depth\", \"+\" + -shift + \"em\");\n    }\n\n    wrapper.setAttribute(\"voffset\", shift + \"em\");\n    return wrapper;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/smash.js\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = \"\";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body: body,\n      smashHeight: smashHeight,\n      smashDepth: smashDepth\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body: body,\n      index: index\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < src_Style.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n        img = _delimiter$sqrtImage.span,\n        ruleWidth = _delimiter$sqrtImage.ruleWidth,\n        advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n      var rootm = buildHTML_buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = group.body,\n        index = group.index;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildMathML_buildGroup(body, options)]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\nvar styling_styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style: style,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styling_styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    // TODO(kevinb): dedupe this with buildHTML.js\n    // This will be easier of handling of styling nodes is in the same file.\n    var styleMap = {\n      \"display\": src_Style.DISPLAY,\n      \"text\": src_Style.TEXT,\n      \"script\": src_Style.SCRIPT,\n      \"scriptscript\": src_Style.SCRIPTSCRIPT\n    };\n    var newStyle = styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    var styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar supsub_htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? op_htmlBuilder : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? accent_htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = supsub_htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var valueBase = group.base,\n        valueSup = group.sup,\n        valueSub = group.sub;\n    var base = buildHTML_buildGroup(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildHTML_buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildHTML_buildGroup(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === src_Style.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof domTree_SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight: marginRight,\n        marginLeft: marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight: marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n    var horizBrace = checkNodeType(group.base, \"horizBrace\");\n\n    if (horizBrace) {\n      isSup = !!group.sup;\n\n      if (isSup === horizBrace.isOver) {\n        isBrace = true;\n        isOver = horizBrace.isOver;\n      }\n    }\n\n    if (group.base && group.base.type === \"op\") {\n      group.base.parentIsSupSub = true;\n    }\n\n    var children = [buildMathML_buildGroup(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildMathML_buildGroup(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildMathML_buildGroup(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === src_Style.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === \"op\" && _base.limits && (options.style === src_Style.DISPLAY || _base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === src_Style.DISPLAY) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n // Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"atom\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      var variant = buildMathML_getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\nvar defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mi\", [buildMathML_makeText(group.text, group.mode, options)]);\n    var variant = buildMathML_getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = buildMathML_makeText(group.text, group.mode, options);\n    var variant = buildMathML_getVariant(group, options) || \"normal\";\n    var node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      // TODO(kevinb) merge adjacent <mn> nodes\n      // do it as a post processing step\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n // A map of CSS-based spacing functions to their CSS class.\n\nvar cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        var ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\xA0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\n\nvar tag_pad = function pad() {\n  var padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [tag_pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), tag_pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n});\n// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n // Non-mathy text, possibly in a font\n\nvar textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nvar textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nvar textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nvar optionsWithFont = function optionsWithFont(group, options) {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true,\n    consumeMode: \"text\"\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body),\n      font: funcName\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildHTML_buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], buildCommon.tryCombineChars(inner), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildHTML_buildGroup(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new src_ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = function makeVerb(group) {\n  return group.body.replace(/ /g, group.star ? \"\\u2423\" : '\\xA0');\n};\n// CONCATENATED MODULE: ./src/functions.js\n/** Include this to ensure that all functions are defined. */\n\nvar functions = _functions;\n/* harmony default export */ var src_functions = (functions); // TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Disabled until https://github.com/KaTeX/KaTeX/pull/1794 is merged.\n// import \"./functions/includegraphics\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/Lexer.js\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"\" + controlWordRegexString + spaceRegexString + \"*\";\nvar controlWordWhitespaceRegex = new RegExp(\"^(\" + controlWordRegexString + \")\" + spaceRegexString + \"*$\");\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036F]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + // whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nvar Lexer_Lexer =\n/*#__PURE__*/\nfunction () {\n  // category codes, only supports comment characters (14) for now\n  function Lexer(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14 // comment character\n\n    };\n  }\n\n  var _proto = Lexer.prototype;\n\n  _proto.setCatcode = function setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n  ;\n\n  _proto.lex = function lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token_Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new src_ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token_Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[2] || \" \";\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    } // Trim any trailing whitespace from control word match\n\n\n    var controlMatch = text.match(controlWordWhitespaceRegex);\n\n    if (controlMatch) {\n      text = controlMatch[1];\n    }\n\n    return new Token_Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  };\n\n  return Lexer;\n}();\n\n\n// CONCATENATED MODULE: ./src/Namespace.js\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\nvar Namespace_Namespace =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  function Namespace(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  var _proto = Namespace.prototype;\n\n  _proto.beginGroup = function beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new src_ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n  ;\n\n  _proto.has = function has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n  ;\n\n  _proto.set = function set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  };\n\n  return Namespace;\n}();\n\n\n// CONCATENATED MODULE: ./src/macros.js\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\n\n\n\n\nvar builtinMacros = {};\n/* harmony default export */ var macros = (builtinMacros); // This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new src_ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new src_ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\n\nvar macros_def = function def(context, global) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError(\"\\\\gdef's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text; // Count argument specifiers, and check they are in the order #1 #2 ...\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  while (arg.length === 1 && arg[0].text === \"#\") {\n    arg = context.consumeArgs(1)[0];\n\n    if (arg.length !== 1) {\n      throw new src_ParseError(\"Invalid argument number length \\\"\" + arg.length + \"\\\"\");\n    }\n\n    if (!/^[1-9]$/.test(arg[0].text)) {\n      throw new src_ParseError(\"Invalid argument number \\\"\" + arg[0].text + \"\\\"\");\n    }\n\n    numArgs++;\n\n    if (parseInt(arg[0].text) !== numArgs) {\n      throw new src_ParseError(\"Argument number \\\"\" + arg[0].text + \"\\\" out of order\");\n    }\n\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  }, global);\n  return '';\n};\n\ndefineMacro(\"\\\\gdef\", function (context) {\n  return macros_def(context, true);\n});\ndefineMacro(\"\\\\def\", function (context) {\n  return macros_def(context, false);\n});\ndefineMacro(\"\\\\global\", function (context) {\n  var next = context.consumeArgs(1)[0];\n\n  if (next.length !== 1) {\n    throw new src_ParseError(\"Invalid command after \\\\global\");\n  }\n\n  var command = next[0].text; // TODO: Should expand command\n\n  if (command === \"\\\\def\") {\n    // \\global\\def is equivalent to \\gdef\n    return macros_def(context, true);\n  } else {\n    throw new src_ParseError(\"Invalid command '\" + command + \"' after \\\\global\");\n  }\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar macros_newcommand = function newcommand(context, existsOK, nonexistsOK) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new src_ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new src_ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    var argText = '';\n    var token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new src_ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", function (context) {\n  return macros_newcommand(context, false, true);\n});\ndefineMacro(\"\\\\renewcommand\", function (context) {\n  return macros_newcommand(context, true, false);\n});\ndefineMacro(\"\\\\providecommand\", function (context) {\n  return macros_newcommand(context, true, true);\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\xB7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\xA9\", \"\\\\copyright\");\ndefineMacro(\"\\xAE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22EE\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = '\\\\dotso';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in src_symbols.math) {\n    if (utils.contains(['bin', 'rel'], src_symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", function (context) {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new src_ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\\\\@binrel{#1}{\" + \"\\\\mathrlap{#1}\" + \"\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}\" + \"{\\\\mkern0.8mu#1}\" + \"}}{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\n\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // ≔\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // ≕\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{∤}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{∦}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{⊊}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{⫋}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{⊋}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{⫌}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27E6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27E7}}\");\ndefineMacro(\"\\u27E6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27E7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,min}}\\\\limits\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,max}}\\\\limits\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{##1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n// CONCATENATED MODULE: ./src/MacroExpander.js\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\n\nvar MacroExpander_MacroExpander =\n/*#__PURE__*/\nfunction () {\n  function MacroExpander(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace_Namespace(macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  var _proto = MacroExpander.prototype;\n\n  _proto.feed = function feed(input) {\n    this.lexer = new Lexer_Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n  ;\n\n  _proto.beginGroup = function beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n  ;\n\n  _proto.future = function future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n  ;\n\n  _proto.popToken = function popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n  ;\n\n  _proto.pushToken = function pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n  ;\n\n  _proto.pushTokens = function pushTokens(tokens) {\n    var _this$stack;\n\n    (_this$stack = this.stack).push.apply(_this$stack, tokens);\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n  ;\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the specified number of arguments from the token stream,\n   * and return the resulting array of arguments.\n   */\n  ;\n\n  _proto.consumeArgs = function consumeArgs(numArgs) {\n    var args = []; // obtain arguments, either single token or balanced {…} group\n\n    for (var i = 0; i < numArgs; ++i) {\n      this.consumeSpaces(); // ignore spaces before each argument\n\n      var startOfArg = this.popToken();\n\n      if (startOfArg.text === \"{\") {\n        var arg = [];\n        var depth = 1;\n\n        while (depth !== 0) {\n          var tok = this.popToken();\n          arg.push(tok);\n\n          if (tok.text === \"{\") {\n            ++depth;\n          } else if (tok.text === \"}\") {\n            --depth;\n          } else if (tok.text === \"EOF\") {\n            throw new src_ParseError(\"End of input in macro argument\", startOfArg);\n          }\n        }\n\n        arg.pop(); // remove last }\n\n        arg.reverse(); // like above, to fit in with stack order\n\n        args[i] = arg;\n      } else if (startOfArg.text === \"EOF\") {\n        throw new src_ParseError(\"End of input expecting macro argument\");\n      } else {\n        args[i] = [startOfArg];\n      }\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * At the moment, macro expansion doesn't handle delimited macros,\n   * i.e. things like those defined by \\def\\foo#1\\end{…}.\n   * See the TeX book page 202ff. for details on how those should behave.\n   */\n  ;\n\n  _proto.expandOnce = function expandOnce() {\n    var topToken = this.popToken();\n    var name = topToken.text;\n\n    var expansion = this._getExpansion(name);\n\n    if (expansion == null) {\n      // mainly checking for undefined here\n      // Fully expanded\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new src_ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    var tokens = expansion.tokens;\n\n    if (expansion.numArgs) {\n      var args = this.consumeArgs(expansion.numArgs); // paste arguments in place of the placeholders\n\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new src_ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            var _tokens;\n\n            // replace the placeholder with the indicated argument\n            (_tokens = tokens).splice.apply(_tokens, [i, 2].concat(args[+tok.text - 1]));\n          } else {\n            throw new src_ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n  ;\n\n  _proto.expandAfterFuture = function expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n  ;\n\n  _proto.expandNextToken = function expandNextToken() {\n    for (;;) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        if (expanded.text === \"\\\\relax\") {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacro = function expandMacro(name) {\n    if (!this.macros.get(name)) {\n      return undefined;\n    }\n\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushToken(new Token_Token(name));\n\n    while (this.stack.length > oldStackLength) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacroAsText = function expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(function (token) {\n        return token.text;\n      }).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n  ;\n\n  _proto._getExpansion = function _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n\n    var expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      var numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        var stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer_Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens: tokens,\n        numArgs: numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n  ;\n\n  _proto.isDefined = function isDefined(name) {\n    return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  };\n\n  return MacroExpander;\n}();\n\n\n// CONCATENATED MODULE: ./src/unicodeAccents.js\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\n/* harmony default export */ var unicodeAccents = ({\n  \"\\u0301\": {\n    text: \"\\\\'\",\n    math: '\\\\acute'\n  },\n  \"\\u0300\": {\n    text: '\\\\`',\n    math: '\\\\grave'\n  },\n  \"\\u0308\": {\n    text: '\\\\\"',\n    math: '\\\\ddot'\n  },\n  \"\\u0303\": {\n    text: '\\\\~',\n    math: '\\\\tilde'\n  },\n  \"\\u0304\": {\n    text: '\\\\=',\n    math: '\\\\bar'\n  },\n  \"\\u0306\": {\n    text: \"\\\\u\",\n    math: '\\\\breve'\n  },\n  \"\\u030C\": {\n    text: '\\\\v',\n    math: '\\\\check'\n  },\n  \"\\u0302\": {\n    text: '\\\\^',\n    math: '\\\\hat'\n  },\n  \"\\u0307\": {\n    text: '\\\\.',\n    math: '\\\\dot'\n  },\n  \"\\u030A\": {\n    text: '\\\\r',\n    math: '\\\\mathring'\n  },\n  \"\\u030B\": {\n    text: '\\\\H'\n  }\n});\n// CONCATENATED MODULE: ./src/unicodeSymbols.js\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\n/* harmony default export */ var unicodeSymbols = ({\n  \"\\xE1\": \"a\\u0301\",\n  // á = \\'{a}\n  \"\\xE0\": \"a\\u0300\",\n  // à = \\`{a}\n  \"\\xE4\": \"a\\u0308\",\n  // ä = \\\"{a}\n  \"\\u01DF\": \"a\\u0308\\u0304\",\n  // ǟ = \\\"\\={a}\n  \"\\xE3\": \"a\\u0303\",\n  // ã = \\~{a}\n  \"\\u0101\": \"a\\u0304\",\n  // ā = \\={a}\n  \"\\u0103\": \"a\\u0306\",\n  // ă = \\u{a}\n  \"\\u1EAF\": \"a\\u0306\\u0301\",\n  // ắ = \\u\\'{a}\n  \"\\u1EB1\": \"a\\u0306\\u0300\",\n  // ằ = \\u\\`{a}\n  \"\\u1EB5\": \"a\\u0306\\u0303\",\n  // ẵ = \\u\\~{a}\n  \"\\u01CE\": \"a\\u030C\",\n  // ǎ = \\v{a}\n  \"\\xE2\": \"a\\u0302\",\n  // â = \\^{a}\n  \"\\u1EA5\": \"a\\u0302\\u0301\",\n  // ấ = \\^\\'{a}\n  \"\\u1EA7\": \"a\\u0302\\u0300\",\n  // ầ = \\^\\`{a}\n  \"\\u1EAB\": \"a\\u0302\\u0303\",\n  // ẫ = \\^\\~{a}\n  \"\\u0227\": \"a\\u0307\",\n  // ȧ = \\.{a}\n  \"\\u01E1\": \"a\\u0307\\u0304\",\n  // ǡ = \\.\\={a}\n  \"\\xE5\": \"a\\u030A\",\n  // å = \\r{a}\n  \"\\u01FB\": \"a\\u030A\\u0301\",\n  // ǻ = \\r\\'{a}\n  \"\\u1E03\": \"b\\u0307\",\n  // ḃ = \\.{b}\n  \"\\u0107\": \"c\\u0301\",\n  // ć = \\'{c}\n  \"\\u010D\": \"c\\u030C\",\n  // č = \\v{c}\n  \"\\u0109\": \"c\\u0302\",\n  // ĉ = \\^{c}\n  \"\\u010B\": \"c\\u0307\",\n  // ċ = \\.{c}\n  \"\\u010F\": \"d\\u030C\",\n  // ď = \\v{d}\n  \"\\u1E0B\": \"d\\u0307\",\n  // ḋ = \\.{d}\n  \"\\xE9\": \"e\\u0301\",\n  // é = \\'{e}\n  \"\\xE8\": \"e\\u0300\",\n  // è = \\`{e}\n  \"\\xEB\": \"e\\u0308\",\n  // ë = \\\"{e}\n  \"\\u1EBD\": \"e\\u0303\",\n  // ẽ = \\~{e}\n  \"\\u0113\": \"e\\u0304\",\n  // ē = \\={e}\n  \"\\u1E17\": \"e\\u0304\\u0301\",\n  // ḗ = \\=\\'{e}\n  \"\\u1E15\": \"e\\u0304\\u0300\",\n  // ḕ = \\=\\`{e}\n  \"\\u0115\": \"e\\u0306\",\n  // ĕ = \\u{e}\n  \"\\u011B\": \"e\\u030C\",\n  // ě = \\v{e}\n  \"\\xEA\": \"e\\u0302\",\n  // ê = \\^{e}\n  \"\\u1EBF\": \"e\\u0302\\u0301\",\n  // ế = \\^\\'{e}\n  \"\\u1EC1\": \"e\\u0302\\u0300\",\n  // ề = \\^\\`{e}\n  \"\\u1EC5\": \"e\\u0302\\u0303\",\n  // ễ = \\^\\~{e}\n  \"\\u0117\": \"e\\u0307\",\n  // ė = \\.{e}\n  \"\\u1E1F\": \"f\\u0307\",\n  // ḟ = \\.{f}\n  \"\\u01F5\": \"g\\u0301\",\n  // ǵ = \\'{g}\n  \"\\u1E21\": \"g\\u0304\",\n  // ḡ = \\={g}\n  \"\\u011F\": \"g\\u0306\",\n  // ğ = \\u{g}\n  \"\\u01E7\": \"g\\u030C\",\n  // ǧ = \\v{g}\n  \"\\u011D\": \"g\\u0302\",\n  // ĝ = \\^{g}\n  \"\\u0121\": \"g\\u0307\",\n  // ġ = \\.{g}\n  \"\\u1E27\": \"h\\u0308\",\n  // ḧ = \\\"{h}\n  \"\\u021F\": \"h\\u030C\",\n  // ȟ = \\v{h}\n  \"\\u0125\": \"h\\u0302\",\n  // ĥ = \\^{h}\n  \"\\u1E23\": \"h\\u0307\",\n  // ḣ = \\.{h}\n  \"\\xED\": \"i\\u0301\",\n  // í = \\'{i}\n  \"\\xEC\": \"i\\u0300\",\n  // ì = \\`{i}\n  \"\\xEF\": \"i\\u0308\",\n  // ï = \\\"{i}\n  \"\\u1E2F\": \"i\\u0308\\u0301\",\n  // ḯ = \\\"\\'{i}\n  \"\\u0129\": \"i\\u0303\",\n  // ĩ = \\~{i}\n  \"\\u012B\": \"i\\u0304\",\n  // ī = \\={i}\n  \"\\u012D\": \"i\\u0306\",\n  // ĭ = \\u{i}\n  \"\\u01D0\": \"i\\u030C\",\n  // ǐ = \\v{i}\n  \"\\xEE\": \"i\\u0302\",\n  // î = \\^{i}\n  \"\\u01F0\": \"j\\u030C\",\n  // ǰ = \\v{j}\n  \"\\u0135\": \"j\\u0302\",\n  // ĵ = \\^{j}\n  \"\\u1E31\": \"k\\u0301\",\n  // ḱ = \\'{k}\n  \"\\u01E9\": \"k\\u030C\",\n  // ǩ = \\v{k}\n  \"\\u013A\": \"l\\u0301\",\n  // ĺ = \\'{l}\n  \"\\u013E\": \"l\\u030C\",\n  // ľ = \\v{l}\n  \"\\u1E3F\": \"m\\u0301\",\n  // ḿ = \\'{m}\n  \"\\u1E41\": \"m\\u0307\",\n  // ṁ = \\.{m}\n  \"\\u0144\": \"n\\u0301\",\n  // ń = \\'{n}\n  \"\\u01F9\": \"n\\u0300\",\n  // ǹ = \\`{n}\n  \"\\xF1\": \"n\\u0303\",\n  // ñ = \\~{n}\n  \"\\u0148\": \"n\\u030C\",\n  // ň = \\v{n}\n  \"\\u1E45\": \"n\\u0307\",\n  // ṅ = \\.{n}\n  \"\\xF3\": \"o\\u0301\",\n  // ó = \\'{o}\n  \"\\xF2\": \"o\\u0300\",\n  // ò = \\`{o}\n  \"\\xF6\": \"o\\u0308\",\n  // ö = \\\"{o}\n  \"\\u022B\": \"o\\u0308\\u0304\",\n  // ȫ = \\\"\\={o}\n  \"\\xF5\": \"o\\u0303\",\n  // õ = \\~{o}\n  \"\\u1E4D\": \"o\\u0303\\u0301\",\n  // ṍ = \\~\\'{o}\n  \"\\u1E4F\": \"o\\u0303\\u0308\",\n  // ṏ = \\~\\\"{o}\n  \"\\u022D\": \"o\\u0303\\u0304\",\n  // ȭ = \\~\\={o}\n  \"\\u014D\": \"o\\u0304\",\n  // ō = \\={o}\n  \"\\u1E53\": \"o\\u0304\\u0301\",\n  // ṓ = \\=\\'{o}\n  \"\\u1E51\": \"o\\u0304\\u0300\",\n  // ṑ = \\=\\`{o}\n  \"\\u014F\": \"o\\u0306\",\n  // ŏ = \\u{o}\n  \"\\u01D2\": \"o\\u030C\",\n  // ǒ = \\v{o}\n  \"\\xF4\": \"o\\u0302\",\n  // ô = \\^{o}\n  \"\\u1ED1\": \"o\\u0302\\u0301\",\n  // ố = \\^\\'{o}\n  \"\\u1ED3\": \"o\\u0302\\u0300\",\n  // ồ = \\^\\`{o}\n  \"\\u1ED7\": \"o\\u0302\\u0303\",\n  // ỗ = \\^\\~{o}\n  \"\\u022F\": \"o\\u0307\",\n  // ȯ = \\.{o}\n  \"\\u0231\": \"o\\u0307\\u0304\",\n  // ȱ = \\.\\={o}\n  \"\\u0151\": \"o\\u030B\",\n  // ő = \\H{o}\n  \"\\u1E55\": \"p\\u0301\",\n  // ṕ = \\'{p}\n  \"\\u1E57\": \"p\\u0307\",\n  // ṗ = \\.{p}\n  \"\\u0155\": \"r\\u0301\",\n  // ŕ = \\'{r}\n  \"\\u0159\": \"r\\u030C\",\n  // ř = \\v{r}\n  \"\\u1E59\": \"r\\u0307\",\n  // ṙ = \\.{r}\n  \"\\u015B\": \"s\\u0301\",\n  // ś = \\'{s}\n  \"\\u1E65\": \"s\\u0301\\u0307\",\n  // ṥ = \\'\\.{s}\n  \"\\u0161\": \"s\\u030C\",\n  // š = \\v{s}\n  \"\\u1E67\": \"s\\u030C\\u0307\",\n  // ṧ = \\v\\.{s}\n  \"\\u015D\": \"s\\u0302\",\n  // ŝ = \\^{s}\n  \"\\u1E61\": \"s\\u0307\",\n  // ṡ = \\.{s}\n  \"\\u1E97\": \"t\\u0308\",\n  // ẗ = \\\"{t}\n  \"\\u0165\": \"t\\u030C\",\n  // ť = \\v{t}\n  \"\\u1E6B\": \"t\\u0307\",\n  // ṫ = \\.{t}\n  \"\\xFA\": \"u\\u0301\",\n  // ú = \\'{u}\n  \"\\xF9\": \"u\\u0300\",\n  // ù = \\`{u}\n  \"\\xFC\": \"u\\u0308\",\n  // ü = \\\"{u}\n  \"\\u01D8\": \"u\\u0308\\u0301\",\n  // ǘ = \\\"\\'{u}\n  \"\\u01DC\": \"u\\u0308\\u0300\",\n  // ǜ = \\\"\\`{u}\n  \"\\u01D6\": \"u\\u0308\\u0304\",\n  // ǖ = \\\"\\={u}\n  \"\\u01DA\": \"u\\u0308\\u030C\",\n  // ǚ = \\\"\\v{u}\n  \"\\u0169\": \"u\\u0303\",\n  // ũ = \\~{u}\n  \"\\u1E79\": \"u\\u0303\\u0301\",\n  // ṹ = \\~\\'{u}\n  \"\\u016B\": \"u\\u0304\",\n  // ū = \\={u}\n  \"\\u1E7B\": \"u\\u0304\\u0308\",\n  // ṻ = \\=\\\"{u}\n  \"\\u016D\": \"u\\u0306\",\n  // ŭ = \\u{u}\n  \"\\u01D4\": \"u\\u030C\",\n  // ǔ = \\v{u}\n  \"\\xFB\": \"u\\u0302\",\n  // û = \\^{u}\n  \"\\u016F\": \"u\\u030A\",\n  // ů = \\r{u}\n  \"\\u0171\": \"u\\u030B\",\n  // ű = \\H{u}\n  \"\\u1E7D\": \"v\\u0303\",\n  // ṽ = \\~{v}\n  \"\\u1E83\": \"w\\u0301\",\n  // ẃ = \\'{w}\n  \"\\u1E81\": \"w\\u0300\",\n  // ẁ = \\`{w}\n  \"\\u1E85\": \"w\\u0308\",\n  // ẅ = \\\"{w}\n  \"\\u0175\": \"w\\u0302\",\n  // ŵ = \\^{w}\n  \"\\u1E87\": \"w\\u0307\",\n  // ẇ = \\.{w}\n  \"\\u1E98\": \"w\\u030A\",\n  // ẘ = \\r{w}\n  \"\\u1E8D\": \"x\\u0308\",\n  // ẍ = \\\"{x}\n  \"\\u1E8B\": \"x\\u0307\",\n  // ẋ = \\.{x}\n  \"\\xFD\": \"y\\u0301\",\n  // ý = \\'{y}\n  \"\\u1EF3\": \"y\\u0300\",\n  // ỳ = \\`{y}\n  \"\\xFF\": \"y\\u0308\",\n  // ÿ = \\\"{y}\n  \"\\u1EF9\": \"y\\u0303\",\n  // ỹ = \\~{y}\n  \"\\u0233\": \"y\\u0304\",\n  // ȳ = \\={y}\n  \"\\u0177\": \"y\\u0302\",\n  // ŷ = \\^{y}\n  \"\\u1E8F\": \"y\\u0307\",\n  // ẏ = \\.{y}\n  \"\\u1E99\": \"y\\u030A\",\n  // ẙ = \\r{y}\n  \"\\u017A\": \"z\\u0301\",\n  // ź = \\'{z}\n  \"\\u017E\": \"z\\u030C\",\n  // ž = \\v{z}\n  \"\\u1E91\": \"z\\u0302\",\n  // ẑ = \\^{z}\n  \"\\u017C\": \"z\\u0307\",\n  // ż = \\.{z}\n  \"\\xC1\": \"A\\u0301\",\n  // Á = \\'{A}\n  \"\\xC0\": \"A\\u0300\",\n  // À = \\`{A}\n  \"\\xC4\": \"A\\u0308\",\n  // Ä = \\\"{A}\n  \"\\u01DE\": \"A\\u0308\\u0304\",\n  // Ǟ = \\\"\\={A}\n  \"\\xC3\": \"A\\u0303\",\n  // Ã = \\~{A}\n  \"\\u0100\": \"A\\u0304\",\n  // Ā = \\={A}\n  \"\\u0102\": \"A\\u0306\",\n  // Ă = \\u{A}\n  \"\\u1EAE\": \"A\\u0306\\u0301\",\n  // Ắ = \\u\\'{A}\n  \"\\u1EB0\": \"A\\u0306\\u0300\",\n  // Ằ = \\u\\`{A}\n  \"\\u1EB4\": \"A\\u0306\\u0303\",\n  // Ẵ = \\u\\~{A}\n  \"\\u01CD\": \"A\\u030C\",\n  // Ǎ = \\v{A}\n  \"\\xC2\": \"A\\u0302\",\n  // Â = \\^{A}\n  \"\\u1EA4\": \"A\\u0302\\u0301\",\n  // Ấ = \\^\\'{A}\n  \"\\u1EA6\": \"A\\u0302\\u0300\",\n  // Ầ = \\^\\`{A}\n  \"\\u1EAA\": \"A\\u0302\\u0303\",\n  // Ẫ = \\^\\~{A}\n  \"\\u0226\": \"A\\u0307\",\n  // Ȧ = \\.{A}\n  \"\\u01E0\": \"A\\u0307\\u0304\",\n  // Ǡ = \\.\\={A}\n  \"\\xC5\": \"A\\u030A\",\n  // Å = \\r{A}\n  \"\\u01FA\": \"A\\u030A\\u0301\",\n  // Ǻ = \\r\\'{A}\n  \"\\u1E02\": \"B\\u0307\",\n  // Ḃ = \\.{B}\n  \"\\u0106\": \"C\\u0301\",\n  // Ć = \\'{C}\n  \"\\u010C\": \"C\\u030C\",\n  // Č = \\v{C}\n  \"\\u0108\": \"C\\u0302\",\n  // Ĉ = \\^{C}\n  \"\\u010A\": \"C\\u0307\",\n  // Ċ = \\.{C}\n  \"\\u010E\": \"D\\u030C\",\n  // Ď = \\v{D}\n  \"\\u1E0A\": \"D\\u0307\",\n  // Ḋ = \\.{D}\n  \"\\xC9\": \"E\\u0301\",\n  // É = \\'{E}\n  \"\\xC8\": \"E\\u0300\",\n  // È = \\`{E}\n  \"\\xCB\": \"E\\u0308\",\n  // Ë = \\\"{E}\n  \"\\u1EBC\": \"E\\u0303\",\n  // Ẽ = \\~{E}\n  \"\\u0112\": \"E\\u0304\",\n  // Ē = \\={E}\n  \"\\u1E16\": \"E\\u0304\\u0301\",\n  // Ḗ = \\=\\'{E}\n  \"\\u1E14\": \"E\\u0304\\u0300\",\n  // Ḕ = \\=\\`{E}\n  \"\\u0114\": \"E\\u0306\",\n  // Ĕ = \\u{E}\n  \"\\u011A\": \"E\\u030C\",\n  // Ě = \\v{E}\n  \"\\xCA\": \"E\\u0302\",\n  // Ê = \\^{E}\n  \"\\u1EBE\": \"E\\u0302\\u0301\",\n  // Ế = \\^\\'{E}\n  \"\\u1EC0\": \"E\\u0302\\u0300\",\n  // Ề = \\^\\`{E}\n  \"\\u1EC4\": \"E\\u0302\\u0303\",\n  // Ễ = \\^\\~{E}\n  \"\\u0116\": \"E\\u0307\",\n  // Ė = \\.{E}\n  \"\\u1E1E\": \"F\\u0307\",\n  // Ḟ = \\.{F}\n  \"\\u01F4\": \"G\\u0301\",\n  // Ǵ = \\'{G}\n  \"\\u1E20\": \"G\\u0304\",\n  // Ḡ = \\={G}\n  \"\\u011E\": \"G\\u0306\",\n  // Ğ = \\u{G}\n  \"\\u01E6\": \"G\\u030C\",\n  // Ǧ = \\v{G}\n  \"\\u011C\": \"G\\u0302\",\n  // Ĝ = \\^{G}\n  \"\\u0120\": \"G\\u0307\",\n  // Ġ = \\.{G}\n  \"\\u1E26\": \"H\\u0308\",\n  // Ḧ = \\\"{H}\n  \"\\u021E\": \"H\\u030C\",\n  // Ȟ = \\v{H}\n  \"\\u0124\": \"H\\u0302\",\n  // Ĥ = \\^{H}\n  \"\\u1E22\": \"H\\u0307\",\n  // Ḣ = \\.{H}\n  \"\\xCD\": \"I\\u0301\",\n  // Í = \\'{I}\n  \"\\xCC\": \"I\\u0300\",\n  // Ì = \\`{I}\n  \"\\xCF\": \"I\\u0308\",\n  // Ï = \\\"{I}\n  \"\\u1E2E\": \"I\\u0308\\u0301\",\n  // Ḯ = \\\"\\'{I}\n  \"\\u0128\": \"I\\u0303\",\n  // Ĩ = \\~{I}\n  \"\\u012A\": \"I\\u0304\",\n  // Ī = \\={I}\n  \"\\u012C\": \"I\\u0306\",\n  // Ĭ = \\u{I}\n  \"\\u01CF\": \"I\\u030C\",\n  // Ǐ = \\v{I}\n  \"\\xCE\": \"I\\u0302\",\n  // Î = \\^{I}\n  \"\\u0130\": \"I\\u0307\",\n  // İ = \\.{I}\n  \"\\u0134\": \"J\\u0302\",\n  // Ĵ = \\^{J}\n  \"\\u1E30\": \"K\\u0301\",\n  // Ḱ = \\'{K}\n  \"\\u01E8\": \"K\\u030C\",\n  // Ǩ = \\v{K}\n  \"\\u0139\": \"L\\u0301\",\n  // Ĺ = \\'{L}\n  \"\\u013D\": \"L\\u030C\",\n  // Ľ = \\v{L}\n  \"\\u1E3E\": \"M\\u0301\",\n  // Ḿ = \\'{M}\n  \"\\u1E40\": \"M\\u0307\",\n  // Ṁ = \\.{M}\n  \"\\u0143\": \"N\\u0301\",\n  // Ń = \\'{N}\n  \"\\u01F8\": \"N\\u0300\",\n  // Ǹ = \\`{N}\n  \"\\xD1\": \"N\\u0303\",\n  // Ñ = \\~{N}\n  \"\\u0147\": \"N\\u030C\",\n  // Ň = \\v{N}\n  \"\\u1E44\": \"N\\u0307\",\n  // Ṅ = \\.{N}\n  \"\\xD3\": \"O\\u0301\",\n  // Ó = \\'{O}\n  \"\\xD2\": \"O\\u0300\",\n  // Ò = \\`{O}\n  \"\\xD6\": \"O\\u0308\",\n  // Ö = \\\"{O}\n  \"\\u022A\": \"O\\u0308\\u0304\",\n  // Ȫ = \\\"\\={O}\n  \"\\xD5\": \"O\\u0303\",\n  // Õ = \\~{O}\n  \"\\u1E4C\": \"O\\u0303\\u0301\",\n  // Ṍ = \\~\\'{O}\n  \"\\u1E4E\": \"O\\u0303\\u0308\",\n  // Ṏ = \\~\\\"{O}\n  \"\\u022C\": \"O\\u0303\\u0304\",\n  // Ȭ = \\~\\={O}\n  \"\\u014C\": \"O\\u0304\",\n  // Ō = \\={O}\n  \"\\u1E52\": \"O\\u0304\\u0301\",\n  // Ṓ = \\=\\'{O}\n  \"\\u1E50\": \"O\\u0304\\u0300\",\n  // Ṑ = \\=\\`{O}\n  \"\\u014E\": \"O\\u0306\",\n  // Ŏ = \\u{O}\n  \"\\u01D1\": \"O\\u030C\",\n  // Ǒ = \\v{O}\n  \"\\xD4\": \"O\\u0302\",\n  // Ô = \\^{O}\n  \"\\u1ED0\": \"O\\u0302\\u0301\",\n  // Ố = \\^\\'{O}\n  \"\\u1ED2\": \"O\\u0302\\u0300\",\n  // Ồ = \\^\\`{O}\n  \"\\u1ED6\": \"O\\u0302\\u0303\",\n  // Ỗ = \\^\\~{O}\n  \"\\u022E\": \"O\\u0307\",\n  // Ȯ = \\.{O}\n  \"\\u0230\": \"O\\u0307\\u0304\",\n  // Ȱ = \\.\\={O}\n  \"\\u0150\": \"O\\u030B\",\n  // Ő = \\H{O}\n  \"\\u1E54\": \"P\\u0301\",\n  // Ṕ = \\'{P}\n  \"\\u1E56\": \"P\\u0307\",\n  // Ṗ = \\.{P}\n  \"\\u0154\": \"R\\u0301\",\n  // Ŕ = \\'{R}\n  \"\\u0158\": \"R\\u030C\",\n  // Ř = \\v{R}\n  \"\\u1E58\": \"R\\u0307\",\n  // Ṙ = \\.{R}\n  \"\\u015A\": \"S\\u0301\",\n  // Ś = \\'{S}\n  \"\\u1E64\": \"S\\u0301\\u0307\",\n  // Ṥ = \\'\\.{S}\n  \"\\u0160\": \"S\\u030C\",\n  // Š = \\v{S}\n  \"\\u1E66\": \"S\\u030C\\u0307\",\n  // Ṧ = \\v\\.{S}\n  \"\\u015C\": \"S\\u0302\",\n  // Ŝ = \\^{S}\n  \"\\u1E60\": \"S\\u0307\",\n  // Ṡ = \\.{S}\n  \"\\u0164\": \"T\\u030C\",\n  // Ť = \\v{T}\n  \"\\u1E6A\": \"T\\u0307\",\n  // Ṫ = \\.{T}\n  \"\\xDA\": \"U\\u0301\",\n  // Ú = \\'{U}\n  \"\\xD9\": \"U\\u0300\",\n  // Ù = \\`{U}\n  \"\\xDC\": \"U\\u0308\",\n  // Ü = \\\"{U}\n  \"\\u01D7\": \"U\\u0308\\u0301\",\n  // Ǘ = \\\"\\'{U}\n  \"\\u01DB\": \"U\\u0308\\u0300\",\n  // Ǜ = \\\"\\`{U}\n  \"\\u01D5\": \"U\\u0308\\u0304\",\n  // Ǖ = \\\"\\={U}\n  \"\\u01D9\": \"U\\u0308\\u030C\",\n  // Ǚ = \\\"\\v{U}\n  \"\\u0168\": \"U\\u0303\",\n  // Ũ = \\~{U}\n  \"\\u1E78\": \"U\\u0303\\u0301\",\n  // Ṹ = \\~\\'{U}\n  \"\\u016A\": \"U\\u0304\",\n  // Ū = \\={U}\n  \"\\u1E7A\": \"U\\u0304\\u0308\",\n  // Ṻ = \\=\\\"{U}\n  \"\\u016C\": \"U\\u0306\",\n  // Ŭ = \\u{U}\n  \"\\u01D3\": \"U\\u030C\",\n  // Ǔ = \\v{U}\n  \"\\xDB\": \"U\\u0302\",\n  // Û = \\^{U}\n  \"\\u016E\": \"U\\u030A\",\n  // Ů = \\r{U}\n  \"\\u0170\": \"U\\u030B\",\n  // Ű = \\H{U}\n  \"\\u1E7C\": \"V\\u0303\",\n  // Ṽ = \\~{V}\n  \"\\u1E82\": \"W\\u0301\",\n  // Ẃ = \\'{W}\n  \"\\u1E80\": \"W\\u0300\",\n  // Ẁ = \\`{W}\n  \"\\u1E84\": \"W\\u0308\",\n  // Ẅ = \\\"{W}\n  \"\\u0174\": \"W\\u0302\",\n  // Ŵ = \\^{W}\n  \"\\u1E86\": \"W\\u0307\",\n  // Ẇ = \\.{W}\n  \"\\u1E8C\": \"X\\u0308\",\n  // Ẍ = \\\"{X}\n  \"\\u1E8A\": \"X\\u0307\",\n  // Ẋ = \\.{X}\n  \"\\xDD\": \"Y\\u0301\",\n  // Ý = \\'{Y}\n  \"\\u1EF2\": \"Y\\u0300\",\n  // Ỳ = \\`{Y}\n  \"\\u0178\": \"Y\\u0308\",\n  // Ÿ = \\\"{Y}\n  \"\\u1EF8\": \"Y\\u0303\",\n  // Ỹ = \\~{Y}\n  \"\\u0232\": \"Y\\u0304\",\n  // Ȳ = \\={Y}\n  \"\\u0176\": \"Y\\u0302\",\n  // Ŷ = \\^{Y}\n  \"\\u1E8E\": \"Y\\u0307\",\n  // Ẏ = \\.{Y}\n  \"\\u0179\": \"Z\\u0301\",\n  // Ź = \\'{Z}\n  \"\\u017D\": \"Z\\u030C\",\n  // Ž = \\v{Z}\n  \"\\u1E90\": \"Z\\u0302\",\n  // Ẑ = \\^{Z}\n  \"\\u017B\": \"Z\\u0307\",\n  // Ż = \\.{Z}\n  \"\\u03AC\": \"\\u03B1\\u0301\",\n  // ά = \\'{α}\n  \"\\u1F70\": \"\\u03B1\\u0300\",\n  // ὰ = \\`{α}\n  \"\\u1FB1\": \"\\u03B1\\u0304\",\n  // ᾱ = \\={α}\n  \"\\u1FB0\": \"\\u03B1\\u0306\",\n  // ᾰ = \\u{α}\n  \"\\u03AD\": \"\\u03B5\\u0301\",\n  // έ = \\'{ε}\n  \"\\u1F72\": \"\\u03B5\\u0300\",\n  // ὲ = \\`{ε}\n  \"\\u03AE\": \"\\u03B7\\u0301\",\n  // ή = \\'{η}\n  \"\\u1F74\": \"\\u03B7\\u0300\",\n  // ὴ = \\`{η}\n  \"\\u03AF\": \"\\u03B9\\u0301\",\n  // ί = \\'{ι}\n  \"\\u1F76\": \"\\u03B9\\u0300\",\n  // ὶ = \\`{ι}\n  \"\\u03CA\": \"\\u03B9\\u0308\",\n  // ϊ = \\\"{ι}\n  \"\\u0390\": \"\\u03B9\\u0308\\u0301\",\n  // ΐ = \\\"\\'{ι}\n  \"\\u1FD2\": \"\\u03B9\\u0308\\u0300\",\n  // ῒ = \\\"\\`{ι}\n  \"\\u1FD1\": \"\\u03B9\\u0304\",\n  // ῑ = \\={ι}\n  \"\\u1FD0\": \"\\u03B9\\u0306\",\n  // ῐ = \\u{ι}\n  \"\\u03CC\": \"\\u03BF\\u0301\",\n  // ό = \\'{ο}\n  \"\\u1F78\": \"\\u03BF\\u0300\",\n  // ὸ = \\`{ο}\n  \"\\u03CD\": \"\\u03C5\\u0301\",\n  // ύ = \\'{υ}\n  \"\\u1F7A\": \"\\u03C5\\u0300\",\n  // ὺ = \\`{υ}\n  \"\\u03CB\": \"\\u03C5\\u0308\",\n  // ϋ = \\\"{υ}\n  \"\\u03B0\": \"\\u03C5\\u0308\\u0301\",\n  // ΰ = \\\"\\'{υ}\n  \"\\u1FE2\": \"\\u03C5\\u0308\\u0300\",\n  // ῢ = \\\"\\`{υ}\n  \"\\u1FE1\": \"\\u03C5\\u0304\",\n  // ῡ = \\={υ}\n  \"\\u1FE0\": \"\\u03C5\\u0306\",\n  // ῠ = \\u{υ}\n  \"\\u03CE\": \"\\u03C9\\u0301\",\n  // ώ = \\'{ω}\n  \"\\u1F7C\": \"\\u03C9\\u0300\",\n  // ὼ = \\`{ω}\n  \"\\u038E\": \"\\u03A5\\u0301\",\n  // Ύ = \\'{Υ}\n  \"\\u1FEA\": \"\\u03A5\\u0300\",\n  // Ὺ = \\`{Υ}\n  \"\\u03AB\": \"\\u03A5\\u0308\",\n  // Ϋ = \\\"{Υ}\n  \"\\u1FE9\": \"\\u03A5\\u0304\",\n  // Ῡ = \\={Υ}\n  \"\\u1FE8\": \"\\u03A5\\u0306\",\n  // Ῠ = \\u{Υ}\n  \"\\u038F\": \"\\u03A9\\u0301\",\n  // Ώ = \\'{Ω}\n  \"\\u1FFA\": \"\\u03A9\\u0300\" // Ὼ = \\`{Ω}\n\n});\n// CONCATENATED MODULE: ./src/Parser.js\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nvar Parser_Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander_MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.expect = function expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.nextToken.text !== text) {\n      throw new src_ParseError(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Considers the current look ahead token as consumed,\n   * and fetches the one after that as the new look ahead.\n   */\n  ;\n\n  _proto.consume = function consume() {\n    this.nextToken = this.gullet.expandNextToken();\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n  ;\n\n  _proto.parse = function parse() {\n    // Create a group namespace for the math expression.\n    // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n    this.gullet.beginGroup(); // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    this.consume();\n    var parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\", false); // End the group namespace for the expression\n\n    this.gullet.endGroup();\n    return parse;\n  };\n\n  _proto.parseExpression = function parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.nextToken;\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n  ;\n\n  _proto.handleInfixNodes = function handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      var node = checkNodeType(body[i], \"infix\");\n\n      if (node) {\n        if (overIndex !== -1) {\n          throw new src_ParseError(\"only one infix operator per group\", node.token);\n        }\n\n        overIndex = i;\n        funcName = node.replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var _node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        _node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        _node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [_node];\n    } else {\n      return body;\n    }\n  } // The greediness of a superscript or subscript\n  ;\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  _proto.handleSupSubscript = function handleSupSubscript(name) {\n    var symbolToken = this.nextToken;\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    var group = this.parseGroup(name, false, Parser.SUPSUB_GREEDINESS);\n\n    if (!group) {\n      throw new src_ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n  ;\n\n  _proto.handleUnsupportedCmd = function handleUnsupportedCmd() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    this.consume();\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n  ;\n\n  _proto.parseAtom = function parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup(\"atom\", false, null, breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.nextToken;\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        var opNode = checkNodeType(base, \"op\");\n\n        if (opNode) {\n          var limits = lex.text === \"\\\\limits\";\n          opNode.limits = limits;\n          opNode.alwaysHandleSupSub = true;\n        } else {\n          throw new src_ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new src_ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        var prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.nextToken.text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.nextToken.text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n  ;\n\n  _proto.parseFunction = function parseFunction(breakOnTokenText, name, // For error reporting.\n  greediness) {\n    var token = this.nextToken;\n    var func = token.text;\n    var funcData = src_functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    if (greediness != null && funcData.greediness <= greediness) {\n      throw new src_ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    } // hyperref package sets the catcode of % as an active character\n\n\n    if (funcData.argTypes && funcData.argTypes[0] === \"url\") {\n      this.gullet.lexer.setCatcode(\"%\", 13);\n    } // Consume the command token after possibly switching to the\n    // mode specified by the function (for instant mode switching),\n    // and then immediately switch back.\n\n\n    if (funcData.consumeMode) {\n      var oldMode = this.mode;\n      this.switchMode(funcData.consumeMode);\n      this.consume();\n      this.switchMode(oldMode);\n    } else {\n      this.consume();\n    }\n\n    var _this$parseArguments = this.parseArguments(func, funcData),\n        args = _this$parseArguments.args,\n        optArgs = _this$parseArguments.optArgs;\n\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n  ;\n\n  _proto.callFunction = function callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token: token,\n      breakOnTokenText: breakOnTokenText\n    };\n    var func = src_functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new src_ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var baseGreediness = funcData.greediness;\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n\n      if (i > 0 && !isOptional) {\n        this.consumeSpaces();\n      } // Also consume leading spaces in math mode, as parseSymbol\n      // won't know what to do with them.  This can only happen with\n      // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n      // In LaTeX, the \\foo's get treated as (blank) arguments).\n      // In KaTeX, for now, both spaces will get consumed.\n      // TODO(edemaine)\n\n\n      if (i === 0 && !isOptional && this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var nextToken = this.nextToken;\n      var arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional, baseGreediness);\n\n      if (!arg) {\n        if (isOptional) {\n          optArgs.push(null);\n          continue;\n        }\n\n        throw new src_ParseError(\"Expected group after '\" + func + \"'\", nextToken);\n      }\n\n      (isOptional ? optArgs : args).push(arg);\n    }\n\n    return {\n      args: args,\n      optArgs: optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n  ;\n\n  _proto.parseGroupOfType = function parseGroupOfType(name, type, optional, greediness) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseGroup(name, optional, greediness, undefined, type);\n\n      case \"raw\":\n        {\n          if (optional && this.nextToken.text === \"{\") {\n            return null;\n          }\n\n          var token = this.parseStringGroup(\"raw\", optional, true);\n\n          if (token) {\n            return {\n              type: \"raw\",\n              mode: \"text\",\n              string: token.text\n            };\n          } else {\n            throw new src_ParseError(\"Expected raw group\", this.nextToken);\n          }\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseGroup(name, optional, greediness);\n\n      default:\n        throw new src_ParseError(\"Unknown group type as \" + name, this.nextToken);\n    }\n  };\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    while (this.nextToken.text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n  ;\n\n  _proto.parseStringGroup = function parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional, raw) {\n    var groupBegin = optional ? \"[\" : \"{\";\n    var groupEnd = optional ? \"]\" : \"}\";\n    var nextToken = this.nextToken;\n\n    if (nextToken.text !== groupBegin) {\n      if (optional) {\n        return null;\n      } else if (raw && nextToken.text !== \"EOF\" && /[^{}[\\]]/.test(nextToken.text)) {\n        // allow a single character in raw string group\n        this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n        this.consume();\n        return nextToken;\n      }\n    }\n\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    this.expect(groupBegin);\n    var str = \"\";\n    var firstToken = this.nextToken;\n    var nested = 0; // allow nested braces in raw string group\n\n    var lastToken = firstToken;\n\n    while (raw && nested > 0 || this.nextToken.text !== groupEnd) {\n      switch (this.nextToken.text) {\n        case \"EOF\":\n          throw new src_ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(lastToken, str));\n\n        case groupBegin:\n          nested++;\n          break;\n\n        case groupEnd:\n          nested--;\n          break;\n      }\n\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    this.mode = outerMode;\n    this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n    this.expect(groupEnd);\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n  ;\n\n  _proto.parseRegexGroup = function parseRegexGroup(regex, modeName) {\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    var firstToken = this.nextToken;\n    var lastToken = firstToken;\n    var str = \"\";\n\n    while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new src_ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n  ;\n\n  _proto.parseColorGroup = function parseColorGroup(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n\n    if (!res) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color: color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n  ;\n\n  _proto.parseSizeGroup = function parseSizeGroup(optional) {\n    var res;\n    var isBlank = false;\n\n    if (!optional && this.nextToken.text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank: isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols.\n   */\n  ;\n\n  _proto.parseUrlGroup = function parseUrlGroup(optional) {\n    var res = this.parseStringGroup(\"url\", optional, true); // get raw string\n\n    if (!res) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n    protocol = protocol != null ? protocol[1] : \"_relative\";\n    var allowed = this.settings.allowedProtocols;\n\n    if (!utils.contains(allowed, \"*\") && !utils.contains(allowed, protocol)) {\n      throw new src_ParseError(\"Forbidden protocol '\" + protocol + \"'\", res);\n    }\n\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url: url\n    };\n  }\n  /**\n   * If `optional` is false or absent, this parses an ordinary group,\n   * which is either a single nucleus (like \"x\") or an expression\n   * in braces (like \"{x+y}\") or an implicit group, a group that starts\n   * at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   * If `optional` is true, it parses either a bracket-delimited expression\n   * (like \"[x+y]\") or returns null to indicate the absence of a\n   * bracket-enclosed group.\n   * If `mode` is present, switches to that mode while parsing the group,\n   * and switches back after.\n   */\n  ;\n\n  _proto.parseGroup = function parseGroup(name, // For error reporting.\n  optional, greediness, breakOnTokenText, mode) {\n    var outerMode = this.mode;\n    var firstToken = this.nextToken;\n    var text = firstToken.text; // Switch to specified mode\n\n    if (mode) {\n      this.switchMode(mode);\n    }\n\n    var groupEnd;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (optional ? text === \"[\" : text === \"{\" || text === \"\\\\begingroup\") {\n      groupEnd = Parser.endOfGroup[text]; // Start a new group namespace\n\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      this.consume();\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.nextToken; // End group namespace before consuming symbol after close brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else if (optional) {\n      // Return nothing for an optional group\n      result = null;\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new src_ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.handleUnsupportedCmd();\n      }\n    } // Switch mode back\n\n\n    if (mode) {\n      this.switchMode(outerMode);\n    } // Make sure we got a close brace\n\n\n    if (groupEnd) {\n      this.expect(groupEnd);\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n  ;\n\n  _proto.formLigatures = function formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like verbatim\n   */\n  ;\n\n  _proto.parseSymbol = function parseSymbol() {\n    var nucleus = this.nextToken;\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new src_ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star: star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = \"\\u0131\"; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = \"\\u0237\"; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (src_symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      var group = src_symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family: family,\n          loc: loc,\n          text: text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc: loc,\n          text: text\n        };\n      }\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      }\n\n      symbol = {\n        type: \"textord\",\n        mode: this.mode,\n        loc: SourceLocation.range(nucleus),\n        text: text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new src_ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new src_ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          base: symbol\n        };\n      }\n    }\n\n    return symbol;\n  };\n\n  return Parser;\n}();\n\nParser_Parser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser_Parser.endOfGroup = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"\\\\begingroup\": \"\\\\endgroup\"\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n\n};\nParser_Parser.SUPSUB_GREEDINESS = 1;\n\n// CONCATENATED MODULE: ./src/parseTree.js\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree_parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  var parser = new Parser_Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  var tree = parser.parse(); // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new src_ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree_parseTree);\n// CONCATENATED MODULE: ./katex.js\n/* eslint no-console:0 */\n\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar katex_render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  var node = katex_renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    katex_render = function render() {\n      throw new src_ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = katex_renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar katex_generateParseTree = function generateParseTree(expression, options) {\n  var settings = new src_Settings(options);\n  return src_parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar katex_renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof src_ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan([\"katex-error\"], [new domTree_SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n\n/* harmony default export */ var katex_0 = ({\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.10.2\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render: katex_render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString: renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError: src_ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: katex_generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: katex_renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: katex_renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span: domTree_Span,\n    Anchor: domTree_Anchor,\n    SymbolNode: domTree_SymbolNode,\n    SvgNode: SvgNode,\n    PathNode: domTree_PathNode,\n    LineNode: LineNode\n  }\n});\n// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As ECMAScript, flow[1] and jest[2]\n * doesn't support CSS modules natively, a separate entry point is used and\n * it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n/* harmony default export */ var katex_webpack = __webpack_exports__[\"default\"] = (katex_0);\n\n/***/ })\n/******/ ])[\"default\"];\n});","/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text) // the text of the newly constructed token\n  {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error position based on passed-in Token or ParseNode.\n  constructor(message, // The error message\n  token) // An object providing position information\n  {\n    this.position = void 0;\n    let error = \"KaTeX parse error: \" + message;\n    let start;\n    const loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      const input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      const end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      const underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      let left;\n\n      if (start > 15) {\n        left = \"…\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      let right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"…\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n\n\n    const self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n    self.position = start;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nconst contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nconst deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nconst uppercase = /([A-Z])/g;\n\nconst hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nconst ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nconst getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nconst isCharacterBox = function isCharacterBox(group) {\n  const baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nconst assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\nvar utils = {\n  contains,\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox\n};\n\n/* eslint no-console:0 */\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.allowedProtocols = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.allowedProtocols = utils.deflt(options.allowedProtocols, [\"http\", \"https\", \"mailto\", \"_relative\"]);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + `${errorMsg} [${errorCode}]`, token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + `${errorMsg} [${errorCode}]`);\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + `unrecognized '${strict}': ${errorMsg} [${errorCode}]`);\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + `${errorMsg} [${errorCode}]`);\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + `unrecognized '${strict}': ${errorMsg} [${errorCode}]`);\n      return false;\n    }\n  }\n\n}\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nconst D = 0;\nconst Dc = 1;\nconst T = 2;\nconst Tc = 3;\nconst S = 4;\nconst Sc = 5;\nconst SS = 6;\nconst SSc = 7; // Instances of the different styles\n\nconst styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nconst sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nconst sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nconst fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nconst text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\nvar Style$1 = {\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n};\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nconst scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f]]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60]]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (let i = 0; i < scriptData.length; i++) {\n    const script = scriptData[i];\n\n    for (let i = 0; i < script.blocks.length; i++) {\n      const block = script.blocks[i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nconst allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (let i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * This file provides support to domTree.js\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nconst hLinePad = 80; // padding above a sqrt viniculum.\n\nconst path = {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  // All surds have 80 units padding above the viniculumn.\n  sqrtMain: `M95,${622 + hLinePad}c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\ns-65,47,-65,47z M834 ${hLinePad}H400000v40H845z`,\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  sqrtSize1: `M263,${601 + hLinePad}c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 ${hLinePad}H40000v40H1012z`,\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  // The 80 units padding is most obvious here. Note start node at M1001 80.\n  sqrtSize2: `M1001,${hLinePad}H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 ${hLinePad}H400000v40H1013z`,\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  sqrtSize3: `M424,${2398 + hLinePad}c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 ${hLinePad}H400000v40H1014z`,\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  sqrtSize4: `M473,${2713 + hLinePad}c339.3,-1799.3,509.3,-2700,510,-2702\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\nM1001 ${hLinePad}H400000v40H1017z`,\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: `M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z`,\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: `M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z`,\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,\n  leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: `M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z`,\n  leftgroupunder: `M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z`,\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,\n  leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z`,\n  leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,\n  leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z`,\n  leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z`,\n  leftmapsto: `M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z`,\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,\n  longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z`,\n  midbrace: `M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,\n  midbraceunder: `M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,\n  oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,\n  oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z`,\n  oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,\n  oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,\n  rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z`,\n  rightbrace: `M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,\n  rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,\n  rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z`,\n  rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,\n  rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z`,\n  rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,\n  rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,\n  rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z`,\n  righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,\n  rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,\n  rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: `M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,\n  twoheadrightarrow: `M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z`,\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,\n  tilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z`,\n  tilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z`,\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z`,\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,\n  widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,\n  rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,\n  shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,\n  shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`\n};\nvar svgGeometry = {\n  path\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    const frag = document.createDocumentFragment();\n\n    for (let i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    let markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    const toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nconst createClass = function createClass(classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nconst initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nconst toNode = function toNode(tagName) {\n  const node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (let i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nconst toMarkup = function toMarkup(tagName) {\n  let markup = `<${tagName}`; // Add the class\n\n  if (this.classes.length) {\n    markup += ` class=\"${utils.escape(createClass(this.classes))}\"`;\n  }\n\n  let styles = \"\"; // Add the styles, after hyphenation\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n    }\n  }\n\n  if (styles) {\n    markup += ` style=\"${utils.escape(styles)}\"`;\n  } // Add the attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += ` ${attr}=\"${utils.escape(this.attributes[attr])}\"`;\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (let i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += `</${tagName}>`;\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\nconst iCombinations = {\n  'î': '\\u0131\\u0302',\n  'ï': '\\u0131\\u0308',\n  'í': '\\u0131\\u0301',\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    const script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    const node = document.createTextNode(this.text);\n    let span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    let needsSpan = false;\n    let markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    let styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    const escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<svg\"; // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += ` ${attr}='${this.attributes[attr]}'`;\n      }\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for tall \\sqrt\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", svgGeometry.path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return `<path d='${this.alternate}'/>`;\n    } else {\n      return `<path d='${svgGeometry.path[this.pathName]}'/>`;\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<line\";\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += ` ${attr}='${this.attributes[attr]}'`;\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(`Expected symbolNode but got ${String(group)}.`);\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(`Expected span<HtmlDomNode> but got ${String(group)}.`);\n  }\n}\n\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\nvar metricMap = {\n  \"AMS-Regular\": {\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n  },\n  \"Fraktur-Regular\": {\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333]\n  },\n  \"Math-Italic\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"Math-Regular\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"SansSerif-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n  },\n  \"Size1-Regular\": {\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n};\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nconst sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2]\n}; // This map contains a mapping from font name and character code to character\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nconst extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ç': 'C',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ç': 'c',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  metricMap[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!metricMap[font]) {\n    throw new Error(`Font metrics not found for font: ${font}.`);\n  }\n\n  let ch = character.charCodeAt(0);\n  let metrics = metricMap[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = metricMap[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = metricMap[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nconst fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  let sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    const metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (const key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nconst ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nconst NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nconst symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nconst math = \"math\";\nconst text$1 = \"text\"; // fonts:\n\nconst main = \"main\";\nconst ams = \"ams\"; // groups:\n\nconst accent = \"accent-token\";\nconst bin = \"bin\";\nconst close = \"close\";\nconst inner = \"inner\";\nconst mathord = \"mathord\";\nconst op = \"op-token\";\nconst open = \"open\";\nconst punct = \"punct\";\nconst rel = \"rel\";\nconst spacing = \"spacing\";\nconst textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text$1, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text$1, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b6\", \"\\\\P\", true); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceeded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text$1, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text$1, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text$1, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\");\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text$1, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(text$1, main, textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(text$1, main, textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(math, main, open, \"(\", \"\\\\lparen\");\ndefineSymbol(math, main, close, \")\", \"\\\\rparen\");\ndefineSymbol(text$1, main, textord, \"<\", \"\\\\textless\"); // in T1 fontenc\n\ndefineSymbol(text$1, main, textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\n\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text$1, main, textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text$1, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(text$1, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text$1, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text$1, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true);\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(text$1, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text$1, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text$1, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text$1, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(text$1, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(text$1, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text$1, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(text$1, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(text$1, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(text$1, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(text$1, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(text$1, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(text$1, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(text$1, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(text$1, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(text$1, main, accent, \"\\u00a8\", '\\\\\"'); // diaresis\n\ndefineSymbol(text$1, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(text$1, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nconst ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"--\");\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"---\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"'\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"``\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"''\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\n\ndefineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text$1, main, mathord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text$1, main, mathord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"~\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nconst mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (let i = 0; i < mathTextSymbols.length; i++) {\n  const ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nconst textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\n\nfor (let i = 0; i < textSymbols.length; i++) {\n  const ch = textSymbols.charAt(i);\n  defineSymbol(text$1, main, textord, ch, ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nconst letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(text$1, main, textord, ch, ch);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(text$1, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(text$1, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(text$1, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(text$1, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(text$1, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(text$1, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(text$1, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(text$1, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nlet wideChar = \"\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + i); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + i); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + i); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + i); // A-Z a-z Fractur\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + i); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + i); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + i); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + i); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n\n  if (i < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + i); // A-Z double struck\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(text$1, main, textord, ch, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + i); // A-Z script\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(text$1, main, textord, ch, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(text$1, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (let i = 0; i < 10; i++) {\n  const ch = i.toString();\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + i); // 0-9 bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + i); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + i); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + i); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nconst extraLatin = \"ÇÐÞçþ\";\n\nfor (let i = 0; i < extraLatin.length; i++) {\n  const ch = extraLatin.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(text$1, main, textord, ch, ch);\n}\n\ndefineSymbol(text$1, main, textord, \"ð\", \"ð\"); // Unicode versions of existing characters\n\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"–\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"—\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"‘\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"’\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"“\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"”\");\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nconst wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nconst wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nconst wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  const H = wideChar.charCodeAt(0); // high surrogate\n\n  const L = wideChar.charCodeAt(1); // low surrogate\n\n  const codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  const j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    const i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    const i = Math.floor((codePoint - 0x1D7CE) / 10);\n    return [wideNumeralData[i][2], wideNumeralData[i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\nconst sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\nconst sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nconst sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    const data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize\n    };\n\n    for (const key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    const wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    let size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nconst ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nconst relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nconst validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nconst calculateSize = function calculateSize(sizeValue, options) {\n  let scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    let unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n\n/* eslint no-console:0 */\n// The following have to be loaded from Main-Italic font, using class mathit\nconst mathitLetters = [\"\\\\imath\", \"ı\", // dotless i\n\"\\\\jmath\", \"ȷ\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"£\"];\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\n\nconst lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (symbols[mode][value] && symbols[mode][value].replace) {\n    value = symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nconst makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  const lookup = lookupSymbol(value, fontName, mode);\n  const metrics = lookup.metrics;\n  value = lookup.value;\n  let symbolNode;\n\n  if (metrics) {\n    let italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontName + \"'\");\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nconst mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options && options.font && options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (maindefault or mathit) to use for default math font,\n * depending on the symbol.\n */\n\n\nconst mathdefault = function mathdefault(value, mode, options, classes) {\n  if (/[0-9]/.test(value.charAt(0)) || // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n  // need to use Main-Italic instead\n  utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the font names (Main-Italic, Math-Italic, and Caligraphic)\n * and corresponding style tags (mathit, mathdefault, or mathcal) to use for font\n * \"mathnormal\", depending on the symbol.  Use this function instead of fontMap for\n * font \"mathnormal\".\n */\n\n\nconst mathnormal = function mathnormal(value, mode, options, classes) {\n  if (utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else if (/[0-9]/.test(value.charAt(0))) {\n    return {\n      fontName: \"Caligraphic-Regular\",\n      fontClass: \"mathcal\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nconst boldsymbol = function boldsymbol(value, mode, options, classes) {\n  if (lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nconst makeOrd = function makeOrd(group, options, type) {\n  const mode = group.mode;\n  const text = group.text;\n  const classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  const isFont = mode === \"math\" || mode === \"text\" && options.font;\n  const fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    const _wideCharacterFont = wideCharacterFont(text, mode),\n          wideFontName = _wideCharacterFont[0],\n          wideFontClass = _wideCharacterFont[1];\n\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    let fontName;\n    let fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\" || fontOrFamily === \"mathnormal\") {\n      const fontData = fontOrFamily === \"boldsymbol\" ? boldsymbol(text, mode, options, classes) : mathnormal(text, mode, options, classes);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (utils.contains(mathitLetters, text)) {\n      fontName = \"Main-Italic\";\n      fontClasses = [\"mathit\"];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      const parts = [];\n\n      for (let i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    const fontLookup = mathdefault(text, mode, options, classes);\n    return makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n  } else if (type === \"textord\") {\n    const font = symbols[mode][text] && symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      const fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      const fontName = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      const fontName = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontName, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nconst canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  }\n\n  for (const style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (const style in next.style) {\n    if (next.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consequetive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nconst tryCombineChars = chars => {\n  for (let i = 0; i < chars.length - 1; i++) {\n    const prev = chars[i];\n    const next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nconst sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  let height = 0;\n  let depth = 0;\n  let maxFontSize = 0;\n\n  for (let i = 0; i < elem.children.length; i++) {\n    const child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nconst makeSpan = function makeSpan(classes, children, options, style) {\n  const span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nconst makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nconst makeLineSpan = function makeLineSpan(className, options, thickness) {\n  const line = makeSpan([className], [], options);\n  line.height = thickness || options.fontMetrics().defaultRuleThickness;\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nconst makeAnchor = function makeAnchor(href, classes, children, options) {\n  const anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nconst makeFragment = function makeFragment(children) {\n  const fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nconst wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nconst getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    const oldChildren = params.children;\n    const children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    const depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n    let currPos = depth;\n\n    for (let i = 1; i < oldChildren.length; i++) {\n      const diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      const size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth\n    };\n  }\n\n  let depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    let bottom = params.positionData;\n\n    for (let i = 0; i < params.children.length; i++) {\n      const child = params.children[i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    const firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(`Invalid positionType ${params.positionType}.`);\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nconst makeVList = function makeVList(params, options) {\n  const _getVListChildrenAndD = getVListChildrenAndDepth(params),\n        children = _getVListChildrenAndD.children,\n        depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n\n  let pstrutSize = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"elem\") {\n      const elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  const pstrut = makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  const realChildren = [];\n  let minPos = depth;\n  let maxPos = depth;\n  let currPos = depth;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"kern\") {\n      currPos += child.size;\n    } else {\n      const elem = child.elem;\n      const classes = child.wrapperClasses || [];\n      const style = child.wrapperStyle || {};\n      const childWrap = makeSpan(classes, [pstrut, elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - elem.depth + \"em\";\n\n      if (child.marginLeft) {\n        childWrap.style.marginLeft = child.marginLeft;\n      }\n\n      if (child.marginRight) {\n        childWrap.style.marginRight = child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += elem.height + elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  const vlist = makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  let rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    const emptySpan = makeSpan([], []);\n    const depthStrut = makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    const topStrut = makeSpan([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  const vtable = makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nconst makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  const rule = makeSpan([\"mspace\"], [], options);\n  const size = calculateSize(measurement, options);\n  rule.style.marginRight = `${size}em`;\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nconst retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  let baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  let fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return `${baseFontName}-${fontStylesName}`;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nconst fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  // Default math font, \"mathnormal\" and \"boldsymbol\" are missing because they\n  // require the use of several fonts: Main-Italic and Math-Italic for default\n  // math font, Main-Italic, Math-Italic, Caligraphic for \"mathnormal\", and\n  // Math-BoldItalic and Main-Bold for \"boldsymbol\".  This is handled by a\n  // special case in makeOrd which ends up calling mathdefault, mathnormal,\n  // and boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nconst svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nconst staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  const _svgData$value = svgData[value],\n        pathName = _svgData$value[0],\n        width = _svgData$value[1],\n        height = _svgData$value[2];\n  const path = new PathNode(pathName);\n  const svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  const span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\nvar buildCommon = {\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n};\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  const typedNode = checkNodeType(node, type);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of type ${type}, but got ` + (node ? `node of type ${node.type}` : String(node)));\n  } // $FlowFixMe: Unsure why.\n\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkNodeType(node, type) {\n  if (node && node.type === type) {\n    // The definition of ParseNode<TYPE> doesn't communicate to flow that\n    // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n    // happens to be true for all our value types.\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\n\nfunction assertAtomFamily(node, family) {\n  const typedNode = checkAtomFamily(node, family);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of type \"atom\" and family \"${family}\", but got ` + (node ? node.type === \"atom\" ? `atom of family ${node.family}` : `node of type ${node.type}` : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkAtomFamily(node, family) {\n  return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  const typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of symbol group type, but got ` + (node ? `node of type ${node.type}` : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n\n/**\n * Describes spaces between different classes of atoms.\n */\nconst thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nconst mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nconst thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nconst spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nconst tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nconst _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  let type = _ref.type,\n      nodeType = _ref.nodeType,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of functions\n  const data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    greediness: props.greediness === undefined ? 1 : props.greediness,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    consumeMode: props.consumeMode,\n    handler: handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    // TODO: The value type of _functions should be a type union of all\n    // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n    // which is an existential type.\n    // $FlowFixMe\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  let type = _ref2.type,\n      htmlBuilder = _ref2.htmlBuilder,\n      mathmlBuilder = _ref2.mathmlBuilder;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n} // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nconst ordargument = function ordargument(arg) {\n  const node = checkNodeType(arg, \"ordgroup\");\n  return node ? node.body : [arg];\n};\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\nconst makeSpan$1 = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nconst binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nconst binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nconst styleMap = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\nconst DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nconst buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  const groups = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    const output = buildGroup(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      const children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  let glueOptions = options;\n\n  if (expression.length === 1) {\n    const node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n\n    if (!node) ; else if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  const dummyPrev = makeSpan$1([surrounding[0] || \"leftmost\"], [], options);\n  const dummyNext = makeSpan$1([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = prev.classes[0];\n    const type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = getTypeOfDomTree(prev);\n    const type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    const space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nconst traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  let i = 0;\n\n  for (; i < nodes.length; i++) {\n    const node = nodes[i];\n    const partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      traverseNonSpaceNodes(partialGroup.children, callback, prev);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    if (node.classes[0] === \"mspace\") {\n      continue;\n    }\n\n    const result = callback(node, prev.node);\n\n    if (result) {\n      if (prev.insertAfter) {\n        prev.insertAfter(result);\n      } else {\n        // insert at front\n        nodes.unshift(result);\n        i++;\n      }\n    }\n\n    prev.node = node;\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nconst checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nconst getOutermostNode = function getOutermostNode(node, side) {\n  const partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    const children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nconst getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nconst makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  const moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return makeSpan$1(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nconst buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return makeSpan$1();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    let groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);\n      const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  const body = makeSpan$1([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n  // We used to have separate top and bottom struts, where the bottom strut\n  // would like to use `vertical-align: top`, but in IE 9 this lowers the\n  // baseline of the box to the bottom of this strut (instead of staying in\n  // the normal place) so we use an absolute value for vertical-align instead.\n\n  const strut = makeSpan$1([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  let tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  const expression = buildExpression(tree, options, true);\n  const children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  let parts = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      let nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  let tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  }\n\n  const htmlNode = makeSpan$1([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    const strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    let markup = \"<\" + this.type; // Add the attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return `<mtext>${this.character}</mtext>`;\n    } else {\n      return `<mspace width=\"${this.width}em\"/>`;\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n};\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nconst makeText = function makeText(text, mode, options) {\n  if (symbols[mode][text] && symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nconst makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nconst getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  const font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  const mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return \"bold-italic\";\n  }\n\n  let text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  const fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nconst buildExpression$1 = function buildExpression(expression, options) {\n  const groups = [];\n  let lastGroup;\n\n  for (let i = 0; i < expression.length; i++) {\n    const group = buildGroup$1(expression[i], options);\n\n    if (group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n        const child = group.children[0];\n\n        if (child instanceof TextNode && child.text === '.') {\n          lastGroup.children.push(...group.children);\n          continue;\n        }\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        const lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (group.type === 'mo' || group.type === 'mi' || group.type === 'mn')) {\n          const child = group.children[0];\n\n          if (child instanceof TextNode && child.text.length > 0) {\n            // Overlay with combining character long solidus\n            child.text = child.text.slice(0, 1) + \"\\u0338\" + child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nconst buildExpressionRow = function buildExpressionRow(expression, options) {\n  return makeRow(buildExpression$1(expression, options));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nconst buildGroup$1 = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    const result = _mathmlGroupBuilders[group.type](group, options);\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options) {\n  const expression = buildExpression$1(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  let wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  const annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  const semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  const math = new mathMLTree.MathNode(\"math\", [semantics]); // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n  // $FlowFixMe\n\n  return buildCommon.makeSpan([\"katex-mathml\"], [math]);\n}\n\nconst optionsFromSettings = function optionsFromSettings(settings) {\n  return new Options({\n    style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,\n    maxSize: settings.maxSize\n  });\n};\n\nconst displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    const classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nconst buildTree = function buildTree(tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  const mathMLNode = buildMathML(tree, expression, options);\n  const htmlNode = buildHTML(tree, options);\n  const katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n  return displayWrap(katexNode, settings);\n};\nconst buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  const htmlNode = buildHTML(tree, options);\n  const katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\nconst stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\" // None better available.\n\n};\n\nconst mathMLnode = function mathMLnode(label) {\n  const node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nconst katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nconst groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nconst svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    let viewBoxWidth = 400000; // default\n\n    const label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      const grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      const numChars = groupLength(grp.base);\n      let viewBoxHeight;\n      let pathName;\n      let height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        const imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      const path = new PathNode(pathName);\n      const svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": height + \"em\",\n        \"viewBox\": `0 0 ${viewBoxWidth} ${viewBoxHeight}`,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height\n      };\n    } else {\n      const spans = [];\n      const data = katexImagesData[label];\n      const paths = data[0],\n            minWidth = data[1],\n            viewBoxHeight = data[2];\n      const height = viewBoxHeight / 1000;\n      const numSvgChildren = paths.length;\n      let widthClasses;\n      let aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        const align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(`Correct katexImagesData or update code here to support\n                    ${numSvgChildren} children.`);\n      }\n\n      for (let i = 0; i < numSvgChildren; i++) {\n        const path = new PathNode(paths[i]);\n        const svgNode = new SvgNode([path], {\n          \"width\": \"400em\",\n          \"height\": height + \"em\",\n          \"viewBox\": `0 0 ${viewBoxWidth} ${viewBoxHeight}`,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n        const span = buildCommon.makeSvgSpan([widthClasses[i]], [svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span,\n            minWidth,\n            height\n          };\n        } else {\n          span.style.height = height + \"em\";\n          spans.push(span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth,\n        height\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  const _buildSvgSpan_ = buildSvgSpan_(),\n        span = _buildSvgSpan_.span,\n        minWidth = _buildSvgSpan_.minWidth,\n        height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nconst encloseSpan = function encloseSpan(inner, label, pad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n  let img;\n  const totalHeight = inner.height + inner.depth + 2 * pad;\n\n  if (/fbox|color/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      const color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    const lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    const svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\nvar stretchy = {\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n};\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\nconst htmlBuilder = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  let base;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n  let supSubGroup;\n\n  if (supSub) {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(supSub.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    supSub.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup(supSub, options)); // reset original base\n\n    supSub.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  const body = buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  const mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  let skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    const baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    const baseGroup = buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  let clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  let accentBody;\n\n  if (!group.isStretchy) {\n    let accent;\n    let width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeSymbol(group.label, \"Main-Regular\", group.mode, options); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    const accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    let left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: `calc(100% - ${2 * skew}em)`,\n          marginLeft: `${2 * skew}em`\n        } : undefined\n      }]\n    }, options);\n  }\n\n  const accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nconst mathmlBuilder = (group, options) => {\n  const accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  const node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nconst NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => `\\\\${accent}`).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const base = args[0];\n    const isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    const isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: (context, args) => {\n    const base = args[0];\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    const innerGroup = buildGroup(group.base, options);\n    const accentBody = stretchy.svgSpan(group, options);\n    const kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    const vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: accentBody.height + kern,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const accentNode = stretchy.mathMLnode(group.label);\n    const node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n\n// Helper function\nconst paddedNode = group => {\n  const node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    const style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    let newOptions = options.havingStyle(style.sup());\n    const upperGroup = buildCommon.wrapFragment(buildGroup(group.body, newOptions, options), options);\n    upperGroup.classes.push(\"x-arrow-pad\");\n    let lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(\"x-arrow-pad\");\n    }\n\n    const arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    const arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    let upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    let vlist;\n\n    if (lowerGroup) {\n      const lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const arrowNode = stretchy.mathMLnode(group.label);\n    let node;\n\n    if (group.body) {\n      const upperNode = paddedNode(buildGroup$1(group.body, options));\n\n      if (group.below) {\n        const lowerNode = paddedNode(buildGroup$1(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      const lowerNode = paddedNode(buildGroup$1(group.below, options));\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const arg = assertNodeType(args[0], \"ordgroup\");\n    const group = arg.body;\n    let number = \"\";\n\n    for (let i = 0; i < group.length; i++) {\n      const node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    const code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new ParseError(`\\\\@char has non-numeric argument ${number}`);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n\n});\n\nconst htmlBuilder$1 = (group, options) => {\n  const elements = buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nconst mathmlBuilder$1 = (group, options) => {\n  const inner = buildExpression$1(group.body, options.withColor(group.color));\n  const node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    let parser = _ref2.parser,\n        breakOnTokenText = _ref2.breakOnTokenText;\n    const color = assertNodeType(args[0], \"color-token\").color; // If we see a styling function, parse out the implicit body\n\n    const body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\cr\", \"\\\\newline\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const size = optArgs[0];\n    const newRow = funcName === \"\\\\cr\";\n    let newLine = false;\n\n    if (!newRow) {\n      if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n        newLine = false;\n      } else {\n        newLine = true;\n      }\n    }\n\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      newRow,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    if (group.newRow) {\n      throw new ParseError(\"\\\\cr valid only within a tabular/array environment\");\n    }\n\n    const span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n\n});\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nconst getMetrics = function getMetrics(symbol, font, mode) {\n  const replace = symbols.math[symbol] && symbols.math[symbol].replace;\n  const metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(`Unsupported symbol ${symbol} and font size ${font}.`);\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nconst styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  const newOptions = options.havingBaseStyle(toStyle);\n  const span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  const delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nconst centerSpan = function centerSpan(span, options, style) {\n  const newOptions = options.havingBaseStyle(style);\n  const shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nconst makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  const text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  const span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nconst mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nconst makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  const inner = mathrmSize(delim, size, mode, options);\n  const span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), Style$1.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, Style$1.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\n\n\nconst makeInner = function makeInner(symbol, font, mode) {\n  let sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  const inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: inner\n  };\n};\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\n\nconst makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  let top;\n  let middle;\n  let repeat;\n  let bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  let font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  const topMetrics = getMetrics(top, font, mode);\n  const topHeightTotal = topMetrics.height + topMetrics.depth;\n  const repeatMetrics = getMetrics(repeat, font, mode);\n  const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  const bottomMetrics = getMetrics(bottom, font, mode);\n  const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  let middleHeightTotal = 0;\n  let middleFactor = 1;\n\n  if (middle !== null) {\n    const middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  const repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols\n\n  const realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  let axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  const depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  const inners = []; // Add the bottom symbol\n\n  inners.push(makeInner(bottom, font, mode));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font, mode));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font, mode));\n    }\n\n    inners.push(makeInner(middle, font, mode));\n\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font, mode));\n    }\n  } // Add the top symbol\n\n\n  inners.push(makeInner(top, font, mode)); // Finally, build the vlist\n\n  const newOptions = options.havingBaseStyle(Style$1.TEXT);\n  const inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: inners\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), Style$1.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nconst vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nconst emPad = 0.08; // padding, in ems, measured in the document.\n\nconst sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n  let alternate;\n\n  if (sqrtName === \"sqrtTall\") {\n    // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n    // One path edge has a variable length. It runs from the viniculumn\n    // to a point near (14 units) the bottom of the surd. The viniculum\n    // is 40 units thick. So the length of the line in question is:\n    const vertSegment = viewBoxHeight - 54 - vbPad;\n    alternate = `M702 ${vbPad}H400000v40H742v${vertSegment}l-4 4-4 4c-.667.7\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 ${vbPad}H400000v40H742z`;\n  }\n\n  const pathNode = new PathNode(sqrtName, alternate);\n  const svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nconst makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  const newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  const delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  let sizeMultiplier = newOptions.sizeMultiplier; // default\n  // Create a span containing an SVG image of a sqrt symbol.\n\n  let span;\n  let spanHeight = 0;\n  let texHeight = 0;\n  let viewBoxHeight = 0;\n  let advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + emPad) / sizeMultiplier;\n    texHeight = 1.00 / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + emPad;\n    texHeight = height;\n    viewBoxHeight = Math.floor(1000 * height) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nconst stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nconst stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nconst stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nconst makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nconst stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nconst stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nconst stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nconst delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(`Add support for delim type '${type.type}' here.`);\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nconst traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  const start = Math.min(2, 3 - options.style.size);\n\n  for (let i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    const metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    let heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      const newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nconst makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  let sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  const delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nconst makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  const axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  const delimiterFactor = 901;\n  const delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  const totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nvar delimiter = {\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n};\n\n// Extra data needed for the delimiter handler down below\nconst delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nconst delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  const symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else {\n    throw new ParseError(\"Invalid delimiter: '\" + (symDelim ? symDelim.text : JSON.stringify(delim)) + \"' after '\" + context.funcName + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    const children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    const node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    const parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    const body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    const right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    const inner = buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    let innerHeight = 0;\n    let innerDepth = 0;\n    let hadMiddle = false; // Calculate its height and depth\n\n    for (let i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    let leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (let i = 1; i < inner.length; i++) {\n        const middleDelim = inner[i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        const isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    let rightDelim; // Same for the right delimiter\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    const inner = buildExpression$1(group.body, options);\n\n    if (group.left !== \".\") {\n      const leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      const rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      const isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will strech a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    const textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    const middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nconst htmlBuilder$2 = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  const inner = buildCommon.wrapFragment(buildGroup(group.body, options), options);\n  const label = group.label.substr(1);\n  const scale = options.sizeMultiplier;\n  let img;\n  let imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  const isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    let vertPad = 0; // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n    // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n    } else {\n      vertPad = isSingleChar ? 0.2 : 0;\n    }\n\n    img = stretchy.encloseSpan(inner, label, vertPad, options);\n    imgShift = inner.depth + vertPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  let vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nconst mathmlBuilder$2 = (group, options) => {\n  const node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildGroup$1(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      node.setAttribute(\"width\", \"+6pt\");\n      node.setAttribute(\"height\", \"+6pt\");\n      node.setAttribute(\"lspace\", \"3pt\"); // LaTeX source2e: \\fboxsep = 3pt\n\n      node.setAttribute(\"voffset\", \"3pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        const thk = options.fontMetrics().defaultRuleThickness;\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    let parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    const borderColor = assertNodeType(args[0], \"color-token\").color;\n    const backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    const body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args, optArgs) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nconst _environments = {};\nfunction defineEnvironment(_ref) {\n  let type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of environments.\n  const data = {\n    type,\n    numArgs: props.numArgs || 0,\n    greediness: 1,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    // $FlowFixMe\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  const hlineInfo = [];\n  parser.consumeSpaces();\n  let nxt = parser.nextToken.text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.nextToken.text;\n  }\n\n  return hlineInfo;\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  let hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n      addJot = _ref.addJot,\n      cols = _ref.cols,\n      arraystretch = _ref.arraystretch,\n      colSeparationType = _ref.colSeparationType;\n  // Parse body of array with \\\\ temporarily mapped to \\cr\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\"); // Get current arraystretch if it's not set by the environment\n\n  if (!arraystretch) {\n    const stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new ParseError(`Invalid \\\\arraystretch: ${stretch}`);\n      }\n    }\n  }\n\n  let row = [];\n  const body = [row];\n  const rowGaps = [];\n  const hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    let cell = parser.parseExpression(false, \"\\\\cr\");\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    const next = parser.nextToken.text;\n\n    if (next === \"&\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\cr\") {\n      const cr = assertNodeType(parser.parseFunction(), \"cr\");\n      rowGaps.push(cr.size); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nconst htmlBuilder$3 = function htmlBuilder(group, options) {\n  let r;\n  let c;\n  const nr = group.body.length;\n  const hLinesBeforeRow = group.hLinesBeforeRow;\n  let nc = 0;\n  let body = new Array(nr);\n  const hlines = []; // Horizontal spacing\n\n  const pt = 1 / options.fontMetrics().ptPerEm;\n  const arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n  // Vertical spacing\n\n  const baselineskip = 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  const jot = 3 * pt;\n  const arrayskip = group.arraystretch * baselineskip;\n  const arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  let totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (let i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    const inrow = group.body[r];\n    let height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    let depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    const outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      const elt = buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    const rowGap = group.rowGaps[r];\n    let gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  const offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  const colDescriptions = group.cols || [];\n  const cols = [];\n  let colSep;\n  let colDescrNum;\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    let colDescr = colDescriptions[colDescrNum] || {};\n    let firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\") {\n        const separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else if (colDescr.separator === \":\") {\n        const separator = buildCommon.makeSpan([\"vertical-separator\", \"vs-dashed\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else {\n        throw new ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    let sepwidth;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    let col = [];\n\n    for (r = 0; r < nr; ++r) {\n      const row = body[r];\n      const elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      const shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    const line = buildCommon.makeLineSpan(\"hline\", options, 0.05);\n    const dashes = buildCommon.makeLineSpan(\"hdashline\", options, 0.05);\n    const vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      const hline = hlines.pop();\n      const lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nconst alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nconst mathmlBuilder$3 = function mathmlBuilder(group, options) {\n  const table = new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n    return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n      return new mathMLTree.MathNode(\"mtd\", [buildGroup$1(cell, options)]);\n    }));\n  })); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found emprically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hines.\n\n  const gap = 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", gap + \"em\"); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  let menclose = \"\";\n  let align = \"\";\n\n  if (group.cols) {\n    // Find column alignment, column spacing, and  vertical lines.\n    const cols = group.cols;\n    let columnLines = \"\";\n    let prevTypeWasAlign = false;\n    let iStart = 0;\n    let iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (let i = iStart; i < iEnd; i++) {\n      if (cols[i].type === \"align\") {\n        align += alignMap[cols[i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    const cols = group.cols || [];\n    let spacing = \"\";\n\n    for (let i = 1; i < cols.length; i++) {\n      spacing += i % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  let rowLines = \"\";\n  const hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (let i = 1; i < hlines.length - 1; i++) {\n    rowLines += hlines[i].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[i][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose === \"\") {\n    return table;\n  } else {\n    const wrapper = new mathMLTree.MathNode(\"menclose\", [table]);\n    wrapper.setAttribute(\"notation\", menclose.trim());\n    return wrapper;\n  }\n}; // Convenience function for aligned and alignedat environments.\n\n\nconst alignedHandler = function alignedHandler(context, args) {\n  const cols = [];\n  const res = parseArray(context.parser, {\n    cols,\n    addJot: true\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  let numMaths;\n  let numCols = 0;\n  const emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n  const ordgroup = checkNodeType(args[0], \"ordgroup\");\n\n  if (ordgroup) {\n    let arg0 = \"\";\n\n    for (let i = 0; i < ordgroup.body.length; i++) {\n      const textord = assertNodeType(ordgroup.body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  const isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (let i = 1; i < row.length; i += 2) {\n      // Modify ordgroup node within styling node\n      const styling = assertNodeType(row[i], \"styling\");\n      const ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      const curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new ParseError(\"Too many math in a row: \" + `expected ${numMaths}, but got ${curMaths}`, row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (let i = 0; i < numCols; ++i) {\n    let align = \"r\";\n    let pregap = 0;\n\n    if (i % 2 === 1) {\n      align = \"l\";\n    } else if (i > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[i] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function (nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    const res = {\n      cols,\n      hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName]; // \\hskip -\\arraycolsep in amsmath\n\n    const payload = {\n      hskipBeforeAndAfter: false\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1]\n    } : res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: \"\\\\{\",\n      right: \".\"\n    };\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"aligned\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignedat\"],\n  // One for numbered and for unnumbered;\n  // but, KaTeX doesn't supports math numbering yet,\n  // they make no difference for now.\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new ParseError(`${context.funcName} valid only within array environment`);\n  }\n\n});\n\nconst environments = _environments;\n\n// defineEnvironment definitions.\n// $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    let envName = \"\";\n\n    for (let i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!environments.hasOwnProperty(envName)) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      const env = environments[envName];\n\n      const _parser$parseArgument = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n            args = _parser$parseArgument.args,\n            optArgs = _parser$parseArgument.optArgs;\n\n      const context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      const result = env.handler(context, args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      const endNameToken = parser.nextToken;\n      const end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new ParseError(`Mismatch: \\\\begin{${envName}} matched by \\\\end{${end.name}}`, endNameToken);\n      }\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n\nconst makeSpan$2 = buildCommon.makeSpan;\n\nfunction htmlBuilder$4(group, options) {\n  const elements = buildExpression(group.body, options, true);\n  return makeSpan$2([group.mclass], elements, options);\n}\n\nfunction mathmlBuilder$4(group, options) {\n  const inner = buildExpression$1(group.body, options);\n  return mathMLTree.newDocumentFragment(inner);\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\nconst binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  const atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    let parser = _ref2.parser;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: [args[1]]\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    const baseArg = args[1];\n    const shiftedArg = args[0];\n    let mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    const baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    const supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\nconst htmlBuilder$5 = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nconst mathmlBuilder$5 = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildGroup$1(group.body, newOptions);\n};\n\nconst fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    let func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0]; // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }]\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    const mode = parser.mode;\n    const body = parser.parseExpression(true, breakOnTokenText);\n    const style = `math${funcName.slice(1)}`;\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\n\nconst adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  let style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;\n  } else if (size === \"text\" && style.size === Style$1.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = Style$1.TEXT;\n  } else if (size === \"script\") {\n    style = Style$1.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = Style$1.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nconst htmlBuilder$6 = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  const style = adjustStyle(group.size, options.style);\n  const nstyle = style.fracNum();\n  const dstyle = style.fracDen();\n  let newOptions;\n  newOptions = options.havingStyle(nstyle);\n  const numerm = buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    const hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    const dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  const denomm = buildGroup(group.denom, newOptions, options);\n  let rule;\n  let ruleWidth;\n  let ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  let numShift;\n  let clearance;\n  let denomShift;\n\n  if (style.size === Style$1.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  let frac;\n\n  if (!rule) {\n    // Rule 15c\n    const candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    const axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    const midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  let delimSize;\n\n  if (style.size === Style$1.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  let leftDelim;\n  let rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nconst mathmlBuilder$6 = (group, options) => {\n  let node = new mathMLTree.MathNode(\"mfrac\", [buildGroup$1(group.numer, options), buildGroup$1(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    const ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  const style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    const isDisplay = style.size === Style$1.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    const withDelims = [];\n\n    if (group.leftDelim != null) {\n      const leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      const rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n  props: {\n    numArgs: 2,\n    greediness: 2\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const numer = args[0];\n    const denom = args[1];\n    let hasBarLine;\n    let leftDelim = null;\n    let rightDelim = null;\n    let size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: funcName === \"\\\\cfrac\",\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref2) {\n    let parser = _ref2.parser,\n        funcName = _ref2.funcName,\n        token = _ref2.token;\n    let replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nconst stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nconst delimFromValue = function delimFromValue(delimString) {\n  let delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    greediness: 6,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser;\n    const numer = args[4];\n    const denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    let leftNode = checkNodeType(args[0], \"atom\");\n\n    if (leftNode) {\n      leftNode = assertAtomFamily(args[0], \"open\");\n    }\n\n    const leftDelim = leftNode ? delimFromValue(leftNode.text) : null;\n    let rightNode = checkNodeType(args[1], \"atom\");\n\n    if (rightNode) {\n      rightNode = assertAtomFamily(args[1], \"close\");\n    }\n\n    const rightDelim = rightNode ? delimFromValue(rightNode.text) : null;\n    const barNode = assertNodeType(args[2], \"size\");\n    let hasBarLine;\n    let barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    let size = \"auto\";\n    let styl = checkNodeType(args[3], \"ordgroup\");\n\n    if (styl) {\n      if (styl.body.length > 0) {\n        const textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(args[3], \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref4, args) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName,\n        token = _ref4.token;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref5, args) => {\n    let parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    const numer = args[0];\n    const barSize = assert(assertNodeType(args[1], \"infix\").size);\n    const denom = args[2];\n    const hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\nconst htmlBuilder$7 = (grp, options) => {\n  const style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  let supSubGroup;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = supSub.sup ? buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(supSub.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  const body = buildGroup(group.base, options.havingBaseStyle(Style$1.DISPLAY)); // Create the stretchy element\n\n  const braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  let vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    const vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nconst mathmlBuilder$7 = (group, options) => {\n  const accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildGroup$1(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    const body = args[1];\n    const href = assertNodeType(args[0], \"url\").url;\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    let math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const href = assertNodeType(args[0], \"url\").url;\n    const chars = [];\n\n    for (let i = 0; i < href.length; i++) {\n      let c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    const body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n\n// Horizontal spacing commands\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      const mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      const muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} supports only mu units, ` + `not ${size.value.unit} units`);\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} works only in math mode`);\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} doesn't support mu units`);\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    let inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options)]);\n    }\n\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    let node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n\n    const strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // Get the horizontal spacing correct relative to adjacent items.\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      const offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false,\n    consumeMode: \"math\"\n  },\n\n  handler(_ref, args) {\n    let funcName = _ref.funcName,\n        parser = _ref.parser;\n    const outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    const close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    const body = parser.parseExpression(false, close); // We can't expand the next symbol after the closing $ until after\n    // switching modes back.  So don't consume within expect.\n\n    parser.expect(close, false);\n    parser.switchMode(outerMode);\n    parser.consume();\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new ParseError(`Mismatched ${context.funcName}`);\n  }\n\n});\n\nconst chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case Style$1.DISPLAY.size:\n      return group.display;\n\n    case Style$1.TEXT.size:\n      return group.text;\n\n    case Style$1.SCRIPT.size:\n      return group.script;\n\n    case Style$1.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    const elements = buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n\n// Limits, symbols\n// Most operators have a large successor symbol, but these don't.\nconst noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nconst htmlBuilder$8 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  let supGroup;\n  let subGroup;\n  let hasLimits = false;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  const style = options.style;\n  let large = false;\n\n  if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  let base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    const fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    let stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1); // $FlowFixMe\n\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      const italic = base.italic;\n      const oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options); // $FlowFixMe\n\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    const inner = buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], buildCommon.tryCombineChars(inner), options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup\n    const output = [];\n\n    for (let i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  let baseShift = 0;\n  let slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n    // in a new span so it is an inline, and works.\n    base = buildCommon.makeSpan([], [base]);\n    let sub;\n    let sup; // We manually have to handle the superscripts and subscripts. This,\n    // aside from the kern calculations, is copied from supsub.\n\n    if (supGroup) {\n      const elem = buildGroup(supGroup, options.havingStyle(style.sup()), options);\n      sup = {\n        elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n      };\n    }\n\n    if (subGroup) {\n      const elem = buildGroup(subGroup, options.havingStyle(style.sub()), options);\n      sub = {\n        elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - elem.height)\n      };\n    } // Build the final group as a vlist of the possible subscript, base,\n    // and possible superscript.\n\n\n    let finalGroup;\n\n    if (sup && sub) {\n      const bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: bottom,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else if (sub) {\n      const top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n      // that we are supposed to shift the limits by 1/2 of the slant,\n      // but since we are centering the limits adding a full slant of\n      // margin will shift by 1/2 that.\n\n      finalGroup = buildCommon.makeVList({\n        positionType: \"top\",\n        positionData: top,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }]\n      }, options);\n    } else if (sup) {\n      const bottom = base.depth + baseShift;\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: bottom,\n        children: [{\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else {\n      // This case probably shouldn't occur (this would mean the\n      // supsub was sending us a group with no superscript or\n      // subscript) but be safe.\n      return base;\n    }\n\n    return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nconst mathmlBuilder$8 = (group, options) => {\n  let node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression$1(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    const operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mo\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nconst singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nconst singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    let parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n});\n\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    const body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.body.length > 0) {\n      const body = group.body.map(child => {\n        // $FlowFixMe: Check if the node has a string `text` property.\n        const childText = child.text;\n\n        if (typeof childText === \"string\") {\n          return {\n            type: \"textord\",\n            mode: child.mode,\n            text: childText\n          };\n        } else {\n          return child;\n        }\n      }); // Consolidate function names into symbol characters.\n\n      const expression = buildExpression(body, options.withFont(\"mathrm\"), true);\n\n      for (let i = 0; i < expression.length; i++) {\n        const child = expression[i];\n\n        if (child instanceof SymbolNode) {\n          // Per amsopn package,\n          // change minus to hyphen and \\ast to asterisk\n          child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n        }\n      }\n\n      return buildCommon.makeSpan([\"mop\"], expression, options);\n    } else {\n      return buildCommon.makeSpan([\"mop\"], [], options);\n    }\n  },\n  mathmlBuilder: (group, options) => {\n    // The steps taken here are similar to the html version.\n    let expression = buildExpression$1(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n    let isAllString = true; // default\n\n    for (let i = 0; i < expression.length; i++) {\n      const node = expression[i];\n\n      if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) {\n        switch (node.type) {\n          case \"mi\":\n          case \"mn\":\n          case \"ms\":\n          case \"mspace\":\n          case \"mtext\":\n            break;\n          // Do nothing yet.\n\n          case \"mo\":\n            {\n              const child = node.children[0];\n\n              if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n              } else {\n                isAllString = false;\n              }\n\n              break;\n            }\n\n          default:\n            isAllString = false;\n        }\n      } else {\n        isAllString = false;\n      }\n    }\n\n    if (isAllString) {\n      // Write a single TextNode instead of multiple nested tags.\n      const word = expression.map(node => node.toText()).join(\"\");\n      expression = [new mathMLTree.TextNode(word)];\n    }\n\n    const identifier = new mathMLTree.MathNode(\"mi\", expression);\n    identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n    // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n    const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n});\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options);\n  }\n\n});\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    const innerGroup = buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    const line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: line.height\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    const body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let node = buildCommon.makeSpan([], [buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (let i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let parser = _ref3.parser;\n    const body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options.withPhantom())]);\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\nfunction sizingGroup(value, options, baseOptions) {\n  const inner = buildExpression(value, options, false);\n  const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (let i = 0; i < inner.length; i++) {\n    const pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nconst sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nconst htmlBuilder$9 = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  const newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    const body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: (group, options) => {\n    const newOptions = options.havingSize(group.size);\n    const inner = buildExpression$1(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"text\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const amount = assertNodeType(args[0], \"size\").value;\n    const body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const text = {\n      type: \"text\",\n      mode: group.mode,\n      body: ordargument(group.body),\n      font: \"mathrm\" // simulate \\textrm\n\n    };\n    const sizedText = {\n      type: \"sizing\",\n      mode: group.mode,\n      body: [text],\n      size: 6 // simulate \\normalsize\n\n    };\n    const body = htmlBuilder$9(sizedText, options);\n    const dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n    const dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser;\n    const shift = optArgs[0];\n    const width = assertNodeType(args[0], \"size\");\n    const height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    const rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0;\n    const color = options.color && options.getColor() || \"black\";\n    const rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", width + \"em\");\n    rule.setAttribute(\"height\", height + \"em\");\n    const wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift + \"em\");\n    } else {\n      wrapper.setAttribute(\"height\", shift + \"em\");\n      wrapper.setAttribute(\"depth\", \"+\" + -shift + \"em\");\n    }\n\n    wrapper.setAttribute(\"voffset\", shift + \"em\");\n    return wrapper;\n  }\n\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    let parser = _ref.parser;\n    let smashHeight = false;\n    let smashDepth = false;\n    const tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      let letter = \"\";\n\n      for (let i = 0; i < tbArg.body.length; ++i) {\n        const node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    const body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const node = buildCommon.makeSpan([], [buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    const smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser;\n    const index = optArgs[0];\n    const body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    let inner = buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    const metrics = options.fontMetrics();\n    const theta = metrics.defaultRuleThickness;\n    let phi = theta;\n\n    if (options.style.id < Style$1.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    let lineClearance = theta + phi / 4;\n    const minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    const _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n          img = _delimiter$sqrtImage.span,\n          ruleWidth = _delimiter$sqrtImage.ruleWidth,\n          advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n    const delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    const imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    const body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      const newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);\n      const rootm = buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      const toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      const rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      const rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    const body = group.body,\n          index = group.index;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildGroup$1(body, options), buildGroup$1(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildGroup$1(body, options)]);\n  }\n\n});\n\nconst styleMap$1 = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    // parse out the implicit body\n    const body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    const style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    const newStyle = styleMap$1[group.style];\n    const newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    // TODO(kevinb): dedupe this with buildHTML.js\n    // This will be easier of handling of styling nodes is in the same file.\n    const styleMap = {\n      \"display\": Style$1.DISPLAY,\n      \"text\": Style$1.TEXT,\n      \"script\": Style$1.SCRIPT,\n      \"scriptscript\": Style$1.SCRIPTSCRIPT\n    };\n    const newStyle = styleMap[group.style];\n    const newOptions = options.havingStyle(newStyle);\n    const inner = buildExpression$1(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner);\n    const styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    const attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nconst htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  const base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    const delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? htmlBuilder$8 : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    const isSup = !group.sub;\n    return isSup === base.isOver ? htmlBuilder$7 : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    const builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    const valueBase = group.base,\n          valueSup = group.sup,\n          valueSub = group.sub;\n    const base = buildGroup(valueBase, options);\n    let supm;\n    let subm;\n    const metrics = options.fontMetrics(); // Rule 18a\n\n    let supShift = 0;\n    let subShift = 0;\n    const isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      const newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      const newOptions = options.havingStyle(options.style.sub());\n      subm = buildGroup(valueSub, newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + newOptions.fontMetrics().subDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    let minSupShift;\n\n    if (options.style === Style$1.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    const multiplier = options.sizeMultiplier;\n    const marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    let marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      const isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    let supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      const ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      const maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        const psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    const mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    let isBrace = false;\n    let isOver;\n    let isSup;\n    const horizBrace = checkNodeType(group.base, \"horizBrace\");\n\n    if (horizBrace) {\n      isSup = !!group.sup;\n\n      if (isSup === horizBrace.isOver) {\n        isBrace = true;\n        isOver = horizBrace.isOver;\n      }\n    }\n\n    if (group.base && group.base.type === \"op\") {\n      group.base.parentIsSupSub = true;\n    }\n\n    const children = [buildGroup$1(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildGroup$1(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildGroup$1(group.sup, options));\n    }\n\n    let nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && options.style === Style$1.DISPLAY) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    const node = new mathMLTree.MathNode(nodeType, children);\n    return node;\n  }\n\n});\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      const variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\nconst defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    const variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const text = makeText(group.text, group.mode, options);\n    const variant = getVariant(group, options) || \"normal\";\n    let node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      // TODO(kevinb) merge adjacent <mn> nodes\n      // do it as a post processing step\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n\nconst cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nconst regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      const className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        const ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new ParseError(`Unknown type of space \"${group.text}\"`);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    let node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new ParseError(`Unknown type of space \"${group.text}\"`);\n    }\n\n    return node;\n  }\n\n});\n\nconst pad = () => {\n  const padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    const table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n\nconst textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nconst textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nconst textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nconst optionsWithFont = (group, options) => {\n  const font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true,\n    consumeMode: \"text\"\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    const inner = buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], buildCommon.tryCombineChars(inner), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    const innerGroup = buildGroup(group.body, options); // Create the line to go below the body\n\n    const line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    const text = makeVerb(group);\n    const body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    const newOptions = options.havingStyle(options.style.text());\n\n    for (let i = 0; i < text.length; i++) {\n      let c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const text = new mathMLTree.TextNode(makeVerb(group));\n    const node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nconst makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n\n/** Include this to ensure that all functions are defined. */\nconst functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nconst spaceRegexString = \"[ \\r\\n\\t]\";\nconst controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nconst controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nconst controlWordWhitespaceRegexString = `${controlWordRegexString}${spaceRegexString}*`;\nconst controlWordWhitespaceRegex = new RegExp(`^(${controlWordRegexString})${spaceRegexString}*$`);\nconst combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nconst combiningDiacriticalMarksEndRegex = new RegExp(`${combiningDiacriticalMarkString}+$`);\nconst tokenRegexString = `(${spaceRegexString}+)|` + // whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + // single codepoint\n`${combiningDiacriticalMarkString}*` + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + // surrogate pair\n`${combiningDiacriticalMarkString}*` + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + // \\verb unstarred\n`|${controlWordWhitespaceRegexString}` + // \\macroName + spaces\n`|${controlSymbolRegexString})`; // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // category codes, only supports comment characters (14) for now\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14 // comment character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    const input = this.input;\n    const pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    const match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new ParseError(`Unexpected character: '${input[pos]}'`, new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    let text = match[2] || \" \";\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      const nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    } // Trim any trailing whitespace from control word match\n\n\n    const controlMatch = text.match(controlWordWhitespaceRegex);\n\n    if (controlMatch) {\n      text = controlMatch[1];\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    const undefs = this.undefStack.pop();\n\n    for (const undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (let i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      const top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  }\n\n}\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\nconst builtinMacros = {};\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  const args = context.consumeArgs(3); // symbol, if, else\n\n  const nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  const args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nconst digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  let token = context.popToken();\n  let base;\n  let number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new ParseError(`Invalid base-${base} digit ${token.text}`);\n    }\n\n    let digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return `\\\\@char{${number}}`;\n}); // Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\n\nconst def = (context, global) => {\n  let arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\gdef's first argument must be a macro name\");\n  }\n\n  const name = arg[0].text; // Count argument specifiers, and check they are in the order #1 #2 ...\n\n  let numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  while (arg.length === 1 && arg[0].text === \"#\") {\n    arg = context.consumeArgs(1)[0];\n\n    if (arg.length !== 1) {\n      throw new ParseError(`Invalid argument number length \"${arg.length}\"`);\n    }\n\n    if (!/^[1-9]$/.test(arg[0].text)) {\n      throw new ParseError(`Invalid argument number \"${arg[0].text}\"`);\n    }\n\n    numArgs++;\n\n    if (parseInt(arg[0].text) !== numArgs) {\n      throw new ParseError(`Argument number \"${arg[0].text}\" out of order`);\n    }\n\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  }, global);\n  return '';\n};\n\ndefineMacro(\"\\\\gdef\", context => def(context, true));\ndefineMacro(\"\\\\def\", context => def(context, false));\ndefineMacro(\"\\\\global\", context => {\n  const next = context.consumeArgs(1)[0];\n\n  if (next.length !== 1) {\n    throw new ParseError(\"Invalid command after \\\\global\");\n  }\n\n  const command = next[0].text; // TODO: Should expand command\n\n  if (command === \"\\\\def\") {\n    // \\global\\def is equivalent to \\gdef\n    return def(context, true);\n  } else {\n    throw new ParseError(`Invalid command '${command}' after \\\\global`);\n  }\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nconst newcommand = (context, existsOK, nonexistsOK) => {\n  let arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  const name = arg[0].text;\n  const exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new ParseError(`\\\\newcommand{${name}} attempting to redefine ` + `${name}; use \\\\renewcommand`);\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new ParseError(`\\\\renewcommand{${name}} when command ${name} ` + `does not yet exist; use \\\\newcommand`);\n  }\n\n  let numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    let argText = '';\n    let token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new ParseError(`Invalid number of arguments: ${argText}`);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true)); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nconst dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  let thedots = '\\\\dotso';\n  const next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in symbols.math) {\n    if (utils.contains(['bin', 'rel'], symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nconst spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  const next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\\\\@binrel{#1}{\" + \"\\\\mathrlap{#1}\" + \"\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}\" + \"{\\\\mkern0.8mu#1}\" + \"}}{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\n\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\n\nconst latexRaiseA = metricMap['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * metricMap['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + `L\\\\kern-.36em\\\\raisebox{${latexRaiseA}}{\\\\scriptsize A}` + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + `K\\\\kern-.17em\\\\raisebox{${latexRaiseA}}{\\\\scriptsize A}` + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // ≔\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // ≕\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{∤}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{∦}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{⊊}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{⫋}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{⊋}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{⫌}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,min}}\\\\limits\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,max}}\\\\limits\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{##1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nconst implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(builtinMacros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      const token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the specified number of arguments from the token stream,\n   * and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs) {\n    const args = []; // obtain arguments, either single token or balanced {…} group\n\n    for (let i = 0; i < numArgs; ++i) {\n      this.consumeSpaces(); // ignore spaces before each argument\n\n      const startOfArg = this.popToken();\n\n      if (startOfArg.text === \"{\") {\n        const arg = [];\n        let depth = 1;\n\n        while (depth !== 0) {\n          const tok = this.popToken();\n          arg.push(tok);\n\n          if (tok.text === \"{\") {\n            ++depth;\n          } else if (tok.text === \"}\") {\n            --depth;\n          } else if (tok.text === \"EOF\") {\n            throw new ParseError(\"End of input in macro argument\", startOfArg);\n          }\n        }\n\n        arg.pop(); // remove last }\n\n        arg.reverse(); // like above, to fit in with stack order\n\n        args[i] = arg;\n      } else if (startOfArg.text === \"EOF\") {\n        throw new ParseError(\"End of input expecting macro argument\");\n      } else {\n        args[i] = [startOfArg];\n      }\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * At the moment, macro expansion doesn't handle delimited macros,\n   * i.e. things like those defined by \\def\\foo#1\\end{…}.\n   * See the TeX book page 202ff. for details on how those should behave.\n   */\n\n\n  expandOnce() {\n    const topToken = this.popToken();\n    const name = topToken.text;\n\n    const expansion = this._getExpansion(name);\n\n    if (expansion == null) {\n      // mainly checking for undefined here\n      // Fully expanded\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    let tokens = expansion.tokens;\n\n    if (expansion.numArgs) {\n      const args = this.consumeArgs(expansion.numArgs); // paste arguments in place of the placeholders\n\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (let i = tokens.length - 1; i >= 0; --i) {\n        let tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      const expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        if (expanded.text === \"\\\\relax\") {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    if (!this.macros.get(name)) {\n      return undefined;\n    }\n\n    const output = [];\n    const oldStackLength = this.stack.length;\n    this.pushToken(new Token(name));\n\n    while (this.stack.length > oldStackLength) {\n      const expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    const tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    const definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n\n    const expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      let numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        const stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      const bodyLexer = new Lexer(expansion, this.settings);\n      const tokens = [];\n      let tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      const expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || functions.hasOwnProperty(name) || symbols.math.hasOwnProperty(name) || symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n\n}\n\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\nvar unicodeAccents = {\n  '\\u0301': {\n    text: \"\\\\'\",\n    math: '\\\\acute'\n  },\n  '\\u0300': {\n    text: '\\\\`',\n    math: '\\\\grave'\n  },\n  '\\u0308': {\n    text: '\\\\\"',\n    math: '\\\\ddot'\n  },\n  '\\u0303': {\n    text: '\\\\~',\n    math: '\\\\tilde'\n  },\n  '\\u0304': {\n    text: '\\\\=',\n    math: '\\\\bar'\n  },\n  '\\u0306': {\n    text: '\\\\u',\n    math: '\\\\breve'\n  },\n  '\\u030c': {\n    text: '\\\\v',\n    math: '\\\\check'\n  },\n  '\\u0302': {\n    text: '\\\\^',\n    math: '\\\\hat'\n  },\n  '\\u0307': {\n    text: '\\\\.',\n    math: '\\\\dot'\n  },\n  '\\u030a': {\n    text: '\\\\r',\n    math: '\\\\mathring'\n  },\n  '\\u030b': {\n    text: '\\\\H'\n  }\n};\n\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\nvar unicodeSymbols = {\n  \"\\u00e1\": \"\\u0061\\u0301\",\n  // á = \\'{a}\n  \"\\u00e0\": \"\\u0061\\u0300\",\n  // à = \\`{a}\n  \"\\u00e4\": \"\\u0061\\u0308\",\n  // ä = \\\"{a}\n  \"\\u01df\": \"\\u0061\\u0308\\u0304\",\n  // ǟ = \\\"\\={a}\n  \"\\u00e3\": \"\\u0061\\u0303\",\n  // ã = \\~{a}\n  \"\\u0101\": \"\\u0061\\u0304\",\n  // ā = \\={a}\n  \"\\u0103\": \"\\u0061\\u0306\",\n  // ă = \\u{a}\n  \"\\u1eaf\": \"\\u0061\\u0306\\u0301\",\n  // ắ = \\u\\'{a}\n  \"\\u1eb1\": \"\\u0061\\u0306\\u0300\",\n  // ằ = \\u\\`{a}\n  \"\\u1eb5\": \"\\u0061\\u0306\\u0303\",\n  // ẵ = \\u\\~{a}\n  \"\\u01ce\": \"\\u0061\\u030c\",\n  // ǎ = \\v{a}\n  \"\\u00e2\": \"\\u0061\\u0302\",\n  // â = \\^{a}\n  \"\\u1ea5\": \"\\u0061\\u0302\\u0301\",\n  // ấ = \\^\\'{a}\n  \"\\u1ea7\": \"\\u0061\\u0302\\u0300\",\n  // ầ = \\^\\`{a}\n  \"\\u1eab\": \"\\u0061\\u0302\\u0303\",\n  // ẫ = \\^\\~{a}\n  \"\\u0227\": \"\\u0061\\u0307\",\n  // ȧ = \\.{a}\n  \"\\u01e1\": \"\\u0061\\u0307\\u0304\",\n  // ǡ = \\.\\={a}\n  \"\\u00e5\": \"\\u0061\\u030a\",\n  // å = \\r{a}\n  \"\\u01fb\": \"\\u0061\\u030a\\u0301\",\n  // ǻ = \\r\\'{a}\n  \"\\u1e03\": \"\\u0062\\u0307\",\n  // ḃ = \\.{b}\n  \"\\u0107\": \"\\u0063\\u0301\",\n  // ć = \\'{c}\n  \"\\u010d\": \"\\u0063\\u030c\",\n  // č = \\v{c}\n  \"\\u0109\": \"\\u0063\\u0302\",\n  // ĉ = \\^{c}\n  \"\\u010b\": \"\\u0063\\u0307\",\n  // ċ = \\.{c}\n  \"\\u010f\": \"\\u0064\\u030c\",\n  // ď = \\v{d}\n  \"\\u1e0b\": \"\\u0064\\u0307\",\n  // ḋ = \\.{d}\n  \"\\u00e9\": \"\\u0065\\u0301\",\n  // é = \\'{e}\n  \"\\u00e8\": \"\\u0065\\u0300\",\n  // è = \\`{e}\n  \"\\u00eb\": \"\\u0065\\u0308\",\n  // ë = \\\"{e}\n  \"\\u1ebd\": \"\\u0065\\u0303\",\n  // ẽ = \\~{e}\n  \"\\u0113\": \"\\u0065\\u0304\",\n  // ē = \\={e}\n  \"\\u1e17\": \"\\u0065\\u0304\\u0301\",\n  // ḗ = \\=\\'{e}\n  \"\\u1e15\": \"\\u0065\\u0304\\u0300\",\n  // ḕ = \\=\\`{e}\n  \"\\u0115\": \"\\u0065\\u0306\",\n  // ĕ = \\u{e}\n  \"\\u011b\": \"\\u0065\\u030c\",\n  // ě = \\v{e}\n  \"\\u00ea\": \"\\u0065\\u0302\",\n  // ê = \\^{e}\n  \"\\u1ebf\": \"\\u0065\\u0302\\u0301\",\n  // ế = \\^\\'{e}\n  \"\\u1ec1\": \"\\u0065\\u0302\\u0300\",\n  // ề = \\^\\`{e}\n  \"\\u1ec5\": \"\\u0065\\u0302\\u0303\",\n  // ễ = \\^\\~{e}\n  \"\\u0117\": \"\\u0065\\u0307\",\n  // ė = \\.{e}\n  \"\\u1e1f\": \"\\u0066\\u0307\",\n  // ḟ = \\.{f}\n  \"\\u01f5\": \"\\u0067\\u0301\",\n  // ǵ = \\'{g}\n  \"\\u1e21\": \"\\u0067\\u0304\",\n  // ḡ = \\={g}\n  \"\\u011f\": \"\\u0067\\u0306\",\n  // ğ = \\u{g}\n  \"\\u01e7\": \"\\u0067\\u030c\",\n  // ǧ = \\v{g}\n  \"\\u011d\": \"\\u0067\\u0302\",\n  // ĝ = \\^{g}\n  \"\\u0121\": \"\\u0067\\u0307\",\n  // ġ = \\.{g}\n  \"\\u1e27\": \"\\u0068\\u0308\",\n  // ḧ = \\\"{h}\n  \"\\u021f\": \"\\u0068\\u030c\",\n  // ȟ = \\v{h}\n  \"\\u0125\": \"\\u0068\\u0302\",\n  // ĥ = \\^{h}\n  \"\\u1e23\": \"\\u0068\\u0307\",\n  // ḣ = \\.{h}\n  \"\\u00ed\": \"\\u0069\\u0301\",\n  // í = \\'{i}\n  \"\\u00ec\": \"\\u0069\\u0300\",\n  // ì = \\`{i}\n  \"\\u00ef\": \"\\u0069\\u0308\",\n  // ï = \\\"{i}\n  \"\\u1e2f\": \"\\u0069\\u0308\\u0301\",\n  // ḯ = \\\"\\'{i}\n  \"\\u0129\": \"\\u0069\\u0303\",\n  // ĩ = \\~{i}\n  \"\\u012b\": \"\\u0069\\u0304\",\n  // ī = \\={i}\n  \"\\u012d\": \"\\u0069\\u0306\",\n  // ĭ = \\u{i}\n  \"\\u01d0\": \"\\u0069\\u030c\",\n  // ǐ = \\v{i}\n  \"\\u00ee\": \"\\u0069\\u0302\",\n  // î = \\^{i}\n  \"\\u01f0\": \"\\u006a\\u030c\",\n  // ǰ = \\v{j}\n  \"\\u0135\": \"\\u006a\\u0302\",\n  // ĵ = \\^{j}\n  \"\\u1e31\": \"\\u006b\\u0301\",\n  // ḱ = \\'{k}\n  \"\\u01e9\": \"\\u006b\\u030c\",\n  // ǩ = \\v{k}\n  \"\\u013a\": \"\\u006c\\u0301\",\n  // ĺ = \\'{l}\n  \"\\u013e\": \"\\u006c\\u030c\",\n  // ľ = \\v{l}\n  \"\\u1e3f\": \"\\u006d\\u0301\",\n  // ḿ = \\'{m}\n  \"\\u1e41\": \"\\u006d\\u0307\",\n  // ṁ = \\.{m}\n  \"\\u0144\": \"\\u006e\\u0301\",\n  // ń = \\'{n}\n  \"\\u01f9\": \"\\u006e\\u0300\",\n  // ǹ = \\`{n}\n  \"\\u00f1\": \"\\u006e\\u0303\",\n  // ñ = \\~{n}\n  \"\\u0148\": \"\\u006e\\u030c\",\n  // ň = \\v{n}\n  \"\\u1e45\": \"\\u006e\\u0307\",\n  // ṅ = \\.{n}\n  \"\\u00f3\": \"\\u006f\\u0301\",\n  // ó = \\'{o}\n  \"\\u00f2\": \"\\u006f\\u0300\",\n  // ò = \\`{o}\n  \"\\u00f6\": \"\\u006f\\u0308\",\n  // ö = \\\"{o}\n  \"\\u022b\": \"\\u006f\\u0308\\u0304\",\n  // ȫ = \\\"\\={o}\n  \"\\u00f5\": \"\\u006f\\u0303\",\n  // õ = \\~{o}\n  \"\\u1e4d\": \"\\u006f\\u0303\\u0301\",\n  // ṍ = \\~\\'{o}\n  \"\\u1e4f\": \"\\u006f\\u0303\\u0308\",\n  // ṏ = \\~\\\"{o}\n  \"\\u022d\": \"\\u006f\\u0303\\u0304\",\n  // ȭ = \\~\\={o}\n  \"\\u014d\": \"\\u006f\\u0304\",\n  // ō = \\={o}\n  \"\\u1e53\": \"\\u006f\\u0304\\u0301\",\n  // ṓ = \\=\\'{o}\n  \"\\u1e51\": \"\\u006f\\u0304\\u0300\",\n  // ṑ = \\=\\`{o}\n  \"\\u014f\": \"\\u006f\\u0306\",\n  // ŏ = \\u{o}\n  \"\\u01d2\": \"\\u006f\\u030c\",\n  // ǒ = \\v{o}\n  \"\\u00f4\": \"\\u006f\\u0302\",\n  // ô = \\^{o}\n  \"\\u1ed1\": \"\\u006f\\u0302\\u0301\",\n  // ố = \\^\\'{o}\n  \"\\u1ed3\": \"\\u006f\\u0302\\u0300\",\n  // ồ = \\^\\`{o}\n  \"\\u1ed7\": \"\\u006f\\u0302\\u0303\",\n  // ỗ = \\^\\~{o}\n  \"\\u022f\": \"\\u006f\\u0307\",\n  // ȯ = \\.{o}\n  \"\\u0231\": \"\\u006f\\u0307\\u0304\",\n  // ȱ = \\.\\={o}\n  \"\\u0151\": \"\\u006f\\u030b\",\n  // ő = \\H{o}\n  \"\\u1e55\": \"\\u0070\\u0301\",\n  // ṕ = \\'{p}\n  \"\\u1e57\": \"\\u0070\\u0307\",\n  // ṗ = \\.{p}\n  \"\\u0155\": \"\\u0072\\u0301\",\n  // ŕ = \\'{r}\n  \"\\u0159\": \"\\u0072\\u030c\",\n  // ř = \\v{r}\n  \"\\u1e59\": \"\\u0072\\u0307\",\n  // ṙ = \\.{r}\n  \"\\u015b\": \"\\u0073\\u0301\",\n  // ś = \\'{s}\n  \"\\u1e65\": \"\\u0073\\u0301\\u0307\",\n  // ṥ = \\'\\.{s}\n  \"\\u0161\": \"\\u0073\\u030c\",\n  // š = \\v{s}\n  \"\\u1e67\": \"\\u0073\\u030c\\u0307\",\n  // ṧ = \\v\\.{s}\n  \"\\u015d\": \"\\u0073\\u0302\",\n  // ŝ = \\^{s}\n  \"\\u1e61\": \"\\u0073\\u0307\",\n  // ṡ = \\.{s}\n  \"\\u1e97\": \"\\u0074\\u0308\",\n  // ẗ = \\\"{t}\n  \"\\u0165\": \"\\u0074\\u030c\",\n  // ť = \\v{t}\n  \"\\u1e6b\": \"\\u0074\\u0307\",\n  // ṫ = \\.{t}\n  \"\\u00fa\": \"\\u0075\\u0301\",\n  // ú = \\'{u}\n  \"\\u00f9\": \"\\u0075\\u0300\",\n  // ù = \\`{u}\n  \"\\u00fc\": \"\\u0075\\u0308\",\n  // ü = \\\"{u}\n  \"\\u01d8\": \"\\u0075\\u0308\\u0301\",\n  // ǘ = \\\"\\'{u}\n  \"\\u01dc\": \"\\u0075\\u0308\\u0300\",\n  // ǜ = \\\"\\`{u}\n  \"\\u01d6\": \"\\u0075\\u0308\\u0304\",\n  // ǖ = \\\"\\={u}\n  \"\\u01da\": \"\\u0075\\u0308\\u030c\",\n  // ǚ = \\\"\\v{u}\n  \"\\u0169\": \"\\u0075\\u0303\",\n  // ũ = \\~{u}\n  \"\\u1e79\": \"\\u0075\\u0303\\u0301\",\n  // ṹ = \\~\\'{u}\n  \"\\u016b\": \"\\u0075\\u0304\",\n  // ū = \\={u}\n  \"\\u1e7b\": \"\\u0075\\u0304\\u0308\",\n  // ṻ = \\=\\\"{u}\n  \"\\u016d\": \"\\u0075\\u0306\",\n  // ŭ = \\u{u}\n  \"\\u01d4\": \"\\u0075\\u030c\",\n  // ǔ = \\v{u}\n  \"\\u00fb\": \"\\u0075\\u0302\",\n  // û = \\^{u}\n  \"\\u016f\": \"\\u0075\\u030a\",\n  // ů = \\r{u}\n  \"\\u0171\": \"\\u0075\\u030b\",\n  // ű = \\H{u}\n  \"\\u1e7d\": \"\\u0076\\u0303\",\n  // ṽ = \\~{v}\n  \"\\u1e83\": \"\\u0077\\u0301\",\n  // ẃ = \\'{w}\n  \"\\u1e81\": \"\\u0077\\u0300\",\n  // ẁ = \\`{w}\n  \"\\u1e85\": \"\\u0077\\u0308\",\n  // ẅ = \\\"{w}\n  \"\\u0175\": \"\\u0077\\u0302\",\n  // ŵ = \\^{w}\n  \"\\u1e87\": \"\\u0077\\u0307\",\n  // ẇ = \\.{w}\n  \"\\u1e98\": \"\\u0077\\u030a\",\n  // ẘ = \\r{w}\n  \"\\u1e8d\": \"\\u0078\\u0308\",\n  // ẍ = \\\"{x}\n  \"\\u1e8b\": \"\\u0078\\u0307\",\n  // ẋ = \\.{x}\n  \"\\u00fd\": \"\\u0079\\u0301\",\n  // ý = \\'{y}\n  \"\\u1ef3\": \"\\u0079\\u0300\",\n  // ỳ = \\`{y}\n  \"\\u00ff\": \"\\u0079\\u0308\",\n  // ÿ = \\\"{y}\n  \"\\u1ef9\": \"\\u0079\\u0303\",\n  // ỹ = \\~{y}\n  \"\\u0233\": \"\\u0079\\u0304\",\n  // ȳ = \\={y}\n  \"\\u0177\": \"\\u0079\\u0302\",\n  // ŷ = \\^{y}\n  \"\\u1e8f\": \"\\u0079\\u0307\",\n  // ẏ = \\.{y}\n  \"\\u1e99\": \"\\u0079\\u030a\",\n  // ẙ = \\r{y}\n  \"\\u017a\": \"\\u007a\\u0301\",\n  // ź = \\'{z}\n  \"\\u017e\": \"\\u007a\\u030c\",\n  // ž = \\v{z}\n  \"\\u1e91\": \"\\u007a\\u0302\",\n  // ẑ = \\^{z}\n  \"\\u017c\": \"\\u007a\\u0307\",\n  // ż = \\.{z}\n  \"\\u00c1\": \"\\u0041\\u0301\",\n  // Á = \\'{A}\n  \"\\u00c0\": \"\\u0041\\u0300\",\n  // À = \\`{A}\n  \"\\u00c4\": \"\\u0041\\u0308\",\n  // Ä = \\\"{A}\n  \"\\u01de\": \"\\u0041\\u0308\\u0304\",\n  // Ǟ = \\\"\\={A}\n  \"\\u00c3\": \"\\u0041\\u0303\",\n  // Ã = \\~{A}\n  \"\\u0100\": \"\\u0041\\u0304\",\n  // Ā = \\={A}\n  \"\\u0102\": \"\\u0041\\u0306\",\n  // Ă = \\u{A}\n  \"\\u1eae\": \"\\u0041\\u0306\\u0301\",\n  // Ắ = \\u\\'{A}\n  \"\\u1eb0\": \"\\u0041\\u0306\\u0300\",\n  // Ằ = \\u\\`{A}\n  \"\\u1eb4\": \"\\u0041\\u0306\\u0303\",\n  // Ẵ = \\u\\~{A}\n  \"\\u01cd\": \"\\u0041\\u030c\",\n  // Ǎ = \\v{A}\n  \"\\u00c2\": \"\\u0041\\u0302\",\n  // Â = \\^{A}\n  \"\\u1ea4\": \"\\u0041\\u0302\\u0301\",\n  // Ấ = \\^\\'{A}\n  \"\\u1ea6\": \"\\u0041\\u0302\\u0300\",\n  // Ầ = \\^\\`{A}\n  \"\\u1eaa\": \"\\u0041\\u0302\\u0303\",\n  // Ẫ = \\^\\~{A}\n  \"\\u0226\": \"\\u0041\\u0307\",\n  // Ȧ = \\.{A}\n  \"\\u01e0\": \"\\u0041\\u0307\\u0304\",\n  // Ǡ = \\.\\={A}\n  \"\\u00c5\": \"\\u0041\\u030a\",\n  // Å = \\r{A}\n  \"\\u01fa\": \"\\u0041\\u030a\\u0301\",\n  // Ǻ = \\r\\'{A}\n  \"\\u1e02\": \"\\u0042\\u0307\",\n  // Ḃ = \\.{B}\n  \"\\u0106\": \"\\u0043\\u0301\",\n  // Ć = \\'{C}\n  \"\\u010c\": \"\\u0043\\u030c\",\n  // Č = \\v{C}\n  \"\\u0108\": \"\\u0043\\u0302\",\n  // Ĉ = \\^{C}\n  \"\\u010a\": \"\\u0043\\u0307\",\n  // Ċ = \\.{C}\n  \"\\u010e\": \"\\u0044\\u030c\",\n  // Ď = \\v{D}\n  \"\\u1e0a\": \"\\u0044\\u0307\",\n  // Ḋ = \\.{D}\n  \"\\u00c9\": \"\\u0045\\u0301\",\n  // É = \\'{E}\n  \"\\u00c8\": \"\\u0045\\u0300\",\n  // È = \\`{E}\n  \"\\u00cb\": \"\\u0045\\u0308\",\n  // Ë = \\\"{E}\n  \"\\u1ebc\": \"\\u0045\\u0303\",\n  // Ẽ = \\~{E}\n  \"\\u0112\": \"\\u0045\\u0304\",\n  // Ē = \\={E}\n  \"\\u1e16\": \"\\u0045\\u0304\\u0301\",\n  // Ḗ = \\=\\'{E}\n  \"\\u1e14\": \"\\u0045\\u0304\\u0300\",\n  // Ḕ = \\=\\`{E}\n  \"\\u0114\": \"\\u0045\\u0306\",\n  // Ĕ = \\u{E}\n  \"\\u011a\": \"\\u0045\\u030c\",\n  // Ě = \\v{E}\n  \"\\u00ca\": \"\\u0045\\u0302\",\n  // Ê = \\^{E}\n  \"\\u1ebe\": \"\\u0045\\u0302\\u0301\",\n  // Ế = \\^\\'{E}\n  \"\\u1ec0\": \"\\u0045\\u0302\\u0300\",\n  // Ề = \\^\\`{E}\n  \"\\u1ec4\": \"\\u0045\\u0302\\u0303\",\n  // Ễ = \\^\\~{E}\n  \"\\u0116\": \"\\u0045\\u0307\",\n  // Ė = \\.{E}\n  \"\\u1e1e\": \"\\u0046\\u0307\",\n  // Ḟ = \\.{F}\n  \"\\u01f4\": \"\\u0047\\u0301\",\n  // Ǵ = \\'{G}\n  \"\\u1e20\": \"\\u0047\\u0304\",\n  // Ḡ = \\={G}\n  \"\\u011e\": \"\\u0047\\u0306\",\n  // Ğ = \\u{G}\n  \"\\u01e6\": \"\\u0047\\u030c\",\n  // Ǧ = \\v{G}\n  \"\\u011c\": \"\\u0047\\u0302\",\n  // Ĝ = \\^{G}\n  \"\\u0120\": \"\\u0047\\u0307\",\n  // Ġ = \\.{G}\n  \"\\u1e26\": \"\\u0048\\u0308\",\n  // Ḧ = \\\"{H}\n  \"\\u021e\": \"\\u0048\\u030c\",\n  // Ȟ = \\v{H}\n  \"\\u0124\": \"\\u0048\\u0302\",\n  // Ĥ = \\^{H}\n  \"\\u1e22\": \"\\u0048\\u0307\",\n  // Ḣ = \\.{H}\n  \"\\u00cd\": \"\\u0049\\u0301\",\n  // Í = \\'{I}\n  \"\\u00cc\": \"\\u0049\\u0300\",\n  // Ì = \\`{I}\n  \"\\u00cf\": \"\\u0049\\u0308\",\n  // Ï = \\\"{I}\n  \"\\u1e2e\": \"\\u0049\\u0308\\u0301\",\n  // Ḯ = \\\"\\'{I}\n  \"\\u0128\": \"\\u0049\\u0303\",\n  // Ĩ = \\~{I}\n  \"\\u012a\": \"\\u0049\\u0304\",\n  // Ī = \\={I}\n  \"\\u012c\": \"\\u0049\\u0306\",\n  // Ĭ = \\u{I}\n  \"\\u01cf\": \"\\u0049\\u030c\",\n  // Ǐ = \\v{I}\n  \"\\u00ce\": \"\\u0049\\u0302\",\n  // Î = \\^{I}\n  \"\\u0130\": \"\\u0049\\u0307\",\n  // İ = \\.{I}\n  \"\\u0134\": \"\\u004a\\u0302\",\n  // Ĵ = \\^{J}\n  \"\\u1e30\": \"\\u004b\\u0301\",\n  // Ḱ = \\'{K}\n  \"\\u01e8\": \"\\u004b\\u030c\",\n  // Ǩ = \\v{K}\n  \"\\u0139\": \"\\u004c\\u0301\",\n  // Ĺ = \\'{L}\n  \"\\u013d\": \"\\u004c\\u030c\",\n  // Ľ = \\v{L}\n  \"\\u1e3e\": \"\\u004d\\u0301\",\n  // Ḿ = \\'{M}\n  \"\\u1e40\": \"\\u004d\\u0307\",\n  // Ṁ = \\.{M}\n  \"\\u0143\": \"\\u004e\\u0301\",\n  // Ń = \\'{N}\n  \"\\u01f8\": \"\\u004e\\u0300\",\n  // Ǹ = \\`{N}\n  \"\\u00d1\": \"\\u004e\\u0303\",\n  // Ñ = \\~{N}\n  \"\\u0147\": \"\\u004e\\u030c\",\n  // Ň = \\v{N}\n  \"\\u1e44\": \"\\u004e\\u0307\",\n  // Ṅ = \\.{N}\n  \"\\u00d3\": \"\\u004f\\u0301\",\n  // Ó = \\'{O}\n  \"\\u00d2\": \"\\u004f\\u0300\",\n  // Ò = \\`{O}\n  \"\\u00d6\": \"\\u004f\\u0308\",\n  // Ö = \\\"{O}\n  \"\\u022a\": \"\\u004f\\u0308\\u0304\",\n  // Ȫ = \\\"\\={O}\n  \"\\u00d5\": \"\\u004f\\u0303\",\n  // Õ = \\~{O}\n  \"\\u1e4c\": \"\\u004f\\u0303\\u0301\",\n  // Ṍ = \\~\\'{O}\n  \"\\u1e4e\": \"\\u004f\\u0303\\u0308\",\n  // Ṏ = \\~\\\"{O}\n  \"\\u022c\": \"\\u004f\\u0303\\u0304\",\n  // Ȭ = \\~\\={O}\n  \"\\u014c\": \"\\u004f\\u0304\",\n  // Ō = \\={O}\n  \"\\u1e52\": \"\\u004f\\u0304\\u0301\",\n  // Ṓ = \\=\\'{O}\n  \"\\u1e50\": \"\\u004f\\u0304\\u0300\",\n  // Ṑ = \\=\\`{O}\n  \"\\u014e\": \"\\u004f\\u0306\",\n  // Ŏ = \\u{O}\n  \"\\u01d1\": \"\\u004f\\u030c\",\n  // Ǒ = \\v{O}\n  \"\\u00d4\": \"\\u004f\\u0302\",\n  // Ô = \\^{O}\n  \"\\u1ed0\": \"\\u004f\\u0302\\u0301\",\n  // Ố = \\^\\'{O}\n  \"\\u1ed2\": \"\\u004f\\u0302\\u0300\",\n  // Ồ = \\^\\`{O}\n  \"\\u1ed6\": \"\\u004f\\u0302\\u0303\",\n  // Ỗ = \\^\\~{O}\n  \"\\u022e\": \"\\u004f\\u0307\",\n  // Ȯ = \\.{O}\n  \"\\u0230\": \"\\u004f\\u0307\\u0304\",\n  // Ȱ = \\.\\={O}\n  \"\\u0150\": \"\\u004f\\u030b\",\n  // Ő = \\H{O}\n  \"\\u1e54\": \"\\u0050\\u0301\",\n  // Ṕ = \\'{P}\n  \"\\u1e56\": \"\\u0050\\u0307\",\n  // Ṗ = \\.{P}\n  \"\\u0154\": \"\\u0052\\u0301\",\n  // Ŕ = \\'{R}\n  \"\\u0158\": \"\\u0052\\u030c\",\n  // Ř = \\v{R}\n  \"\\u1e58\": \"\\u0052\\u0307\",\n  // Ṙ = \\.{R}\n  \"\\u015a\": \"\\u0053\\u0301\",\n  // Ś = \\'{S}\n  \"\\u1e64\": \"\\u0053\\u0301\\u0307\",\n  // Ṥ = \\'\\.{S}\n  \"\\u0160\": \"\\u0053\\u030c\",\n  // Š = \\v{S}\n  \"\\u1e66\": \"\\u0053\\u030c\\u0307\",\n  // Ṧ = \\v\\.{S}\n  \"\\u015c\": \"\\u0053\\u0302\",\n  // Ŝ = \\^{S}\n  \"\\u1e60\": \"\\u0053\\u0307\",\n  // Ṡ = \\.{S}\n  \"\\u0164\": \"\\u0054\\u030c\",\n  // Ť = \\v{T}\n  \"\\u1e6a\": \"\\u0054\\u0307\",\n  // Ṫ = \\.{T}\n  \"\\u00da\": \"\\u0055\\u0301\",\n  // Ú = \\'{U}\n  \"\\u00d9\": \"\\u0055\\u0300\",\n  // Ù = \\`{U}\n  \"\\u00dc\": \"\\u0055\\u0308\",\n  // Ü = \\\"{U}\n  \"\\u01d7\": \"\\u0055\\u0308\\u0301\",\n  // Ǘ = \\\"\\'{U}\n  \"\\u01db\": \"\\u0055\\u0308\\u0300\",\n  // Ǜ = \\\"\\`{U}\n  \"\\u01d5\": \"\\u0055\\u0308\\u0304\",\n  // Ǖ = \\\"\\={U}\n  \"\\u01d9\": \"\\u0055\\u0308\\u030c\",\n  // Ǚ = \\\"\\v{U}\n  \"\\u0168\": \"\\u0055\\u0303\",\n  // Ũ = \\~{U}\n  \"\\u1e78\": \"\\u0055\\u0303\\u0301\",\n  // Ṹ = \\~\\'{U}\n  \"\\u016a\": \"\\u0055\\u0304\",\n  // Ū = \\={U}\n  \"\\u1e7a\": \"\\u0055\\u0304\\u0308\",\n  // Ṻ = \\=\\\"{U}\n  \"\\u016c\": \"\\u0055\\u0306\",\n  // Ŭ = \\u{U}\n  \"\\u01d3\": \"\\u0055\\u030c\",\n  // Ǔ = \\v{U}\n  \"\\u00db\": \"\\u0055\\u0302\",\n  // Û = \\^{U}\n  \"\\u016e\": \"\\u0055\\u030a\",\n  // Ů = \\r{U}\n  \"\\u0170\": \"\\u0055\\u030b\",\n  // Ű = \\H{U}\n  \"\\u1e7c\": \"\\u0056\\u0303\",\n  // Ṽ = \\~{V}\n  \"\\u1e82\": \"\\u0057\\u0301\",\n  // Ẃ = \\'{W}\n  \"\\u1e80\": \"\\u0057\\u0300\",\n  // Ẁ = \\`{W}\n  \"\\u1e84\": \"\\u0057\\u0308\",\n  // Ẅ = \\\"{W}\n  \"\\u0174\": \"\\u0057\\u0302\",\n  // Ŵ = \\^{W}\n  \"\\u1e86\": \"\\u0057\\u0307\",\n  // Ẇ = \\.{W}\n  \"\\u1e8c\": \"\\u0058\\u0308\",\n  // Ẍ = \\\"{X}\n  \"\\u1e8a\": \"\\u0058\\u0307\",\n  // Ẋ = \\.{X}\n  \"\\u00dd\": \"\\u0059\\u0301\",\n  // Ý = \\'{Y}\n  \"\\u1ef2\": \"\\u0059\\u0300\",\n  // Ỳ = \\`{Y}\n  \"\\u0178\": \"\\u0059\\u0308\",\n  // Ÿ = \\\"{Y}\n  \"\\u1ef8\": \"\\u0059\\u0303\",\n  // Ỹ = \\~{Y}\n  \"\\u0232\": \"\\u0059\\u0304\",\n  // Ȳ = \\={Y}\n  \"\\u0176\": \"\\u0059\\u0302\",\n  // Ŷ = \\^{Y}\n  \"\\u1e8e\": \"\\u0059\\u0307\",\n  // Ẏ = \\.{Y}\n  \"\\u0179\": \"\\u005a\\u0301\",\n  // Ź = \\'{Z}\n  \"\\u017d\": \"\\u005a\\u030c\",\n  // Ž = \\v{Z}\n  \"\\u1e90\": \"\\u005a\\u0302\",\n  // Ẑ = \\^{Z}\n  \"\\u017b\": \"\\u005a\\u0307\",\n  // Ż = \\.{Z}\n  \"\\u03ac\": \"\\u03b1\\u0301\",\n  // ά = \\'{α}\n  \"\\u1f70\": \"\\u03b1\\u0300\",\n  // ὰ = \\`{α}\n  \"\\u1fb1\": \"\\u03b1\\u0304\",\n  // ᾱ = \\={α}\n  \"\\u1fb0\": \"\\u03b1\\u0306\",\n  // ᾰ = \\u{α}\n  \"\\u03ad\": \"\\u03b5\\u0301\",\n  // έ = \\'{ε}\n  \"\\u1f72\": \"\\u03b5\\u0300\",\n  // ὲ = \\`{ε}\n  \"\\u03ae\": \"\\u03b7\\u0301\",\n  // ή = \\'{η}\n  \"\\u1f74\": \"\\u03b7\\u0300\",\n  // ὴ = \\`{η}\n  \"\\u03af\": \"\\u03b9\\u0301\",\n  // ί = \\'{ι}\n  \"\\u1f76\": \"\\u03b9\\u0300\",\n  // ὶ = \\`{ι}\n  \"\\u03ca\": \"\\u03b9\\u0308\",\n  // ϊ = \\\"{ι}\n  \"\\u0390\": \"\\u03b9\\u0308\\u0301\",\n  // ΐ = \\\"\\'{ι}\n  \"\\u1fd2\": \"\\u03b9\\u0308\\u0300\",\n  // ῒ = \\\"\\`{ι}\n  \"\\u1fd1\": \"\\u03b9\\u0304\",\n  // ῑ = \\={ι}\n  \"\\u1fd0\": \"\\u03b9\\u0306\",\n  // ῐ = \\u{ι}\n  \"\\u03cc\": \"\\u03bf\\u0301\",\n  // ό = \\'{ο}\n  \"\\u1f78\": \"\\u03bf\\u0300\",\n  // ὸ = \\`{ο}\n  \"\\u03cd\": \"\\u03c5\\u0301\",\n  // ύ = \\'{υ}\n  \"\\u1f7a\": \"\\u03c5\\u0300\",\n  // ὺ = \\`{υ}\n  \"\\u03cb\": \"\\u03c5\\u0308\",\n  // ϋ = \\\"{υ}\n  \"\\u03b0\": \"\\u03c5\\u0308\\u0301\",\n  // ΰ = \\\"\\'{υ}\n  \"\\u1fe2\": \"\\u03c5\\u0308\\u0300\",\n  // ῢ = \\\"\\`{υ}\n  \"\\u1fe1\": \"\\u03c5\\u0304\",\n  // ῡ = \\={υ}\n  \"\\u1fe0\": \"\\u03c5\\u0306\",\n  // ῠ = \\u{υ}\n  \"\\u03ce\": \"\\u03c9\\u0301\",\n  // ώ = \\'{ω}\n  \"\\u1f7c\": \"\\u03c9\\u0300\",\n  // ὼ = \\`{ω}\n  \"\\u038e\": \"\\u03a5\\u0301\",\n  // Ύ = \\'{Υ}\n  \"\\u1fea\": \"\\u03a5\\u0300\",\n  // Ὺ = \\`{Υ}\n  \"\\u03ab\": \"\\u03a5\\u0308\",\n  // Ϋ = \\\"{Υ}\n  \"\\u1fe9\": \"\\u03a5\\u0304\",\n  // Ῡ = \\={Υ}\n  \"\\u1fe8\": \"\\u03a5\\u0306\",\n  // Ῠ = \\u{Υ}\n  \"\\u038f\": \"\\u03a9\\u0301\",\n  // Ώ = \\'{Ω}\n  \"\\u1ffa\": \"\\u03a9\\u0300\" // Ὼ = \\`{Ω}\n\n};\n\n/* eslint no-constant-condition:0 */\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.nextToken.text !== text) {\n      throw new ParseError(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Considers the current look ahead token as consumed,\n   * and fetches the one after that as the new look ahead.\n   */\n\n\n  consume() {\n    this.nextToken = this.gullet.expandNextToken();\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    // Create a group namespace for the math expression.\n    // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n    this.gullet.beginGroup(); // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    this.consume();\n    const parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\", false); // End the group namespace for the expression\n\n    this.gullet.endGroup();\n    return parse;\n  }\n\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    const body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      const lex = this.nextToken;\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n\n      const atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    let overIndex = -1;\n    let funcName;\n\n    for (let i = 0; i < body.length; i++) {\n      const node = checkNodeType(body[i], \"infix\");\n\n      if (node) {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", node.token);\n        }\n\n        overIndex = i;\n        funcName = node.replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      let numerNode;\n      let denomNode;\n      const numerBody = body.slice(0, overIndex);\n      const denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      let node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  } // The greediness of a superscript or subscript\n\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  handleSupSubscript(name) {\n    const symbolToken = this.nextToken;\n    const symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    const group = this.parseGroup(name, false, Parser.SUPSUB_GREEDINESS);\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  handleUnsupportedCmd() {\n    const text = this.nextToken.text;\n    const textordArray = [];\n\n    for (let i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    const textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    const colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    this.consume();\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    const base = this.parseGroup(\"atom\", false, null, breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    let superscript;\n    let subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      const lex = this.nextToken;\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        const opNode = checkNodeType(base, \"op\");\n\n        if (opNode) {\n          const limits = lex.text === \"\\\\limits\";\n          opNode.limits = limits;\n          opNode.alwaysHandleSupSub = true;\n        } else {\n          throw new ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        const prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        const primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.nextToken.text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.nextToken.text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name, // For error reporting.\n  greediness) {\n    const token = this.nextToken;\n    const func = token.text;\n    const funcData = functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    if (greediness != null && funcData.greediness <= greediness) {\n      throw new ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    } // hyperref package sets the catcode of % as an active character\n\n\n    if (funcData.argTypes && funcData.argTypes[0] === \"url\") {\n      this.gullet.lexer.setCatcode(\"%\", 13);\n    } // Consume the command token after possibly switching to the\n    // mode specified by the function (for instant mode switching),\n    // and then immediately switch back.\n\n\n    if (funcData.consumeMode) {\n      const oldMode = this.mode;\n      this.switchMode(funcData.consumeMode);\n      this.consume();\n      this.switchMode(oldMode);\n    } else {\n      this.consume();\n    }\n\n    const _this$parseArguments = this.parseArguments(func, funcData),\n          args = _this$parseArguments.args,\n          optArgs = _this$parseArguments.optArgs;\n\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    const context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    const func = functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(`No function handler for ${name}`);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    const totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    const baseGreediness = funcData.greediness;\n    const args = [];\n    const optArgs = [];\n\n    for (let i = 0; i < totalArgs; i++) {\n      const argType = funcData.argTypes && funcData.argTypes[i];\n      const isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n\n      if (i > 0 && !isOptional) {\n        this.consumeSpaces();\n      } // Also consume leading spaces in math mode, as parseSymbol\n      // won't know what to do with them.  This can only happen with\n      // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n      // In LaTeX, the \\foo's get treated as (blank) arguments).\n      // In KaTeX, for now, both spaces will get consumed.\n      // TODO(edemaine)\n\n\n      if (i === 0 && !isOptional && this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      const nextToken = this.nextToken;\n      const arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional, baseGreediness);\n\n      if (!arg) {\n        if (isOptional) {\n          optArgs.push(null);\n          continue;\n        }\n\n        throw new ParseError(\"Expected group after '\" + func + \"'\", nextToken);\n      }\n\n      (isOptional ? optArgs : args).push(arg);\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional, greediness) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseGroup(name, optional, greediness, undefined, type);\n\n      case \"raw\":\n        {\n          if (optional && this.nextToken.text === \"{\") {\n            return null;\n          }\n\n          const token = this.parseStringGroup(\"raw\", optional, true);\n\n          if (token) {\n            return {\n              type: \"raw\",\n              mode: \"text\",\n              string: token.text\n            };\n          } else {\n            throw new ParseError(\"Expected raw group\", this.nextToken);\n          }\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseGroup(name, optional, greediness);\n\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.nextToken);\n    }\n  }\n\n  consumeSpaces() {\n    while (this.nextToken.text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional, raw) {\n    const groupBegin = optional ? \"[\" : \"{\";\n    const groupEnd = optional ? \"]\" : \"}\";\n    const nextToken = this.nextToken;\n\n    if (nextToken.text !== groupBegin) {\n      if (optional) {\n        return null;\n      } else if (raw && nextToken.text !== \"EOF\" && /[^{}[\\]]/.test(nextToken.text)) {\n        // allow a single character in raw string group\n        this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n        this.consume();\n        return nextToken;\n      }\n    }\n\n    const outerMode = this.mode;\n    this.mode = \"text\";\n    this.expect(groupBegin);\n    let str = \"\";\n    const firstToken = this.nextToken;\n    let nested = 0; // allow nested braces in raw string group\n\n    let lastToken = firstToken;\n\n    while (raw && nested > 0 || this.nextToken.text !== groupEnd) {\n      switch (this.nextToken.text) {\n        case \"EOF\":\n          throw new ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(lastToken, str));\n\n        case groupBegin:\n          nested++;\n          break;\n\n        case groupEnd:\n          nested--;\n          break;\n      }\n\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    this.mode = outerMode;\n    this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n    this.expect(groupEnd);\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName) {\n    const outerMode = this.mode;\n    this.mode = \"text\";\n    const firstToken = this.nextToken;\n    let lastToken = firstToken;\n    let str = \"\";\n\n    while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    const res = this.parseStringGroup(\"color\", optional);\n\n    if (!res) {\n      return null;\n    }\n\n    const match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    let color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    let res;\n    let isBlank = false;\n\n    if (!optional && this.nextToken.text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    const data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols.\n   */\n\n\n  parseUrlGroup(optional) {\n    const res = this.parseStringGroup(\"url\", optional, true); // get raw string\n\n    if (!res) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    const url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    let protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n    protocol = protocol != null ? protocol[1] : \"_relative\";\n    const allowed = this.settings.allowedProtocols;\n\n    if (!utils.contains(allowed, \"*\") && !utils.contains(allowed, protocol)) {\n      throw new ParseError(`Forbidden protocol '${protocol}'`, res);\n    }\n\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * If `optional` is false or absent, this parses an ordinary group,\n   * which is either a single nucleus (like \"x\") or an expression\n   * in braces (like \"{x+y}\") or an implicit group, a group that starts\n   * at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   * If `optional` is true, it parses either a bracket-delimited expression\n   * (like \"[x+y]\") or returns null to indicate the absence of a\n   * bracket-enclosed group.\n   * If `mode` is present, switches to that mode while parsing the group,\n   * and switches back after.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  optional, greediness, breakOnTokenText, mode) {\n    const outerMode = this.mode;\n    const firstToken = this.nextToken;\n    const text = firstToken.text; // Switch to specified mode\n\n    if (mode) {\n      this.switchMode(mode);\n    }\n\n    let groupEnd;\n    let result; // Try to parse an open brace or \\begingroup\n\n    if (optional ? text === \"[\" : text === \"{\" || text === \"\\\\begingroup\") {\n      groupEnd = Parser.endOfGroup[text]; // Start a new group namespace\n\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      this.consume();\n      const expression = this.parseExpression(false, groupEnd);\n      const lastToken = this.nextToken; // End group namespace before consuming symbol after close brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else if (optional) {\n      // Return nothing for an optional group\n      result = null;\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.handleUnsupportedCmd();\n      }\n    } // Switch mode back\n\n\n    if (mode) {\n      this.switchMode(outerMode);\n    } // Make sure we got a close brace\n\n\n    if (groupEnd) {\n      this.expect(groupEnd);\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    let n = group.length - 1;\n\n    for (let i = 0; i < n; ++i) {\n      const a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      const v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like verbatim\n   */\n\n\n  parseSymbol() {\n    const nucleus = this.nextToken;\n    let text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      let arg = text.slice(5);\n      const star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(`\\\\verb assertion failed --\n                    please report what input caused this bug`);\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Accented Unicode text character \"${text[0]}\" used in ` + `math mode`, nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    const match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    let symbol;\n\n    if (symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Latin-1/Unicode text character \"${text[0]}\" used in ` + `math mode`, nucleus);\n      }\n\n      const group = symbols[this.mode][text].group;\n      const loc = SourceLocation.range(nucleus);\n      let s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        const family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      }\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", `Unrecognized Unicode character \"${text[0]}\"` + ` (${text.charCodeAt(0)})`, nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Unicode text character \"${text[0]}\" used in math mode`, nucleus);\n        }\n      }\n\n      symbol = {\n        type: \"textord\",\n        mode: this.mode,\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (let i = 0; i < match[0].length; i++) {\n        const accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(`Unknown accent ' ${accent}'`, nucleus);\n        }\n\n        const command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new ParseError(`Accent ${accent} unsupported in ${this.mode} mode`, nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          base: symbol\n        };\n      }\n    }\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser.endOfGroup = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"\\\\begingroup\": \"\\\\endgroup\"\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n\n};\nParser.SUPSUB_GREEDINESS = 1;\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nconst parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  const parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  let tree = parser.parse(); // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* eslint no-console:0 */\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nlet render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  const node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function render() {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nconst renderToString = function renderToString(expression, options) {\n  const markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nconst generateParseTree = function generateParseTree(expression, options) {\n  const settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nconst renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n\n  const node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", `color:${options.errorColor}`);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nconst renderToDomTree = function renderToDomTree(expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nconst renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nvar katex = {\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.10.2\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span,\n    Anchor,\n    SymbolNode,\n    SvgNode,\n    PathNode,\n    LineNode\n  }\n};\n\nexport default katex;\n","import katex from '../katex.mjs';\n\n/* eslint no-constant-condition:0 */\nconst findEndOfMath = function findEndOfMath(delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === \"\\\\\") {\n      index++;\n    } else if (character === \"{\") {\n      braceLevel++;\n    } else if (character === \"}\") {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nconst splitAtDelimiters = function splitAtDelimiters(startData, leftDelim, rightDelim, display) {\n  const finalData = [];\n\n  for (let i = 0; i < startData.length; i++) {\n    if (startData[i].type === \"text\") {\n      const text = startData[i].data;\n      let lookingForLeft = true;\n      let currIndex = 0;\n      let nextIndex;\n      nextIndex = text.indexOf(leftDelim);\n\n      if (nextIndex !== -1) {\n        currIndex = nextIndex;\n        finalData.push({\n          type: \"text\",\n          data: text.slice(0, currIndex)\n        });\n        lookingForLeft = false;\n      }\n\n      while (true) {\n        if (lookingForLeft) {\n          nextIndex = text.indexOf(leftDelim, currIndex);\n\n          if (nextIndex === -1) {\n            break;\n          }\n\n          finalData.push({\n            type: \"text\",\n            data: text.slice(currIndex, nextIndex)\n          });\n          currIndex = nextIndex;\n        } else {\n          nextIndex = findEndOfMath(rightDelim, text, currIndex + leftDelim.length);\n\n          if (nextIndex === -1) {\n            break;\n          }\n\n          finalData.push({\n            type: \"math\",\n            data: text.slice(currIndex + leftDelim.length, nextIndex),\n            rawData: text.slice(currIndex, nextIndex + rightDelim.length),\n            display: display\n          });\n          currIndex = nextIndex + rightDelim.length;\n        }\n\n        lookingForLeft = !lookingForLeft;\n      }\n\n      finalData.push({\n        type: \"text\",\n        data: text.slice(currIndex)\n      });\n    } else {\n      finalData.push(startData[i]);\n    }\n  }\n\n  return finalData;\n};\n\n/* eslint no-console:0 */\n\nconst splitWithDelimiters = function splitWithDelimiters(text, delimiters) {\n  let data = [{\n    type: \"text\",\n    data: text\n  }];\n\n  for (let i = 0; i < delimiters.length; i++) {\n    const delimiter = delimiters[i];\n    data = splitAtDelimiters(data, delimiter.left, delimiter.right, delimiter.display || false);\n  }\n\n  return data;\n};\n/* Note: optionsCopy is mutated by this method. If it is ever exposed in the\n * API, we should copy it before mutating.\n */\n\n\nconst renderMathInText = function renderMathInText(text, optionsCopy) {\n  const data = splitWithDelimiters(text, optionsCopy.delimiters);\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].type === \"text\") {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      const span = document.createElement(\"span\");\n      let math = data[i].data; // Override any display mode defined in the settings with that\n      // defined by the text itself\n\n      optionsCopy.displayMode = data[i].display;\n\n      try {\n        if (optionsCopy.preProcess) {\n          math = optionsCopy.preProcess(math);\n        }\n\n        katex.render(math, span, optionsCopy);\n      } catch (e) {\n        if (!(e instanceof katex.ParseError)) {\n          throw e;\n        }\n\n        optionsCopy.errorCallback(\"KaTeX auto-render: Failed to parse `\" + data[i].data + \"` with \", e);\n        fragment.appendChild(document.createTextNode(data[i].rawData));\n        continue;\n      }\n\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\nconst renderElem = function renderElem(elem, optionsCopy) {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // Text node\n      const frag = renderMathInText(childNode.textContent, optionsCopy);\n      i += frag.childNodes.length - 1;\n      elem.replaceChild(frag, childNode);\n    } else if (childNode.nodeType === 1) {\n      // Element node\n      const className = ' ' + childNode.className + ' ';\n      const shouldRender = optionsCopy.ignoredTags.indexOf(childNode.nodeName.toLowerCase()) === -1 && optionsCopy.ignoredClasses.every(x => className.indexOf(' ' + x + ' ') === -1);\n\n      if (shouldRender) {\n        renderElem(childNode, optionsCopy);\n      }\n    } // Otherwise, it's something else, and ignore it.\n\n  }\n};\n\nconst renderMathInElement = function renderMathInElement(elem, options) {\n  if (!elem) {\n    throw new Error(\"No element provided to render\");\n  }\n\n  const optionsCopy = {}; // Object.assign(optionsCopy, option)\n\n  for (const option in options) {\n    if (options.hasOwnProperty(option)) {\n      optionsCopy[option] = options[option];\n    }\n  } // default options\n\n\n  optionsCopy.delimiters = optionsCopy.delimiters || [{\n    left: \"$$\",\n    right: \"$$\",\n    display: true\n  }, {\n    left: \"\\\\(\",\n    right: \"\\\\)\",\n    display: false\n  }, // LaTeX uses $…$, but it ruins the display of normal `$` in text:\n  // {left: \"$\", right: \"$\", display: false},\n  //  \\[…\\] must come last in this array. Otherwise, renderMathInElement\n  //  will search for \\[ before it searches for $$ or  \\(\n  // That makes it susceptible to finding a \\\\[0.3em] row delimiter and\n  // treating it as if it were the start of a KaTeX math zone.\n  {\n    left: \"\\\\[\",\n    right: \"\\\\]\",\n    display: true\n  }];\n  optionsCopy.ignoredTags = optionsCopy.ignoredTags || [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\"];\n  optionsCopy.ignoredClasses = optionsCopy.ignoredClasses || [];\n  optionsCopy.errorCallback = optionsCopy.errorCallback || console.error; // Enable sharing of global macros defined via `\\gdef` between different\n  // math elements within a single call to `renderMathInElement`.\n\n  optionsCopy.macros = optionsCopy.macros || {};\n  renderElem(elem, optionsCopy);\n};\n\nexport default renderMathInElement;\n","/**!\n * @preserve\nBased on ASCIIMathTeXImg.js but now part of https://github.com/obedm503/showdown-katex\n\nBased on ASCIIMathML, Version 1.4.7 Aug 30, 2005, (c) Peter Jipsen http://www.chapman.edu/~jipsen\nModified with TeX conversion for IMG rendering Sept 6, 2006 (c) David Lippman http://www.pierce.ctc.edu/dlippman\n  Updated to match ver 2.2 Mar 3, 2014\n  Latest at https://github.com/mathjax/asciimathml\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n// token types\nconst tokens = {\n  CONST: 0,\n  UNARY: 1,\n  BINARY: 2,\n  INFIX: 3,\n  LEFTBRACKET: 4,\n  RIGHTBRACKET: 5,\n  SPACE: 6,\n  UNDEROVER: 7,\n  DEFINITION: 8,\n  LEFTRIGHT: 9,\n  TEXT: 10,\n};\n\nconst quoteSymbol = {\n  input: \"'\",\n  tag: 'mtext',\n  output: 'mbox',\n  tex: null,\n  ttype: tokens.TEXT,\n};\n\nconst symbols = [\n  // some greek symbols\n  {\n    input: 'alpha',\n    tag: 'mi',\n    output: '\\u03B1',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'beta',\n    tag: 'mi',\n    output: '\\u03B2',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'chi', tag: 'mi', output: '\\u03C7', tex: null, ttype: tokens.CONST },\n  {\n    input: 'delta',\n    tag: 'mi',\n    output: '\\u03B4',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Delta',\n    tag: 'mo',\n    output: '\\u0394',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'epsi',\n    tag: 'mi',\n    output: '\\u03B5',\n    tex: 'epsilon',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'varepsilon',\n    tag: 'mi',\n    output: '\\u025B',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'eta', tag: 'mi', output: '\\u03B7', tex: null, ttype: tokens.CONST },\n  {\n    input: 'gamma',\n    tag: 'mi',\n    output: '\\u03B3',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Gamma',\n    tag: 'mo',\n    output: '\\u0393',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'iota',\n    tag: 'mi',\n    output: '\\u03B9',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'kappa',\n    tag: 'mi',\n    output: '\\u03BA',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'lambda',\n    tag: 'mi',\n    output: '\\u03BB',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Lambda',\n    tag: 'mo',\n    output: '\\u039B',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'lamda',\n    tag: 'mi',\n    output: 'lambda',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'Lamda',\n    tag: 'mi',\n    output: 'Lambda',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  { input: 'mu', tag: 'mi', output: '\\u03BC', tex: null, ttype: tokens.CONST },\n  { input: 'nu', tag: 'mi', output: '\\u03BD', tex: null, ttype: tokens.CONST },\n  {\n    input: 'omega',\n    tag: 'mi',\n    output: '\\u03C9',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Omega',\n    tag: 'mo',\n    output: '\\u03A9',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'phi', tag: 'mi', output: '\\u03C6', tex: null, ttype: tokens.CONST },\n  {\n    input: 'varphi',\n    tag: 'mi',\n    output: '\\u03D5',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'Phi', tag: 'mo', output: '\\u03A6', tex: null, ttype: tokens.CONST },\n  { input: 'pi', tag: 'mi', output: '\\u03C0', tex: null, ttype: tokens.CONST },\n  { input: 'Pi', tag: 'mo', output: '\\u03A0', tex: null, ttype: tokens.CONST },\n  { input: 'psi', tag: 'mi', output: '\\u03C8', tex: null, ttype: tokens.CONST },\n  { input: 'Psi', tag: 'mi', output: '\\u03A8', tex: null, ttype: tokens.CONST },\n  { input: 'rho', tag: 'mi', output: '\\u03C1', tex: null, ttype: tokens.CONST },\n  {\n    input: 'sigma',\n    tag: 'mi',\n    output: '\\u03C3',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Sigma',\n    tag: 'mo',\n    output: '\\u03A3',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'tau', tag: 'mi', output: '\\u03C4', tex: null, ttype: tokens.CONST },\n  {\n    input: 'theta',\n    tag: 'mi',\n    output: '\\u03B8',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'vartheta',\n    tag: 'mi',\n    output: '\\u03D1',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'Theta',\n    tag: 'mo',\n    output: '\\u0398',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'upsilon',\n    tag: 'mi',\n    output: '\\u03C5',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: 'xi', tag: 'mi', output: '\\u03BE', tex: null, ttype: tokens.CONST },\n  { input: 'Xi', tag: 'mo', output: '\\u039E', tex: null, ttype: tokens.CONST },\n  {\n    input: 'zeta',\n    tag: 'mi',\n    output: '\\u03B6',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n\n  // binary operation symbols\n  { input: '*', tag: 'mo', output: '\\u22C5', tex: 'cdot', ttype: tokens.CONST },\n  { input: '**', tag: 'mo', output: '\\u2217', tex: 'ast', ttype: tokens.CONST },\n  {\n    input: '***',\n    tag: 'mo',\n    output: '\\u22C6',\n    tex: 'star',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '// ',\n    tag: 'mo',\n    output: '/',\n    tex: '/',\n    ttype: tokens.CONST,\n    val: true,\n    notexcopy: true,\n  },\n  {\n    input: '\\\\\\\\',\n    tag: 'mo',\n    output: '\\\\',\n    tex: 'backslash',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'setminus',\n    tag: 'mo',\n    output: '\\\\',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'xx',\n    tag: 'mo',\n    output: '\\u00D7',\n    tex: 'times',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|><',\n    tag: 'mo',\n    output: '\\u22C9',\n    tex: 'ltimes',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '><|',\n    tag: 'mo',\n    output: '\\u22CA',\n    tex: 'rtimes',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|><|',\n    tag: 'mo',\n    output: '\\u22C8',\n    tex: 'bowtie',\n    ttype: tokens.CONST,\n  },\n  { input: '-:', tag: 'mo', output: '\\u00F7', tex: 'div', ttype: tokens.CONST },\n  {\n    input: 'divide',\n    tag: 'mo',\n    output: '-:',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  { input: '@', tag: 'mo', output: '\\u2218', tex: 'circ', ttype: tokens.CONST },\n  {\n    input: 'o+',\n    tag: 'mo',\n    output: '\\u2295',\n    tex: 'oplus',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'ox',\n    tag: 'mo',\n    output: '\\u2297',\n    tex: 'otimes',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'o.',\n    tag: 'mo',\n    output: '\\u2299',\n    tex: 'odot',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'sum',\n    tag: 'mo',\n    output: '\\u2211',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: 'prod',\n    tag: 'mo',\n    output: '\\u220F',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: '^^',\n    tag: 'mo',\n    output: '\\u2227',\n    tex: 'wedge',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '^^^',\n    tag: 'mo',\n    output: '\\u22C0',\n    tex: 'bigwedge',\n    ttype: tokens.UNDEROVER,\n  },\n  { input: 'vv', tag: 'mo', output: '\\u2228', tex: 'vee', ttype: tokens.CONST },\n  {\n    input: 'vvv',\n    tag: 'mo',\n    output: '\\u22C1',\n    tex: 'bigvee',\n    ttype: tokens.UNDEROVER,\n  },\n  { input: 'nn', tag: 'mo', output: '\\u2229', tex: 'cap', ttype: tokens.CONST },\n  {\n    input: 'nnn',\n    tag: 'mo',\n    output: '\\u22C2',\n    tex: 'bigcap',\n    ttype: tokens.UNDEROVER,\n  },\n  { input: 'uu', tag: 'mo', output: '\\u222A', tex: 'cup', ttype: tokens.CONST },\n  {\n    input: 'uuu',\n    tag: 'mo',\n    output: '\\u22C3',\n    tex: 'bigcup',\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: 'overset',\n    tag: 'mover',\n    output: 'stackrel',\n    tex: null,\n    ttype: tokens.BINARY,\n  },\n  {\n    input: 'underset',\n    tag: 'munder',\n    output: 'stackrel',\n    tex: null,\n    ttype: tokens.BINARY,\n  },\n\n  // binary relation symbols\n  { input: '!=', tag: 'mo', output: '\\u2260', tex: 'ne', ttype: tokens.CONST },\n  { input: ':=', tag: 'mo', output: ':=', tex: null, ttype: tokens.CONST },\n  { input: 'lt', tag: 'mo', output: '<', tex: null, ttype: tokens.CONST },\n  { input: 'gt', tag: 'mo', output: '>', tex: null, ttype: tokens.CONST },\n  { input: '<=', tag: 'mo', output: '\\u2264', tex: 'le', ttype: tokens.CONST },\n  {\n    input: 'lt=',\n    tag: 'mo',\n    output: '\\u2264',\n    tex: 'leq',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'gt=',\n    tag: 'mo',\n    output: '\\u2265',\n    tex: 'geq',\n    ttype: tokens.CONST,\n  },\n  { input: '>=', tag: 'mo', output: '\\u2265', tex: 'ge', ttype: tokens.CONST },\n  {\n    input: '-<',\n    tag: 'mo',\n    output: '\\u227A',\n    tex: 'prec',\n    ttype: tokens.CONST,\n  },\n  { input: '-lt', tag: 'mo', output: '\\u227A', tex: null, ttype: tokens.CONST },\n  {\n    input: '>-',\n    tag: 'mo',\n    output: '\\u227B',\n    tex: 'succ',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '-<=',\n    tag: 'mo',\n    output: '\\u2AAF',\n    tex: 'preceq',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '>-=',\n    tag: 'mo',\n    output: '\\u2AB0',\n    tex: 'succeq',\n    ttype: tokens.CONST,\n  },\n  { input: 'in', tag: 'mo', output: '\\u2208', tex: null, ttype: tokens.CONST },\n  {\n    input: '!in',\n    tag: 'mo',\n    output: '\\u2209',\n    tex: 'notin',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'sub',\n    tag: 'mo',\n    output: '\\u2282',\n    tex: 'subset',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'sup',\n    tag: 'mo',\n    output: '\\u2283',\n    tex: 'supset',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'sube',\n    tag: 'mo',\n    output: '\\u2286',\n    tex: 'subseteq',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'supe',\n    tag: 'mo',\n    output: '\\u2287',\n    tex: 'supseteq',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '-=',\n    tag: 'mo',\n    output: '\\u2261',\n    tex: 'equiv',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '~=',\n    tag: 'mo',\n    output: '\\u2245',\n    tex: 'stackrel{\\\\sim}{=}',\n    ttype: tokens.CONST,\n  }, // back hack b/c mimetex doesn't support /cong\n  {\n    input: 'cong',\n    tag: 'mo',\n    output: '~=',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: '~~',\n    tag: 'mo',\n    output: '\\u2248',\n    tex: 'approx',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'prop',\n    tag: 'mo',\n    output: '\\u221D',\n    tex: 'propto',\n    ttype: tokens.CONST,\n  },\n\n  // logical symbols\n  { input: 'and', tag: 'mtext', output: 'and', tex: null, ttype: tokens.SPACE },\n  { input: 'or', tag: 'mtext', output: 'or', tex: null, ttype: tokens.SPACE },\n  {\n    input: 'not',\n    tag: 'mo',\n    output: '\\u00AC',\n    tex: 'neg',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '=>',\n    tag: 'mo',\n    output: '\\u21D2',\n    tex: 'Rightarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'implies',\n    tag: 'mo',\n    output: '=>',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  { input: 'if', tag: 'mo', output: 'if', tex: null, ttype: tokens.SPACE },\n  {\n    input: '<=>',\n    tag: 'mo',\n    output: '\\u21D4',\n    tex: 'Leftrightarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'iff',\n    tag: 'mo',\n    output: '<=>',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'AA',\n    tag: 'mo',\n    output: '\\u2200',\n    tex: 'forall',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'EE',\n    tag: 'mo',\n    output: '\\u2203',\n    tex: 'exists',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '_|_',\n    tag: 'mo',\n    output: '\\u22A5',\n    tex: 'bot',\n    ttype: tokens.CONST,\n  },\n  { input: 'TT', tag: 'mo', output: '\\u22A4', tex: 'top', ttype: tokens.CONST },\n  {\n    input: '|--',\n    tag: 'mo',\n    output: '\\u22A2',\n    tex: 'vdash',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|==',\n    tag: 'mo',\n    output: '\\u22A8',\n    tex: 'models',\n    ttype: tokens.CONST,\n  }, // mimetex doesn't support\n\n  // grouping brackets\n  {\n    input: '(',\n    tag: 'mo',\n    output: '(',\n    tex: null,\n    ttype: tokens.LEFTBRACKET,\n    val: true,\n  },\n  {\n    input: ')',\n    tag: 'mo',\n    output: ')',\n    tex: null,\n    ttype: tokens.RIGHTBRACKET,\n    val: true,\n  },\n  {\n    input: '[',\n    tag: 'mo',\n    output: '[',\n    tex: null,\n    ttype: tokens.LEFTBRACKET,\n    val: true,\n  },\n  {\n    input: ']',\n    tag: 'mo',\n    output: ']',\n    tex: null,\n    ttype: tokens.RIGHTBRACKET,\n    val: true,\n  },\n  {\n    input: '{',\n    tag: 'mo',\n    output: '{',\n    tex: 'lbrace',\n    ttype: tokens.LEFTBRACKET,\n  },\n  {\n    input: '}',\n    tag: 'mo',\n    output: '}',\n    tex: 'rbrace',\n    ttype: tokens.RIGHTBRACKET,\n  },\n  {\n    input: '|',\n    tag: 'mo',\n    output: '|',\n    tex: null,\n    ttype: tokens.LEFTRIGHT,\n    val: true,\n  },\n  // {input:'||', tag:'mo', output:'||', tex:null, ttype:LEFTRIGHT},\n  {\n    input: '(:',\n    tag: 'mo',\n    output: '\\u2329',\n    tex: 'langle',\n    ttype: tokens.LEFTBRACKET,\n  },\n  {\n    input: ':)',\n    tag: 'mo',\n    output: '\\u232A',\n    tex: 'rangle',\n    ttype: tokens.RIGHTBRACKET,\n  },\n  {\n    input: '<<',\n    tag: 'mo',\n    output: '\\u2329',\n    tex: 'langle',\n    ttype: tokens.LEFTBRACKET,\n  },\n  {\n    input: '>>',\n    tag: 'mo',\n    output: '\\u232A',\n    tex: 'rangle',\n    ttype: tokens.RIGHTBRACKET,\n  },\n  {\n    input: '{:',\n    tag: 'mo',\n    output: '{:',\n    tex: null,\n    ttype: tokens.LEFTBRACKET,\n    invisible: true,\n  },\n  {\n    input: ':}',\n    tag: 'mo',\n    output: ':}',\n    tex: null,\n    ttype: tokens.RIGHTBRACKET,\n    invisible: true,\n  },\n\n  // miscellaneous symbols\n  { input: 'int', tag: 'mo', output: '\\u222B', tex: null, ttype: tokens.CONST },\n  {\n    input: 'dx',\n    tag: 'mi',\n    output: '{:d x:}',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'dy',\n    tag: 'mi',\n    output: '{:d y:}',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'dz',\n    tag: 'mi',\n    output: '{:d z:}',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'dt',\n    tag: 'mi',\n    output: '{:d t:}',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'oint',\n    tag: 'mo',\n    output: '\\u222E',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'del',\n    tag: 'mo',\n    output: '\\u2202',\n    tex: 'partial',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'grad',\n    tag: 'mo',\n    output: '\\u2207',\n    tex: 'nabla',\n    ttype: tokens.CONST,\n  },\n  { input: '+-', tag: 'mo', output: '\\u00B1', tex: 'pm', ttype: tokens.CONST },\n  {\n    input: 'O/',\n    tag: 'mo',\n    output: '\\u2205',\n    tex: 'emptyset',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'oo',\n    tag: 'mo',\n    output: '\\u221E',\n    tex: 'infty',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'aleph',\n    tag: 'mo',\n    output: '\\u2135',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  { input: '...', tag: 'mo', output: '...', tex: 'ldots', ttype: tokens.CONST },\n  {\n    input: ':.',\n    tag: 'mo',\n    output: '\\u2234',\n    tex: 'therefore',\n    ttype: tokens.CONST,\n  },\n  {\n    input: \":'\",\n    tag: 'mo',\n    output: '\\u2235',\n    tex: 'because',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '/_',\n    tag: 'mo',\n    output: '\\u2220',\n    tex: 'angle',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '/_\\\\',\n    tag: 'mo',\n    output: '\\u25B3',\n    tex: 'triangle',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '\\\\ ',\n    tag: 'mo',\n    output: '\\u00A0',\n    tex: null,\n    ttype: tokens.CONST,\n    val: true,\n  },\n  {\n    input: 'frown',\n    tag: 'mo',\n    output: '\\u2322',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: '%',\n    tag: 'mo',\n    output: '%',\n    tex: '%',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'quad',\n    tag: 'mo',\n    output: '\\u00A0\\u00A0',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'qquad',\n    tag: 'mo',\n    output: '\\u00A0\\u00A0\\u00A0\\u00A0',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'cdots',\n    tag: 'mo',\n    output: '\\u22EF',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'vdots',\n    tag: 'mo',\n    output: '\\u22EE',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'ddots',\n    tag: 'mo',\n    output: '\\u22F1',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'diamond',\n    tag: 'mo',\n    output: '\\u22C4',\n    tex: null,\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'square',\n    tag: 'mo',\n    output: '\\u25A1',\n    tex: 'boxempty',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|__',\n    tag: 'mo',\n    output: '\\u230A',\n    tex: 'lfloor',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '__|',\n    tag: 'mo',\n    output: '\\u230B',\n    tex: 'rfloor',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|~',\n    tag: 'mo',\n    output: '\\u2308',\n    tex: 'lceil',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'lceiling',\n    tag: 'mo',\n    output: '|~',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: '~|',\n    tag: 'mo',\n    output: '\\u2309',\n    tex: 'rceil',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'rceiling',\n    tag: 'mo',\n    output: '~|',\n    tex: null,\n    ttype: tokens.DEFINITION,\n  },\n  {\n    input: 'CC',\n    tag: 'mo',\n    output: '\\u2102',\n    tex: 'mathbb{C}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'NN',\n    tag: 'mo',\n    output: '\\u2115',\n    tex: 'mathbb{N}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'QQ',\n    tag: 'mo',\n    output: '\\u211A',\n    tex: 'mathbb{Q}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'RR',\n    tag: 'mo',\n    output: '\\u211D',\n    tex: 'mathbb{R}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'ZZ',\n    tag: 'mo',\n    output: '\\u2124',\n    tex: 'mathbb{Z}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'f',\n    tag: 'mi',\n    output: 'f',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n    val: true,\n  },\n  {\n    input: 'g',\n    tag: 'mi',\n    output: 'g',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n    val: true,\n  },\n  { input: \"''\", tag: 'mo', output: \"''\", tex: null, val: true },\n  { input: \"'''\", tag: 'mo', output: \"'''\", tex: null, val: true },\n  { input: \"''''\", tag: 'mo', output: \"''''\", tex: null, val: true },\n\n  // standard functions\n  {\n    input: 'lim',\n    tag: 'mo',\n    output: 'lim',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: 'Lim',\n    tag: 'mo',\n    output: 'Lim',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: 'sin',\n    tag: 'mo',\n    output: 'sin',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'cos',\n    tag: 'mo',\n    output: 'cos',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'tan',\n    tag: 'mo',\n    output: 'tan',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'arcsin',\n    tag: 'mo',\n    output: 'arcsin',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'arccos',\n    tag: 'mo',\n    output: 'arccos',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'arctan',\n    tag: 'mo',\n    output: 'arctan',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'sinh',\n    tag: 'mo',\n    output: 'sinh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'cosh',\n    tag: 'mo',\n    output: 'cosh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'tanh',\n    tag: 'mo',\n    output: 'tanh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'cot',\n    tag: 'mo',\n    output: 'cot',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'coth',\n    tag: 'mo',\n    output: 'coth',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'sech',\n    tag: 'mo',\n    output: 'sech',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'csch',\n    tag: 'mo',\n    output: 'csch',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'sec',\n    tag: 'mo',\n    output: 'sec',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'csc',\n    tag: 'mo',\n    output: 'csc',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'log',\n    tag: 'mo',\n    output: 'log',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'ln',\n    tag: 'mo',\n    output: 'ln',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'abs',\n    tag: 'mo',\n    output: 'abs',\n    tex: null,\n    ttype: tokens.UNARY,\n    notexcopy: true,\n    rewriteleftright: ['|', '|'],\n  },\n  {\n    input: 'norm',\n    tag: 'mo',\n    output: 'norm',\n    tex: null,\n    ttype: tokens.UNARY,\n    notexcopy: true,\n    rewriteleftright: ['\\\\|', '\\\\|'],\n  },\n  {\n    input: 'floor',\n    tag: 'mo',\n    output: 'floor',\n    tex: null,\n    ttype: tokens.UNARY,\n    notexcopy: true,\n    rewriteleftright: ['\\\\lfloor', '\\\\rfloor'],\n  },\n  {\n    input: 'ceil',\n    tag: 'mo',\n    output: 'ceil',\n    tex: null,\n    ttype: tokens.UNARY,\n    notexcopy: true,\n    rewriteleftright: ['\\\\lceil', '\\\\rceil'],\n  },\n  {\n    input: 'Sin',\n    tag: 'mo',\n    output: 'sin',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Cos',\n    tag: 'mo',\n    output: 'cos',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Tan',\n    tag: 'mo',\n    output: 'tan',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Arcsin',\n    tag: 'mo',\n    output: 'arcsin',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Arccos',\n    tag: 'mo',\n    output: 'arccos',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Arctan',\n    tag: 'mo',\n    output: 'arctan',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Sinh',\n    tag: 'mo',\n    output: 'sinh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Sosh',\n    tag: 'mo',\n    output: 'cosh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Tanh',\n    tag: 'mo',\n    output: 'tanh',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Cot',\n    tag: 'mo',\n    output: 'cot',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Sec',\n    tag: 'mo',\n    output: 'sec',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Csc',\n    tag: 'mo',\n    output: 'csc',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Log',\n    tag: 'mo',\n    output: 'log',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Ln',\n    tag: 'mo',\n    output: 'ln',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'Abs',\n    tag: 'mo',\n    output: 'abs',\n    tex: null,\n    ttype: tokens.UNARY,\n    notexcopy: true,\n    rewriteleftright: ['|', '|'],\n  },\n\n  {\n    input: 'det',\n    tag: 'mo',\n    output: 'det',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'exp',\n    tag: 'mo',\n    output: 'exp',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  { input: 'dim', tag: 'mo', output: 'dim', tex: null, ttype: tokens.CONST },\n  {\n    input: 'mod',\n    tag: 'mo',\n    output: 'mod',\n    tex: 'text{mod}',\n    ttype: tokens.CONST,\n    notexcopy: true,\n  },\n  {\n    input: 'gcd',\n    tag: 'mo',\n    output: 'gcd',\n    tex: null,\n    ttype: tokens.UNARY,\n    func: true,\n  },\n  {\n    input: 'lcm',\n    tag: 'mo',\n    output: 'lcm',\n    tex: 'text{lcm}',\n    ttype: tokens.UNARY,\n    func: true,\n    notexcopy: true,\n  },\n  { input: 'lub', tag: 'mo', output: 'lub', tex: null, ttype: tokens.CONST },\n  { input: 'glb', tag: 'mo', output: 'glb', tex: null, ttype: tokens.CONST },\n  {\n    input: 'min',\n    tag: 'mo',\n    output: 'min',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n  {\n    input: 'max',\n    tag: 'mo',\n    output: 'max',\n    tex: null,\n    ttype: tokens.UNDEROVER,\n  },\n\n  // arrows\n  {\n    input: 'uarr',\n    tag: 'mo',\n    output: '\\u2191',\n    tex: 'uparrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'darr',\n    tag: 'mo',\n    output: '\\u2193',\n    tex: 'downarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'rarr',\n    tag: 'mo',\n    output: '\\u2192',\n    tex: 'rightarrow',\n    ttype: tokens.CONST,\n  },\n  { input: '->', tag: 'mo', output: '\\u2192', tex: 'to', ttype: tokens.CONST },\n  {\n    input: '>->',\n    tag: 'mo',\n    output: '\\u21A3',\n    tex: 'rightarrowtail',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '->>',\n    tag: 'mo',\n    output: '\\u21A0',\n    tex: 'twoheadrightarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '>->>',\n    tag: 'mo',\n    output: '\\u2916',\n    tex: 'twoheadrightarrowtail',\n    ttype: tokens.CONST,\n  },\n  {\n    input: '|->',\n    tag: 'mo',\n    output: '\\u21A6',\n    tex: 'mapsto',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'larr',\n    tag: 'mo',\n    output: '\\u2190',\n    tex: 'leftarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'harr',\n    tag: 'mo',\n    output: '\\u2194',\n    tex: 'leftrightarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'rArr',\n    tag: 'mo',\n    output: '\\u21D2',\n    tex: 'Rightarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'lArr',\n    tag: 'mo',\n    output: '\\u21D0',\n    tex: 'Leftarrow',\n    ttype: tokens.CONST,\n  },\n  {\n    input: 'hArr',\n    tag: 'mo',\n    output: '\\u21D4',\n    tex: 'Leftrightarrow',\n    ttype: tokens.CONST,\n  },\n\n  // commands with argument\n  {\n    input: 'sqrt',\n    tag: 'msqrt',\n    output: 'sqrt',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'root',\n    tag: 'mroot',\n    output: 'root',\n    tex: null,\n    ttype: tokens.BINARY,\n  },\n  { input: 'frac', tag: 'mfrac', output: '/', tex: null, ttype: tokens.BINARY },\n  { input: '/', tag: 'mfrac', output: '/', tex: null, ttype: tokens.INFIX },\n  {\n    input: 'stackrel',\n    tag: 'mover',\n    output: 'stackrel',\n    tex: null,\n    ttype: tokens.BINARY,\n  },\n  { input: '_', tag: 'msub', output: '_', tex: null, ttype: tokens.INFIX },\n  { input: '^', tag: 'msup', output: '^', tex: null, ttype: tokens.INFIX },\n\n  {\n    input: 'cancel',\n    tag: 'menclose',\n    output: 'cancel',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'Sqrt',\n    tag: 'msqrt',\n    output: 'sqrt',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'hat',\n    tag: 'mover',\n    output: '\\u005E',\n    tex: null,\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'bar',\n    tag: 'mover',\n    output: '\\u00AF',\n    tex: 'overline',\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'vec',\n    tag: 'mover',\n    output: '\\u2192',\n    tex: null,\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'tilde',\n    tag: 'mover',\n    output: '~',\n    tex: null,\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'dot',\n    tag: 'mover',\n    output: '.',\n    tex: null,\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'ddot',\n    tag: 'mover',\n    output: '..',\n    tex: null,\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'ul',\n    tag: 'munder',\n    output: '\\u0332',\n    tex: 'underline',\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'ubrace',\n    tag: 'munder',\n    output: '\\u23DF',\n    tex: 'underbrace',\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n  {\n    input: 'obrace',\n    tag: 'mover',\n    output: '\\u23DE',\n    tex: 'overbrace',\n    ttype: tokens.UNARY,\n    acc: true,\n  },\n\n  {\n    input: 'text',\n    tag: 'mtext',\n    output: 'text',\n    tex: null,\n    ttype: tokens.TEXT,\n  },\n  {\n    input: 'mbox',\n    tag: 'mtext',\n    output: 'mbox',\n    tex: null,\n    ttype: tokens.TEXT,\n  },\n  quoteSymbol,\n  // { input: 'var', tag: 'mstyle', atname: 'fontstyle', atval: 'italic', output: 'var', tex: null, ttype: tokens.UNARY },\n  { input: 'color', tag: 'mstyle', ttype: tokens.BINARY },\n  {\n    input: 'bb',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'bold',\n    output: 'bb',\n    tex: 'mathbf',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathbf',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'bold',\n    output: 'mathbf',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'sf',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'sans-serif',\n    output: 'sf',\n    tex: 'mathsf',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathsf',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'sans-serif',\n    output: 'mathsf',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'bbb',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'double-struck',\n    output: 'bbb',\n    tex: 'mathbb',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathbb',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'double-struck',\n    output: 'mathbb',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'cc',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'script',\n    output: 'cc',\n    tex: 'mathcal',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathcal',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'script',\n    output: 'mathcal',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'tt',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'monospace',\n    output: 'tt',\n    tex: 'mathtt',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathtt',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'monospace',\n    output: 'mathtt',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n  {\n    input: 'fr',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'fraktur',\n    output: 'fr',\n    tex: 'mathfrak',\n    ttype: tokens.UNARY,\n    notexcopy: true,\n  },\n  {\n    input: 'mathfrak',\n    tag: 'mstyle',\n    atname: 'mathvariant',\n    atval: 'fraktur',\n    output: 'mathfrak',\n    tex: null,\n    ttype: tokens.UNARY,\n  },\n];\n\nlet inputSymbols = [];\n\nfunction refreshSymbols() {\n  symbols.sort((s1, s2) => (s1.input > s2.input ? 1 : -1));\n  inputSymbols = symbols.map(item => item.input);\n}\n\n// function newcommand(oldstr, newstr) {\n//   symbols.push({ input: oldstr, tag: 'mo', output: newstr, tex: null, ttype: tokens.DEFINITION });\n//   refreshSymbols();\n// }\n\n// function newsymbol(symbolobj) {\n//   symbols.push(symbolobj);\n//   refreshSymbols();\n// }\n\nfunction removeCharsAndBlanks(str, n) {\n  // remove n characters and any following blanks\n  let st;\n  if (\n    str.charAt(n) === '\\\\' &&\n    str.charAt(n + 1) !== '\\\\' &&\n    str.charAt(n + 1) !== ' '\n  ) {\n    st = str.slice(n + 1);\n  } else {\n    st = str.slice(n);\n  }\n  let i = 0;\n  while (i < st.length && st.charCodeAt(i) <= 32) {\n    i++;\n  }\n  return st.slice(i);\n}\n\nfunction position(arr, str, n) {\n  // return position >=n where str appears or would be inserted\n  // assumes arr is sorted\n  if (n === 0) {\n    let len = arr.length;\n    let m;\n    n = -1;\n    while (n + 1 < len) {\n      m = (n + len) >> 1;\n      if (arr[m] < str) {\n        n = m;\n      } else {\n        len = m;\n      }\n    }\n    return len;\n  }\n  let i = n;\n  while (i < arr.length && arr[i] < str) {\n    i++;\n  }\n  return i; // i=arr.length || arr[i]>=str\n}\n\nfunction getSymbol(str) {\n  // return maximal initial substring of str that appears in names\n  // return null if there is none\n  let newPos = 0; // new pos\n  let oldPos = 0; // old pos\n  let matchPos; // match pos\n  let st;\n  let tagst;\n  let match = '';\n  let more = true;\n  for (let i = 1; i <= str.length && more; i++) {\n    st = str.slice(0, i); // initial substring of length i\n    oldPos = newPos;\n    newPos = position(inputSymbols, st, oldPos);\n    if (\n      newPos < inputSymbols.length &&\n      str.slice(0, inputSymbols[newPos].length) === inputSymbols[newPos]\n    ) {\n      match = inputSymbols[newPos];\n      matchPos = newPos;\n      i = match.length;\n    }\n    more =\n      newPos < inputSymbols.length &&\n      str.slice(0, inputSymbols[newPos].length) >= inputSymbols[newPos];\n  }\n  previousSymbol = currentSymbol;\n  if (match !== '') {\n    currentSymbol = symbols[matchPos].ttype;\n    return symbols[matchPos];\n  }\n  // if str[0] is a digit or - return maxsubstring of digits.digits\n  currentSymbol = tokens.CONST;\n  newPos = 1;\n  st = str.slice(0, 1);\n  let integ = true;\n\n  while ('0' <= st && st <= '9' && newPos <= str.length) {\n    st = str.slice(newPos, newPos + 1);\n    newPos++;\n  }\n  if (st === '.') {\n    st = str.slice(newPos, newPos + 1);\n    if ('0' <= st && st <= '9') {\n      integ = false;\n      newPos++;\n      while ('0' <= st && st <= '9' && newPos <= str.length) {\n        st = str.slice(newPos, newPos + 1);\n        newPos++;\n      }\n    }\n  }\n  if ((integ && newPos > 1) || newPos > 2) {\n    st = str.slice(0, newPos - 1);\n    tagst = 'mn';\n  } else {\n    newPos = 2;\n    st = str.slice(0, 1); // take 1 character\n    tagst = ('A' > st || st > 'Z') && ('a' > st || st > 'z') ? 'mo' : 'mi';\n  }\n  if (st === '-' && previousSymbol === tokens.INFIX) {\n    currentSymbol = tokens.INFIX;\n    return {\n      input: st,\n      tag: tagst,\n      output: st,\n      ttype: tokens.UNARY,\n      func: true,\n      val: true,\n    };\n  }\n  return { input: st, tag: tagst, output: st, ttype: tokens.CONST, val: true }; // added val bit\n}\n\nfunction removeBrackets(node) {\n  let st;\n  if (node.charAt(0) === '{' && node.charAt(node.length - 1) === '}') {\n    let leftchop = 0;\n\n    st = node.substr(1, 5);\n    if (st === '\\\\left') {\n      st = node.charAt(6);\n      if (st === '(' || st === '[' || st === '{') {\n        leftchop = 7;\n      } else {\n        st = node.substr(6, 7);\n        if (st === '\\\\lbrace') {\n          leftchop = 13;\n        }\n      }\n    } else {\n      st = node.charAt(1);\n      if (st === '(' || st === '[') {\n        leftchop = 2;\n      }\n    }\n    if (leftchop > 0) {\n      // st = node.charAt(node.length-7);\n      st = node.substr(node.length - 8);\n      if (st === '\\\\right)}' || st === '\\\\right]}' || st === '\\\\right.}') {\n        node = `{${node.substr(leftchop)}`;\n        node = `${node.substr(0, node.length - 8)}}`;\n      } else if (st === '\\\\rbrace}') {\n        node = `{${node.substr(leftchop)}`;\n        node = `${node.substr(0, node.length - 14)}}`;\n      }\n    }\n  }\n  return node;\n}\n\n/*\n  Parsing ASCII math expressions with the following grammar\n  v ::= [A-Za-z] | greek letters | numbers | other constant symbols\n  u ::= sqrt | text | bb | other unary symbols for font commands\n  b ::= frac | root | stackrel         binary symbols\n  l ::= ( | [ | { | (: | {:            left brackets\n  r ::= ) | ] | } | :) | :}            right brackets\n  S ::= v | lEr | uS | bSS             Simple expression\n  I ::= S_S | S^S | S_S^S | S          Intermediate expression\n  E ::= IE | I/I                       Expression\n  Each terminal symbol is translated into a corresponding mathml node.\n*/\n\nlet nestingDepth;\nlet previousSymbol;\nlet currentSymbol;\n\nfunction getTeXsymbol(symb) {\n  let pre;\n  if (typeof symb.val === 'boolean' && symb.val) {\n    pre = '';\n  } else {\n    pre = '\\\\';\n  }\n  if (!symb.tex) {\n    // can't remember why this was here.  Breaks /delta /Delta to removed\n    // return (pre + (pre == '' ? symb.input : symb.input.toLowerCase()));\n    return pre + symb.input;\n  } else {\n    return pre + symb.tex;\n  }\n}\n\nfunction parseSexpr(str) {\n  // parses str and returns [node,tailstr]\n  let symbol;\n  let node;\n  let result;\n  let i;\n  // const rightvert = false,\n  let newFrag = '';\n  str = removeCharsAndBlanks(str, 0);\n  symbol = getSymbol(str); // either a token or a bracket or empty\n  if (!symbol || (symbol.ttype === tokens.RIGHTBRACKET && nestingDepth > 0)) {\n    return [null, str];\n  }\n  if (symbol.ttype === tokens.DEFINITION) {\n    str = symbol.output + removeCharsAndBlanks(str, symbol.input.length);\n    symbol = getSymbol(str);\n  }\n  switch (symbol.ttype) {\n    case tokens.UNDEROVER:\n    case tokens.CONST:\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      var texsymbol = getTeXsymbol(symbol);\n      if (texsymbol.charAt(0) === '\\\\' || symbol.tag === 'mo') {\n        return [texsymbol, str];\n      } else {\n        return [`{${texsymbol}}`, str];\n      }\n\n    case tokens.LEFTBRACKET: // read (expr+)\n      nestingDepth++;\n      str = removeCharsAndBlanks(str, symbol.input.length);\n\n      result = parseExpr(str, true);\n      nestingDepth--;\n      var leftchop = 0;\n      if (result[0].substr(0, 6) === '\\\\right') {\n        st = result[0].charAt(6);\n        if (st === ')' || st === ']' || st === '}') {\n          leftchop = 6;\n        } else if (st === '.') {\n          leftchop = 7;\n        } else {\n          st = result[0].substr(6, 7);\n          if (st === '\\\\rbrace') {\n            leftchop = 13;\n          }\n        }\n      }\n      if (leftchop > 0) {\n        result[0] = result[0].substr(leftchop);\n        if (symbol.invisible) {\n          node = `{${result[0]}}`;\n        } else {\n          node = `{${getTeXsymbol(symbol)}${result[0]}}`;\n        }\n      } else {\n        if (symbol.invisible) {\n          node = `{\\\\left.${result[0]}}`;\n        } else {\n          node = `{\\\\left${getTeXsymbol(symbol)}${result[0]}}`;\n        }\n      }\n      return [node, result[1]];\n    case tokens.TEXT:\n      if (symbol !== quoteSymbol) {\n        str = removeCharsAndBlanks(str, symbol.input.length);\n      }\n      if (str.charAt(0) === '{') {\n        i = str.indexOf('}');\n      } else if (str.charAt(0) === '(') {\n        i = str.indexOf(')');\n      } else if (str.charAt(0) === '[') {\n        i = str.indexOf(']');\n      } else if (symbol === quoteSymbol) {\n        i = str.slice(1).indexOf(\"'\") + 1;\n      } else {\n        i = 0;\n      }\n      if (i === -1) {\n        i = str.length;\n      }\n      st = str.slice(1, i);\n      if (st.charAt(0) === ' ') {\n        newFrag = '\\\\ ';\n      }\n      newFrag += `\\\\text{${st}}`;\n      if (st.charAt(st.length - 1) === ' ') {\n        newFrag += '\\\\ ';\n      }\n      str = removeCharsAndBlanks(str, i + 1);\n      return [newFrag, str];\n    case tokens.UNARY:\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      result = parseSexpr(str);\n      if (result[0] === null) {\n        return [`{${getTeXsymbol(symbol)}}`, str];\n      }\n      if (symbol.func === true) {\n        // functions hack\n        st = str.charAt(0);\n        if (\n          st === '^' ||\n          st === '_' ||\n          st === '/' ||\n          st === '|' ||\n          st === ',' ||\n          (symbol.input.length === 1 && symbol.input.match(/\\w/) && st !== '(')\n        ) {\n          return [`{${getTeXsymbol(symbol)}}`, str];\n        } else {\n          node = `{${getTeXsymbol(symbol)}{${result[0]}}}`;\n          return [node, result[1]];\n        }\n      }\n      result[0] = removeBrackets(result[0]);\n      if (symbol.input === 'sqrt') {\n        // sqrt\n        return [`\\\\sqrt{${result[0]}}`, result[1]];\n      } else if (symbol.input === 'cancel') {\n        // cancel\n        return [`\\\\cancel{${result[0]}}`, result[1]];\n      } else if (typeof symbol.rewriteleftright !== 'undefined') {\n        // abs, floor, ceil\n        return [\n          `{\\\\left${symbol.rewriteleftright[0]}${result[0]}\\\\right${\n            symbol.rewriteleftright[1]\n          }}`,\n          result[1],\n        ];\n      } else if (symbol.acc === true) {\n        // accent\n        // return ['{'+getTeXsymbol(symbol)+'{'+result[0]+'}}',result[1]];\n        return [`${getTeXsymbol(symbol)}{${result[0]}}`, result[1]];\n      } else {\n        // font change command\n        return [`{${getTeXsymbol(symbol)}{${result[0]}}}`, result[1]];\n      }\n    case tokens.BINARY:\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      result = parseSexpr(str);\n      if (result[0] === null) {\n        return [`{${getTeXsymbol(symbol)}}`, str];\n      }\n      result[0] = removeBrackets(result[0]);\n      var result2 = parseSexpr(result[1]);\n      if (result2[0] === null) {\n        return [`{${getTeXsymbol(symbol)}}`, str];\n      }\n      result2[0] = removeBrackets(result2[0]);\n      if (symbol.input === 'color') {\n        newFrag = `{\\\\color{${result[0].replace(/[{}]/g, '')}}${result2[0]}}`;\n      } else if (symbol.input === 'root') {\n        newFrag = `{\\\\sqrt[${result[0]}]{${result2[0]}}}`;\n      } else {\n        newFrag = `{${getTeXsymbol(symbol)}{${result[0]}}{${result2[0]}}}`;\n      }\n      return [newFrag, result2[1]];\n    case tokens.INFIX:\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      return [symbol.output, str];\n    case tokens.SPACE:\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      return [`{\\\\quad\\\\text{${symbol.input}}\\\\quad}`, str];\n    case tokens.LEFTRIGHT:\n      //    if (rightvert) return [null,str]; else rightvert = true;\n      nestingDepth++;\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      result = parseExpr(str, false);\n      nestingDepth--;\n      var st = '';\n      st = result[0].charAt(result[0].length - 1);\n      // alert(result[0].lastChild+'***'+st);\n      if (st === '|') {\n        // its an absolute value subterm\n        node = `{\\\\left|${result[0]}}`;\n        return [node, result[1]];\n      } else {\n        // the '|' is a \\mid\n        node = '{\\\\mid}';\n        return [node, str];\n      }\n\n    default:\n      // alert('default');\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      return [`{${getTeXsymbol(symbol)}}`, str];\n  }\n}\n\nfunction parseIexpr(str) {\n  let sym2;\n  let node;\n  let result;\n  str = removeCharsAndBlanks(str, 0);\n  const sym1 = getSymbol(str);\n  result = parseSexpr(str);\n  node = result[0];\n  str = result[1];\n  const symbol = getSymbol(str);\n  if (symbol.ttype === tokens.INFIX && symbol.input !== '/') {\n    str = removeCharsAndBlanks(str, symbol.input.length);\n    // if (symbol.input === '/') result = parseIexpr(str); else\n    result = parseSexpr(str);\n    // show box in place of missing argument\n    if (result[0] === null) {\n      result[0] = '{}';\n    } else {\n      result[0] = removeBrackets(result[0]);\n    }\n    str = result[1];\n    //    if (symbol.input === '/') removeBrackets(node);\n    if (symbol.input === '_') {\n      sym2 = getSymbol(str);\n      if (sym2.input === '^') {\n        str = removeCharsAndBlanks(str, sym2.input.length);\n        const res2 = parseSexpr(str);\n        res2[0] = removeBrackets(res2[0]);\n        str = res2[1];\n        node = `{${node}`;\n        node += `_{${result[0]}}`;\n        node += `^{${res2[0]}}`;\n        node += '}';\n      } else {\n        node += `_{${result[0]}}`;\n      }\n    } else {\n      // must be ^\n      // node = '{'+node+'}^{'+result[0]+'}';\n      node = `${node}^{${result[0]}}`;\n    }\n    if (typeof sym1.func !== 'undefined' && sym1.func) {\n      sym2 = getSymbol(str);\n      if (sym2.ttype !== tokens.INFIX && sym2.ttype !== tokens.RIGHTBRACKET) {\n        result = parseIexpr(str);\n        node = `{${node}${result[0]}}`;\n        str = result[1];\n      }\n    }\n  }\n\n  return [node, str];\n}\n\nfunction parseExpr(str, rightbracket) {\n  let symbol;\n  let node;\n  let result;\n  let i;\n  // const nodeList = [];\n  let newFrag = '';\n  let addedright = false;\n  do {\n    str = removeCharsAndBlanks(str, 0);\n    result = parseIexpr(str);\n    node = result[0];\n    str = result[1];\n    symbol = getSymbol(str);\n    if (symbol.ttype === tokens.INFIX && symbol.input === '/') {\n      str = removeCharsAndBlanks(str, symbol.input.length);\n      result = parseIexpr(str);\n\n      // show box in place of missing argument\n      if (result[0] === null) {\n        result[0] = '{}';\n      } else {\n        result[0] = removeBrackets(result[0]);\n      }\n      str = result[1];\n      node = removeBrackets(node);\n      node = `${'\\\\frac' + '{'}${node}}`;\n      node += `{${result[0]}}`;\n      newFrag += node;\n      symbol = getSymbol(str);\n    } else if (node) {\n      newFrag += node;\n    }\n  } while (\n    ((symbol.ttype !== tokens.RIGHTBRACKET &&\n      (symbol.ttype !== tokens.LEFTRIGHT || rightbracket)) ||\n      nestingDepth === 0) &&\n    symbol &&\n    symbol.output\n  );\n  if (\n    symbol.ttype === tokens.RIGHTBRACKET ||\n    symbol.ttype === tokens.LEFTRIGHT\n  ) {\n    //    if (nestingDepth > 0) nestingDepth--;\n    const len = newFrag.length;\n    if (len > 2 && newFrag.charAt(0) === '{' && newFrag.indexOf(',') > 0) {\n      // could be matrix (total rewrite from .js)\n      const right = newFrag.charAt(len - 2);\n      if (right === ')' || right === ']') {\n        const left = newFrag.charAt(6);\n        if (\n          (left === '(' && right === ')' && symbol.output !== '}') ||\n          (left === '[' && right === ']')\n        ) {\n          let mxout = '\\\\matrix{';\n          const pos = new Array(); // position of commas\n          pos.push(0);\n          let matrix = true;\n          let mxnestingd = 0;\n          const subpos = [];\n          subpos[0] = [0];\n          let lastsubposstart = 0;\n          let mxanynestingd = 0;\n          for (i = 1; i < len - 1; i++) {\n            if (newFrag.charAt(i) === left) {\n              mxnestingd++;\n            }\n            if (newFrag.charAt(i) === right) {\n              mxnestingd--;\n              if (\n                mxnestingd === 0 &&\n                newFrag.charAt(i + 2) === ',' &&\n                newFrag.charAt(i + 3) === '{'\n              ) {\n                pos.push(i + 2);\n                lastsubposstart = i + 2;\n                subpos[lastsubposstart] = [i + 2];\n              }\n            }\n            if (\n              newFrag.charAt(i) === '[' ||\n              newFrag.charAt(i) === '(' ||\n              newFrag.charAt(i) === '{'\n            ) {\n              mxanynestingd++;\n            }\n            if (\n              newFrag.charAt(i) === ']' ||\n              newFrag.charAt(i) === ')' ||\n              newFrag.charAt(i) === '}'\n            ) {\n              mxanynestingd--;\n            }\n            if (newFrag.charAt(i) === ',' && mxanynestingd === 1) {\n              subpos[lastsubposstart].push(i);\n            }\n            if (mxanynestingd < 0) {\n              // happens at the end of the row\n              if (lastsubposstart === i + 1) {\n                // if at end of row, skip to next row\n                i++;\n              } else {\n                // misformed something - abandon treating as a matrix\n                matrix = false;\n              }\n            }\n          }\n\n          pos.push(len);\n          let lastmxsubcnt = -1;\n          if (mxnestingd === 0 && pos.length > 0 && matrix) {\n            for (i = 0; i < pos.length - 1; i++) {\n              if (i > 0) {\n                mxout += '\\\\\\\\';\n              }\n              let subarr;\n              if (i === 0) {\n                // subarr = newFrag.substr(pos[i]+7,pos[i+1]-pos[i]-15).split(',');\n                if (subpos[pos[i]].length === 1) {\n                  subarr = [\n                    newFrag.substr(pos[i] + 7, pos[i + 1] - pos[i] - 15),\n                  ];\n                } else {\n                  const subarr = [\n                    newFrag.substring(pos[i] + 7, subpos[pos[i]][1]),\n                  ];\n                  for (let j = 2; j < subpos[pos[i]].length; j++) {\n                    subarr.push(\n                      newFrag.substring(\n                        subpos[pos[i]][j - 1] + 1,\n                        subpos[pos[i]][j],\n                      ),\n                    );\n                  }\n                  subarr.push(\n                    newFrag.substring(\n                      subpos[pos[i]][subpos[pos[i]].length - 1] + 1,\n                      pos[i + 1] - 8,\n                    ),\n                  );\n                }\n              } else {\n                // const subarr = newFrag.substr(pos[i]+8,pos[i+1]-pos[i]-16).split(',');\n                if (subpos[pos[i]].length === 1) {\n                  subarr = [\n                    newFrag.substr(pos[i] + 8, pos[i + 1] - pos[i] - 16),\n                  ];\n                } else {\n                  subarr = [newFrag.substring(pos[i] + 8, subpos[pos[i]][1])];\n                  for (let j = 2; j < subpos[pos[i]].length; j++) {\n                    subarr.push(\n                      newFrag.substring(\n                        subpos[pos[i]][j - 1] + 1,\n                        subpos[pos[i]][j],\n                      ),\n                    );\n                  }\n                  subarr.push(\n                    newFrag.substring(\n                      subpos[pos[i]][subpos[pos[i]].length - 1] + 1,\n                      pos[i + 1] - 8,\n                    ),\n                  );\n                }\n              }\n              if (lastmxsubcnt > 0 && subarr.length !== lastmxsubcnt) {\n                matrix = false;\n              } else if (lastmxsubcnt === -1) {\n                lastmxsubcnt = subarr.length;\n              }\n              mxout += subarr.join('&');\n            }\n          }\n          mxout += '}';\n\n          if (matrix) {\n            newFrag = mxout;\n          }\n        }\n      }\n    }\n\n    str = removeCharsAndBlanks(str, symbol.input.length);\n    if (typeof symbol.invisible !== 'boolean' || !symbol.invisible) {\n      node = `\\\\right${getTeXsymbol(symbol)}`; // AMcreateMmlNode('mo',document.createTextNode(symbol.output));\n      newFrag += node;\n      addedright = true;\n    } else {\n      newFrag += '\\\\right.';\n      addedright = true;\n    }\n  }\n  if (nestingDepth > 0 && !addedright) {\n    newFrag += '\\\\right.'; // adjust for non-matching left brackets\n    // todo: adjust for non-matching right brackets\n  }\n\n  return [newFrag, str];\n}\n\n/** @param {string} str */\nexport default function asciimathToTex(str) {\n  nestingDepth = 0;\n  str = str\n    .replace(/(&nbsp;|\\u00a0|&#160;)/g, '')\n    .replace(/&gt;/g, '>')\n    .replace(/&lt;/g, '<');\n  if (!str.match(/\\S/)) {\n    return '';\n  }\n  return parseExpr(str.replace(/^\\s+/g, ''), false)[0];\n}\n\n{\n  const otherSymbols = symbols\n    .filter(item => item.tex && item.notexcopy !== true)\n    .map(item => ({\n      input: item.tex,\n      tag: item.tag,\n      output: item.output,\n      ttype: item.ttype,\n      acc: item.acc || false,\n    }));\n  symbols.push(...otherSymbols);\n\n  refreshSymbols();\n}\n","import katex from 'katex';\nimport renderMathInElement from 'katex/dist/contrib/auto-render';\nimport showdown from 'showdown';\nimport asciimathToTex from './asciimath-to-tex';\n\nif (process.env.TARGET === 'cjs') {\n  const { JSDOM } = require('jsdom');\n  const jsdom = new JSDOM();\n  global.DOMParser = jsdom.window.DOMParser;\n  global.document = jsdom.window.document;\n}\n\n/**\n * @param {object} opts\n * @param {NodeListOf<Element>} opts.elements\n * @param opts.config\n * @param {boolean} opts.isAsciimath\n */\nfunction renderBlockElements({ elements, config, isAsciimath }) {\n  if (!elements.length) {\n    return;\n  }\n\n  elements.forEach(element => {\n    const input = element.textContent;\n    const latex = isAsciimath ? asciimathToTex(input) : input;\n    const html = katex.renderToString(latex, config);\n    element.parentNode.outerHTML = `<span title=\"${input.trim()}\">${html}</span>`;\n  });\n}\n\n/**\n * https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n * @param {string} str\n * @returns {string} regexp escaped string\n */\nfunction escapeRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\$^|]/g, '\\\\$&');\n}\n\n// katex config\nconst getConfig = (config = {}) => ({\n  displayMode: true,\n  throwOnError: false, // fail silently\n  errorColor: '#ff0000',\n  ...config,\n  delimiters: [\n    { left: '$$', right: '$$', display: false },\n    { left: '~', right: '~', display: false, asciimath: true },\n  ].concat(config.delimiters || []),\n});\n\nconst showdownKatex = userConfig => () => {\n  const parser = new DOMParser();\n  const config = getConfig(userConfig);\n  const asciimathDelimiters = config.delimiters\n    .filter(item => item.asciimath)\n    .map(({ left, right }) => {\n      const test = new RegExp(\n        `${escapeRegExp(left)}(.*?)${escapeRegExp(right)}`,\n        'g',\n      );\n      const replacer = (match, asciimath) => {\n        return `${left}${asciimathToTex(asciimath)}${right}`;\n      };\n      return { test, replacer };\n    });\n\n  return [\n    {\n      type: 'output',\n      filter(html = '') {\n        // parse html\n        const wrapper = parser.parseFromString(html, 'text/html').body;\n\n        if (asciimathDelimiters.length) {\n          // convert inline asciimath to inline latex\n          // ignore anything in code and pre elements\n          wrapper.querySelectorAll(':not(code):not(pre)').forEach(el => {\n            /** @type Text[] */\n            const textNodes = [...el.childNodes].filter(\n              // skip \"empty\" text nodes\n              node => node.nodeName === '#text' && node.nodeValue.trim(),\n            );\n\n            textNodes.forEach(node => {\n              const newText = asciimathDelimiters.reduce(\n                (acc, { test, replacer }) => acc.replace(test, replacer),\n                node.nodeValue,\n              );\n              node.nodeValue = newText;\n            });\n          });\n        }\n\n        // find the math in code blocks\n        const latex = wrapper.querySelectorAll('code.latex.language-latex');\n        const asciimath = wrapper.querySelectorAll(\n          'code.asciimath.language-asciimath',\n        );\n\n        renderBlockElements({ elements: latex, config });\n        renderBlockElements({ elements: asciimath, config, isAsciimath: true });\n\n        renderMathInElement(wrapper, config);\n\n        // return html without the wrapper\n        return wrapper.innerHTML;\n      },\n    },\n  ];\n};\n\n// register extension with default config\nshowdown.extension('showdown-katex', showdownKatex());\n\nexport default showdownKatex;\n"],"names":["this","katex","tokens","CONST","UNARY","BINARY","INFIX","LEFTBRACKET","RIGHTBRACKET","SPACE","UNDEROVER","DEFINITION","LEFTRIGHT","TEXT","quoteSymbol","input","tag","output","tex","ttype","symbols","val","notexcopy","invisible","func","rewriteleftright","acc","atname","atval","inputSymbols","refreshSymbols","sort","s1","s2","map","item","removeCharsAndBlanks","str","n","st","charAt","slice","i","length","charCodeAt","position","arr","len","m","getSymbol","newPos","oldPos","matchPos","tagst","match","more","previousSymbol","currentSymbol","integ","removeBrackets","node","leftchop","substr","nestingDepth","getTeXsymbol","symb","pre","parseSexpr","symbol","result","newFrag","texsymbol","parseExpr","indexOf","result2","replace","parseIexpr","sym2","sym1","res2","rightbracket","addedright","right","left","mxout","pos","Array","push","matrix","mxnestingd","subpos","lastsubposstart","mxanynestingd","lastmxsubcnt","subarr","substring","j","join","asciimathToTex","otherSymbols","filter","renderBlockElements","elements","config","isAsciimath","forEach","element","textContent","latex","html","renderToString","parentNode","outerHTML","trim","escapeRegExp","getConfig","displayMode","throwOnError","errorColor","delimiters","display","asciimath","concat","showdownKatex","userConfig","parser","DOMParser","asciimathDelimiters","test","RegExp","replacer","type","wrapper","parseFromString","body","querySelectorAll","el","textNodes","childNodes","nodeName","nodeValue","newText","reduce","renderMathInElement","innerHTML","showdown","extension"],"mappings":"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,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MACrC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MACrC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACtC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACtC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CA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AAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MAChC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAA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CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MAChC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MACxC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MAC5C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACnC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACh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CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACnC,MAAM,EAAE,CAAC,CAAC,EAAE,OAA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AI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,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O,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MAC5C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC;MACtC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC;MACtC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MAC5C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE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EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC7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C,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,E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ACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;MACpC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;MAClC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC;MAC1C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,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E,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACzC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACpC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KACrC;IACD,iBAAiB,EAAE;MACjB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MAC7C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MACjC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;MAC7C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,O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AE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;MAC5C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;MAC5C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACpD,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACpD,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;MACvC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACpD,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACpD,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9C,K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,CAAC,EAAE,IAAI,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACpC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;MACvC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACjC,IAAI,EAAE,CAAC,CAA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,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAC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C;MACjC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MACxC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;MAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,O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,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACrC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC1B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACtC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAChC,KAAK,EAAE,CAAC,CAAC,EAA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AAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;EACnD,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;EACnD,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;EACnD,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;EACnD,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;EACnD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,WAAW,EAAE,2BAA2B,CAAC,CAAC;EACtD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;EACpD,WAAW,CAAC,SA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EnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,eAAe;;IAEzB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,MAAM,EAAE,SAAS;;IAEjB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SAAS;;IAEnB,QAAQ,EAAE,SA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EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACvC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;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MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACnC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACnC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACnC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACnC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACxC,IAAI,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACxC,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE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AAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;EACpC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC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AC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACjC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,O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,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACvC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EA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EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,IAAI,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,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAA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I,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,E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AAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC9C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACxC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACxC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACzC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EAC/C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACzC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EAC/C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACzC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC/C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,MAAM,EAAE,CAAC,CAAC,E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AAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC7C,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC,IAAI,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACtC,IAAI,MAAM,EAAE,CAAC,CAAC,OAAO,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AAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,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IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EAChD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;EAC/C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACjD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EAChD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACvD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACvD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EACnD,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC;EAC5C,GAAG;EACH,EAAE,cAAc,EAAE;EAClB,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC;EACxC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EAChD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EAChD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;EAC3C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;EAC/C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACjD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EAChD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACvD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EACvD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;EACjD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACxD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EAClD,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC;EACnD,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC;EAC5C,GAAG;EACH,EAAE,gBAAgB,EAAE;EACpB,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACxC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC/B,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAClC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,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,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EAC5C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACtC,IAAI,KAAK,EAAE,CAAC,CAAC,EAA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C,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;EACrC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IAAI,IAAI,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC/C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;EAC3C,IA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,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACnC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC9B,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACpC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,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EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,EAAE,GAAG;EACV,EAAE,GAAG,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Q,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,oBAAoB;EAChC;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc;EAC1B;EACA,EAAE,QAAQ,EAAE,cAAc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"}